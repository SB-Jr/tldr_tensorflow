node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "global_step"
    }
  }
}
node {
  name: "global_step/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/Assign"
  op: "AssignVariableOp"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond"
  op: "If"
  input: "global_step/VarIsInitializedOp"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_RESOURCE
        type: DT_INT64
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_INT64
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "global_step_cond_false_13462"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "global_step_cond_true_13461"
      }
    }
  }
}
node {
  name: "global_step/cond/Identity"
  op: "Identity"
  input: "global_step/cond"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/add"
  op: "AddV2"
  input: "global_step/cond/Identity"
  input: "global_step/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "normalize_element/component_0"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 400
          }
        }
        tensor_content: "fffff\006X@\315\314\314\314\314\254W@333333\007@\000\000\000\000\000\2001@fffff&C@\232\231\231\231\231\231B@\000\000\000\000\000\2002@33333\2631@\000\000\000\000\000\200V@\315\314\314\314\314,W@\000\000\000\000\000\000Y@\315\314\314\314\314\014M@\000\000\000\000\000\000V@fffff&U@fffff\246T@\232\231\231\231\231YX@ffffff\032@\000\000\000\000\000\300R@\232\231\231\231\231\271T@\315\314\314\314\314\014L@ffffff5@333333>@\315\314\314\314\314\354T@ffffffV@\000\000\000\000\000\000Y@\000\000\000\000\000\000K@\315\314\314\314\314LP@fffff&W@\232\231\231\231\231YX@fffff\246Q@33333\223U@\232\231\231\231\231yR@fffff&W@\232\231\231\231\2319S@\000\000\000\000\000@W@33333SW@33333\263V@\000\000\000\000\000\0001@\315\314\314\314\314\254X@\000\000\000\000\000`W@\315\314\314\314\314\314M@\232\231\231\231\231YU@\315\314\314\314\314\214X@\232\231\231\231\231\271X@\315\314\314\314\314\314S@\000\000\000\000\000\240U@33333\263N@33333\263X@\000\000\000\000\000\000Y@\315\314\314\314\314LB@\315\314\314\314\314lX@\000\000\000\000\000\000Y@\232\231\231\231\231\031W@33333\363W@\000\000\000\000\000\000Y@\315\314\314\314\314,P@\000\000\000\000\000\2001@fffff\206X@33333\363A@fffff\246T@\315\314\314\314\314\354W@fffff\346P@\000\000\000\000\000\340T@\000\000\000\000\000@C@\232\231\231\231\231\331W@\232\231\231\231\231YP@\315\314\314\314\314\014W@fffff&V@\000\000\000\000\000\000Y@\315\314\314\314\314\214D@\000\000\000\000\000\000Y@\232\231\231\231\231yW@\000\000\000\000\000 S@\232\231\231\231\231\031X@\232\231\231\231\231\331E@\000\000\000\000\000\000Y@\315\314\314\314\314LB@\315\314\314\314\314\214N@\315\314\314\314\314L6@\315\314\314\314\314\014C@fffff\246@@\000\000\000\000\000\000V@fffff\006Q@33333\263;@\315\314\314\314\314\3144@\315\314\314\314\314\314<@\232\231\231\231\231\031W@\000\000\000\000\000\000Y@\315\314\314\314\314lS@333333X@\232\231\231\231\231YR@\000\000\000\000\000\000Y@\000\000\000\000\000\000Y@fffffFU@\232\231\231\231\231yX@fffff\006U@\315\314\314\314\314\214F@fffff\3466@\000\000\000\000\000\200X@33333\263W@\232\231\231\231\231YG@fffff\346V@\232\231\231\231\231\271R@\232\231\231\231\231\231Q@\232\231\231\231\231\271U@333333E@\000\000\000\000\000\000\032@33333\223W@\232\231\231\231\231yW@\000\000\000\000\000\000Y@\000\000\000\000\000 V@\315\314\314\314\314\3148@ffffff2@\000\000\000\000\000\000X@\232\231\231\231\231\231Q@fffff\346<@\315\314\314\314\314\3142@33333s@@\232\231\231\231\231\371U@333333V@\315\314\314\314\314L?@\000\000\000\000\000@S@\000\000\000\000\000@X@\000\000\000\000\000\000Y@\232\231\231\231\231YM@\000\000\000\000\000\000Y@\315\314\314\314\314\014D@33333\323V@\315\314\314\314\314\314J@333333L@\000\000\000\000\000\240T@33333sB@\232\231\231\231\231\231J@fffffFV@\315\314\314\314\314\014X@\315\314\314\314\314\354S@fffff\306X@33333\263X@\232\231\231\231\231\031<@33333\323T@333333D@\232\231\231\231\231\031@@\000\000\000\000\000@M@\315\314\314\314\314\314J@\000\000\000\000\000\000Y@\315\314\314\314\314L7@\232\231\231\231\231\231V@33333sA@\000\000\000\000\000\000@@333333F@ffffff/@33333\363D@\000\000\000\000\000\200O@\000\000\000\000\000\340V@\000\000\000\000\000 U@33333\323U@33333\323X@\232\231\231\231\231\371S@fffffFQ@\232\231\231\231\231\331W@fffff\346F@\315\314\314\314\314\354V@33333sS@\232\231\231\231\2319X@\232\231\231\231\231\231@@\315\314\314\314\314\314#@\232\231\231\231\231\031O@33333\223X@ffffff7@\315\314\314\314\314lU@333333M@fffff&X@33333\223Q@\000\000\000\000\000\000X@33333\263R@fffff\206X@\232\231\231\231\231yX@fffff\346L@33333sT@\000\000\000\000\000\000Y@\000\000\000\000\000`U@fffff&@@\315\314\314\314\314\314V@33333\223V@\000\000\000\000\000\300T@\000\000\000\000\000\000Y@\000\000\000\000\000\240U@33333\263;@\232\231\231\231\231yX@\000\000\000\000\000\240T@\315\314\314\314\314\254S@fffff\346Q@\232\231\231\231\231\231G@\000\000\000\000\000\000Y@\315\314\314\314\314lQ@\232\231\231\231\231\031@@\232\231\231\231\231YV@\232\231\231\231\231YM@333333T@\000\000\000\000\000\240W@\232\231\231\231\231\271S@fffff\346N@\315\314\314\314\314LV@fffff\246P@33333sW@\000\000\000\000\000@A@\315\314\314\314\314LE@\000\000\000\000\000\240W@333333K@\000\000\000\000\000\000Y@\315\314\314\314\314\014B@\315\314\314\314\314\214X@\315\314\314\314\314\214@@\000\000\000\000\000\2002@\000\000\000\000\000\200?@\000\000\000\000\000\000X@\000\000\000\000\000\000Y@\232\231\231\231\231\331W@33333SW@\000\000\000\000\000`Q@\000\000\000\000\000\000Y@\000\000\000\000\000\000Y@33333\023T@33333SX@\000\000\000\000\000\000Y@\232\231\231\231\231\331W@\315\314\314\314\314\314S@\000\000\000\000\000\000H@\232\231\231\231\2319W@\315\314\314\314\314L=@\232\231\231\231\231\031=@fffff\006W@\315\314\314\314\314L0@33333\223W@\000\000\000\000\000\000Y@33333\363V@\315\314\314\314\314\014E@33333\263X@\232\231\231\231\231\231G@333333\037@\000\000\000\000\000\000Y@\315\314\314\314\314\214P@\232\231\231\231\231\031?@\232\231\231\231\231\331T@\315\314\314\314\314\314T@ffffffQ@33333\263X@\315\314\314\314\314lT@\000\000\000\000\000\200W@333333Q@33333\323W@\315\314\314\314\314,U@\315\314\314\314\314\314\030@\315\314\314\314\314,S@\000\000\000\000\000\000Y@33333\363S@\315\314\314\314\314,Q@\000\000\000\000\000\240P@\000\000\000\000\000\000Y@\232\231\231\231\231\231#@\315\314\314\314\314\014X@ffffffW@fffff\006X@33333\263F@\000\000\000\000\000\000U@\232\231\231\231\231\331H@fffff&W@ffffffL@fffff&K@33333\263V@fffff\306V@333333\037@\000\000\000\000\000\300W@fffff\246H@fffff\006U@\232\231\231\231\231\0315@fffffFX@\315\314\314\314\314\014@@\000\000\000\000\000\300@@fffff\206W@\232\231\231\231\231\371V@fffff\246Q@\000\000\000\000\000\000Y@\000\000\000\000\000\000M@\232\231\231\231\231YX@\232\231\231\231\2319W@\315\314\314\314\314,R@fffff\346I@\232\231\231\231\231\331F@\000\000\000\000\000@A@33333sV@fffff\3465@\000\000\000\000\000 R@fffff\346?@\232\231\231\231\231\031E@\000\000\000\000\000@X@\315\314\314\314\314\214X@\000\000\000\000\000\300P@ffffff<@\315\314\314\314\314LX@\000\000\000\000\000@J@\232\231\231\231\231YU@\000\000\000\000\000\000Y@\000\000\000\000\000\000Y@\232\231\231\231\231\331J@\000\000\000\000\000 S@fffff\246W@\232\231\231\231\231YW@\315\314\314\314\314\314W@333333T@\232\231\231\231\231\031?@\000\000\000\000\000@D@fffff&G@fffff&K@\232\231\231\231\231\371U@\315\314\314\314\314\014X@\000\000\000\000\000\240X@33333sW@\232\231\231\231\2319R@\232\231\231\231\231\0314@\000\000\000\000\000\000@@fffff\246B@\232\231\231\231\231\231X@3333331@33333SS@\232\231\231\231\231\371U@\000\000\000\000\000\000Y@\232\231\231\231\231\271X@\315\314\314\314\314\314G@fffff\346@@333333\033@33333\223S@\000\000\000\000\000@X@\000\000\000\000\000\000Y@\000\000\000\000\000\000S@\000\000\000\000\000\300M@\000\000\000\000\000\200F@\000\000\000\000\000`X@fffff\346<@fffff&D@\315\314\314\314\314\3145@\000\000\000\000\000\240R@\315\314\314\314\314\314>@\000\000\000\000\000\300N@33333sX@33333sJ@\000\000\000\000\000\2003@fffff\206U@\315\314\314\314\314lS@\232\231\231\231\231yX@fffff\346;@\000\000\000\000\000\300W@33333\363I@\000\000\000\000\000\000Y@\232\231\231\231\231\031V@\232\231\231\231\231\031@@fffff\206P@33333\223R@\315\314\314\314\314\214Q@fffff&J@\232\231\231\231\231YL@\315\314\314\314\314\214H@fffffFR@\315\314\314\314\314LB@\315\314\314\314\314\214X@\232\231\231\231\231\331U@fffff\346W@\232\231\231\231\231\331V@33333sC@\232\231\231\231\231\331A@\315\314\314\314\314\314F@\232\231\231\231\231\231;@ffffff-@\232\231\231\231\231\371V@33333SX@\315\314\314\314\314LP@\315\314\314\314\314\254W@\000\000\000\000\000\000Y@\232\231\231\231\231\031A@\000\000\000\000\000\000$@33333\323U@\232\231\231\231\231\231.@ffffff5@\315\314\314\314\314\314+@33333SR@\315\314\314\314\314\314V@\000\000\000\000\000\000Y@\000\000\000\000\000\000V@\000\000\000\000\000\000\030@\000\000\000\000\000 P@fffffFP@\232\231\231\231\231\231X@\000\000\000\000\000\000Y@\000\000\000\000\000\000Y@333333=@33333SP@\000\000\000\000\000\000L@\000\000\000\000\000\200T@fffff\206S@ffffff\032@"
      }
    }
  }
}
node {
  name: "normalize_element/component_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 400
          }
        }
        tensor_content: "H\277}\0358g\002@\2343\242\2647\270*@\000\343\0314\364O\300?\337\333\364g?R\304?\t3m\377\312J\243?\2343\242\2647\370\242?\354\027\354\206m\213\262?\232\231\231\231\231\231\271?\345f\270\001\237?\023@\310$#gaO\303?\314]K\310\007-C@\257\261KTo\r\254?z1\224\023\355*\022@M\363\216St$\351?\200C\250R\263G\014@\207\242@\237\310\223\363?\200\202\213\0255\230\266??\035\217\031\250\214\014@\320,\tPS\313\013@>\350\331\254\372\\\255?\215\013\007B\262\200\251?+\030\225\324\th\306?\303G\304\224H\002\037@F\266\363\375\324\210 @_$\264\345\\\252\026@\345\355\010\247\005/\306?Hm\342\344~\207\302?\000:\314\227\027`\364?4\235\235\014\216\222\031@\331\003\255\300\220\225!@B>\350\331\254\372\254?\375M(D\300!\244?\265\211\223\373\035J!@T\313\326\372\"\241\335?1\010\254\034Zd\007@\372~j\274t\223.@\231d\344,\354i\367?\241\241\177\202\213\025\323?\233\341\006|~\250\"@\203i\030>\"\246\324?3\254\342\215\314#\237?\210\205Z\323\274\303D@\267\234KqU\331\341?k`\253\004\213\303\325?<I\272f\362\315\374?\206\224\237T\373t\330?R~R\355\323\361\270?\204*5{\240\245#@\202sF\224\366\346\'@\270\222\035\033\201x\265?\237q\341@H\026\363?\215\234\205=\355\360\367?[\323\274\343\024\r6@\202\250\373\000\2446\271?\200\274W\255L\370\037@\316N\006G\311K\027@\265\333.4\327i\310?\201[w\363T\007\364?\'1\010\254\034Z\264?l\317,\tPS\303?P6\345\n\357\362\002@\021p\010Uj\226\022@:\006d\257w\177\274?\245\210\014\253x#\243?$EdX\305\033\325?\317\203\273\263v[\037@\004s\364\370\275M\267?\224j\237\216\307\014\330?Ve\337\025\301_\"@)\\\217\302\365(\264?\273\270\215\006\360v\"@G\254\305\247\000\310\"@\377\t.V\324`\312?\272\325s\322\373&\031@\266l\255/\022\332\316?\376e\367\344a\221I@V\202\305\341\314\257\351?5\007\010\346\350\361\233?\331\231B\3475v\301?J\265O\307c\006\252?\225\361\3573.\034\310?->\005\300x\006\362?\311v\276\237\032/\341?Uj\366@+0\264?X4\235\235\014\216\202?)\320\'\362$\351\306?sh\221\355|?\275?\331=yX\250\0252@\025\000\343\0314\364\343?v\345\263<\017\256\026@-\262\235\357\247\306\253?\320\263Y\365\271Z.@\325s\322\373\306\227\023@\335A\354L\2413\034@]\376C\372\355\2333@\201&\302\206\247W\262?\252\t\242\356\003\220\252?\307\021k\361)\000\246?X4\235\235\014\216\312?V}\256\266b\177\345?\312\246\\\341].\242?\321W\220f,\232\341?\242\271N#-\325\026@I\272f\362\3156\325?RD\206U\274\221\343?\r\032\372\'\270X\311?\0221%\222\350e\304?\344\024\035\311\345\037$@\313\204_\352\347M\370?A\361c\314]\013+@W`\310\352V\317\301?\222W\347\030\220\275\216?\270\257\003\347\214(\265?>\350\331\254\372|\027@\361\272~\301n\330\246?\261KTo\rl\323?\270\222\035\033\201x\215?\331Z_$\264\345\254?\261U\202\305\341\254\022@\367\356\217\367\252\225\356?\375j\016\020\314\321\243?\315\222\0005\265\354\026@\200\267@\202\342\'\'@}\263\315\215\351\t\313?-!\037\364lV\275?b\204\360h\343\010\003@j\207\277&k\324\325?d#\020\257\353\027\332?\276\331\346\306\364\204\245?\356_YiR\n\232?\315@e\374\373\214\337?h\005\206\254n\365\264?G\376`\340\271W\023@\033\236^)\313\3609@\350\361{\233\376l\r@\2000\360\334{\270\314?\253>W[\261\277/@2\311\310Y\330\323\324?\232\217kC\3058\237?\004\342u\375\202\335\260?\316\337\204B\004\034\242?jH\334c\351C\247?\347\000\301\034=~\257?\347\005\330G\247\256\254?\3122\304\261.bR@\255n\365\234\364\276\241?\345,\354i\207\277\320?\217\307\014T\306\277\325?\006\r\375\023\\\254\250?\261U\202\305\341\314\257?\354\273\"\370\337J\226?H\371I\265O\007\003@MJA\267\2274\246?\023\355*\244\374\244\340?D\377\004\027+j\344?\322\000\336\002\t\n\360?\345\355\010\247\005\177 @\017\227\034wJ\007\303?b\234\277\t\205\010\260?c\177\331=y\270/@\3367\276\366\314\222\240?d\321tv2\270\363?0L\246\nF\325#@\004[%X\034\316\371?\r\340-\220\240\370\241?0\330\r\333\026e\226?\3745Y\243\036\242\261?\177\244\210\014\253x\307?n4\200\267@\202\242?\331Z_$\264\345\352?\325\347j+\366\227\255?Dio\360\205\331#@\033\323\023\226x@\251?\240\211\260\341\351\225\320?\273\'\017\013\265\306\031@\217\344\362\037\322\3170@\315\222\0005\265l\341?v\310\315p\003>\277?\016\303G\304\224H\341?b\241\3264\357x,@\014\032\372\'\270X\315?\261\21272\217\374\301?\220\245\017]P\337\320?\034_{fI\200\345?;\3745Y\243\236\032@q\254\213\333h\340,@Q\367\001Hm\002\023@\022\245\275\301\027&\223?\313\271\024W\225\235\035@\007_\230L\025,\025@x\234\242#\271\324B@\342\222\343N\351`\340?\215\264T\336\216p\272?\264Y\365\271\332\252,@(D\300!T\251\261?\316\245\270\252\354\273\242?\362v\204\323\202\027\341?Tt$\227\377\220\236?\010=\233U\237\253\343?\000\005\027+j\260\021@\020@j\023\'\367\233?\327\206\212q\376&\344?jH\334c\351C\353?\321W\220f,\232\266?\204\206\376\t.V\274?+j0\r\303G\244?\206U\274\221y\344\321?\177M\326\250\207h\352?\032\335A\354L\241\273?yX\2505\315\0139@r\304Z|\n\200\221?\273,&6\037W\375?\035\376\232\254Q\017\261?{\332\341\257\311\032\265?\2201w-!\037\224?\0054\0216<\3158@\341\013\223\251\202\221\n@t\315\344\233mn\314?HP\374\030s\327,@D\372\355\353\3009\347?\261U\202\305\341\314\366?}\320\263Y\365\031,@\237v\370k\262f @\353s\265\025\373\013.@?\313\363\340\356\254\365??\343\302\201\220\034 @\323\366\257\2544)\311?,`\002\267\356\346\251?\347\343\332P1\316\267?[_$\264\345\334\360?\266\370\024\000\343\031\300?\206\346:\215\264T\306?9b->\005\300\304?\267E\231\r2\311\314?\326\305m4\200\337F@T\336\216pZ\360\001@\366]\021\374o%\323?\345\320\"\333\371n!@Dn\206\033\360\371\261?\204d\001\023\270u\267?0*\251\023\320d8@\224\301Q\362\352\034\303?\005\377[\311\216\215\300?tA}\313\234\316\024@\037\021S\"\211^\324?\336Y\273\355Bs\275?\305\010\341\321\306\021\273?\016\2760\231*\030\351?\3367\276\366\314\222\003@\275:\307\200\354\365\256?\217\337\333\364g?\320?\302n\330\266(3\016@\212\223\373\035\212\002\311?\315;N\321\221\\\326??W[\261\277,&@1\010\254\034Z\304\026@\035=~o\323\237\265?|Ic\264\216\252\334?\200\267@\202\342\247<@\234\242#\271\374\207\322?M\370\245~\336\024\000@#\241-\347R|\023@\252\202QI\235\200\302?\206\261\205 \007%\254?\367\257\2544)e\021@6\310$#ga\257?\220\275\336\375\361\336\032@\003CV\267zN\262?9\276\366\314\222\000\275?z\245,C\034\253%@\213\340\177+\331\261\016@2\261\371\2706T\300?\314bb\363qm\362?\023\355*\244\374\244\212?\002Hm\342\344~\267?S\226!\216uq\253?\027\361\235\230\365b\300?\"\370\337Jvl\264?\220\332\304\311\375\016\245?\017\326\3779\314\027\362?\274\226\220\017z>V@w\241\271N#-\321?,e\031\342X7&@\350\237\340bE\r\302?e\215z\210F\367!@\310\200\354\365\356\217\277?\215\321:\252\232 \320?.x\321W\220f\314?\201\220,`\002\267\266?\253\347\244\367\215\257\235?M\241\363\032\273D\265?\232%\001jj\331\212?\017bg\n\235\327\300?Q\024\350\023y\222\224?\345\3259\006d\257\267?9z\374\336\246?\303?\3578EGr\371\317?\031\377>\343\302\201\342?\201`\216\036\277\267\251?\246\325\220\270\307r#@J\357\033_{f\315?\325\004Q\367\001H\315?\342\314\257\346\0001#@\254Q\017\321\350\016\372?Gw\020;S\350\254?*t^c\227\250\340?\305\224H\242\227Q\363?_\2652\341\227\372\305?)\221D/\243\230\003@g\270\001\237\037F\250?@\237\310\223\244k\246?\300\004n\335\315S\215?]\304wb\326\213\241?\003\354\243SW>\307?3\277\232\003\004S\026@gDio\360\2457@\375\274\251H\2051\001@\241l\312\025\336\245\002@\177\373:p\316\210\322?\005\377[\311\216\215\260?F\261\334\322jH\214?\223\214\234\205=\355\240?\\\224\331 \223\214\326?\202\250\373\000\2446\261?#gaO;\374\245?aO;\37459\022@\3544\322Ry;\345?\034\010\311\002&\260\036@_\007\316\031Q\332\213?T\256\360.\027\361\305?\010wg\355\266\013\265?\312\246\\\341].\324?\267b\177\331=\331\033@,e\031\342X\2674@\220,`\002\267\356\276?\230\243\307\357m\372\223?\232\r2\311\310Y\270?d\222\221\263\260\'\032@q=\n\327\243p\235?\225\232=\320\n\214\006@\264\315\215\351\tK\234?\347\030\220\275\336\375\271?p\231\323e1\261\261?\022\245\275\301\027&\325?x\020;S\350<\006@\201&\302\206\247W\272?\323\244\024t{I\273?\316\302\236v\370\373 @|\270\344\270S:\320?R\'\240\211\260\341\342?Xni5$\356\241?2U0*\251\323+@\334^\322\030\255c\r@\t\212\037c\356\372P@\226>tA}\213\r@\350\301\335Y\273\355\312?A\016J\230i\373\247?]\212\253\312\276+\322?\3500_^\200}\310??\035\217\031\250\214\257?\365\333\327\201s&*@_\014\345D\273\n\305?\273~\301n\330\266\300?k\016\020\314\321\343\247?k\324C4\272\303\025@\365\326\300V\t\026\313?\'\302\206\247W\312\330?\336\223\207\205Z\223\r@\350\331\254\372\\m\265?\354/\273\'\017\013\225?9\326\305m4\200\247?\312\253s\014\310^\257?;\215\264T\336\216\310?\'\240\211\260\341\351\305?\214\333h\000o\201\372?\211\265\370\024\000\343y?333333\354?6T\214\3637\241\357?\036\217\031\250\214\177\217?)?\251\366\351x\254?\214\271k\t\371\240\327?T\343\245\233\304 \240?\300\347\207\021\302\243\255?\333m\027\232\3534\222?)\350\366\222\306h\342?/n\243\001\274\0254@V\016-\262\235\3172@\264Y\365\271\332\252,@f1\261\371\2706\264?\213\246\263\223\301Q\242?\321\226s)\256*\273?#\303*\336\310<\357?\001\336\002\t\212\1772@\210\205Z\323\274c\020@i\000o\201\004\305\303?\007\346\350\361{\233\316?\324+e\031\342X\247?\367\314\222\00055\366?d#\020\257\353w\035@\351&1\010\254\034\302?"
      }
    }
  }
}
node {
  name: "normalize_element/component_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 400
          }
        }
        tensor_content: "\315\314\314\314\314\314\000@\3019#J{\203\374?\340\276\016\2343\342\026@.\220\240\3701&\025@#\333\371~j<\035@&S\005\243\222\372\024@\226\262\014q\254k%@\326\305m4\200\367\025@H\341z\024\256\307\004@\030\225\324\th\"\375?\023\362A\317f\325\367?\366(\\\217\302\365\n@0L\246\nF%\004@q\033\r\340-\020\001@!\260rh\221\355\373?(~\214\271k\t\376?.\220\240\3701&\025@y\351&1\010,\007@(\017\013\265\246y\376?9\326\305m4\300\021@n4\200\267@B\033@\3274\3578E\307\016@\026\373\313\356\311C\006@P\374\030s\327\022\362?\231*\030\225\324\t\000@\313\020\307\272\270\r\003@P\374\030s\327\022\006@\274\005\022\024?\306\374?\331\316\367S\343\245\001@5^\272I\014\202\000@\035\311\345?\244_\013@[\261\277\354\236\274\010@\360\205\311T\301\250\374?\254\034Zd;_\r@\277}\0358gD\002@\024?\306\334\265\204\365?\177\373:p\316\210\377?9\326\305m4\000\013@\235\021\245\275\301\027\002@\325\th\"lx\377?\366(\\\217\302u\026@Gr\371\017\351\267\371?mV}\256\266\342\000@\246\233\304 \260\362\000@c\356ZB>h\003@D\372\355\353\300\271\t@gDio\360\005\013@\356|?5^\272\365?q\033\r\340-\220\364?\337\340\013\223\251\002\022@^\272I\014\002+\002@\201\004\305\2171w\371?$\271\374\207\364\333\375?\351\267\257\003\347\014\000@+\366\227\335\223\207\370?\242\2647\370\302d\013@u\223\030\004VN\037@\303\323+e\031b\016@\226\262\014q\254k%@B>\350\331\254\372\005@\345\362\037\322o_\367?\245N@\023aC\004@\251\244N@\023\341\000@\023\362A\317f\325\031@\212\037c\356Z\302\003@0\273\'\017\013\265\007@\355\236<,\324\232\005@R\270\036\205\353Q\r@\014\223\251\202QI\371?;\001M\204\rO\016@\277\016\2343\242\264\362?\301\250\244N@\023\375?6\315;N\321\321\037@\372~j\274t\223\000@\'\240\211\260\341\251\025@\317\367S\343\245\233\366?\254\034Zd;_\016@\256\330_vO\336\023@q\033\r\340-\220\017@\023\362A\317f\325\031@\327\022\362A\317f\024@\245N@\023a\303\371?\254\034Zd;_\r@\326\305m4\200w\024@B>\350\331\254:\035@O\257\224e\210c\006@+\030\225\324\t\350\n@\t\212\037c\356Z\375?\314\356\311\303B-\n@0\273\'\017\013\265\365?\n\327\243p=\212\n@\033\r\340-\220\240\376?R\270\036\205\353Q\365?\"lxz\245,\000@\310\230\273\226\220\017\365?\334\327\201sF\224\001@\241g\263\352s\265\021@0*\251\023\320D\035@\232\010\033\236^)\375?\221~\373:p\316\377?_\007\316\031Q\232\025@R\'\240\211\260\341\376?e\252`TR\247\n@e\031\342X\0277\r@7\211A`\345\320\374?q\033\r\340-\220\017@\340\276\016\2343\342\026@\277\016\2343\242\264\000@\262\235\357\247\306K\001@\317f\325\347j+\370?0*\251\023\320\304\004@\n\327\243p=\212\027@\373\313\356\311\303\002\026@\300\354\236<,\324\372?_\007\316\031Q\232\025@\'\240\211\260\341\251\025@p\316\210\322\336\340\030@\254\255\330_vO\020@\367u\340\234\021\245\004@\216\006\360\026H\320\021@0*\251\023\320D\035@\233\346\035\247\350H\013@R\270\036\205\353Q\374?\243\001\274\005\022T\030@\327\243p=\nW\017@\277\016\2343\242\264\366?\030\225\324\th\342\022@\374\251\361\322Mb\010@O@\023a\303S\r@=\233U\237\253\355\026@\n\327\243p=\212\n@g\325\347j+\366\013@Gr\371\017\3517\t@\\\217\302\365(\\\372?\300\354\236<,\324\000@\007\360\026HP\374\003@\312T\301\250\244N\370?\000\000\000\000\000\000\375?\315;N\321\221\334\031@!\260rh\221\355\005@\326\305m4\200\367\025@t$\227\377\220~\027@\253>W[\261?\023@\325\347j+\366\227\t@HP\374\030s\327\374?U0*\251\023\220\032@x\351&1\010\254\006@#\333\371~j\034 @\033\236^)\313p\"@\275R\226!\216\225!@\024\256G\341z\024\031@\227n\022\203\300\312\r@n4\200\267@B\033@\002+\207\026\331N\002@\360\026HP\374\330\021@\333\371~j\274\364\020@\2201w-!\237\003@b\241\3264\3578\006@\300\354\236<,\324\003@\313\020\307\272\270\215\376?\253>W[\261?\030@\377\262{\362\260\320\017@\304\261.n\243\001\370?\243\001\274\005\022\024\016@F\266\363\375\324x\024@p\316\210\322\336\340\030@*:\222\313\177\310\004@\331_vO\036\026\374?\326\305m4\200w\024@\341\013\223\251\202\321\021@n\022\203\300\312\241\006@/\335$\006\201\225\001@g\325\347j+v\t@\"\375\366u\340\234\374?|\362\260Pk\232\001@\2505\315;N\321\366?\373\\m\305\376\262\372?g\325\347j+\366\013@\204\rO\257\224\345\000@:#J{\203/\371?\031s\327\022\362\301\026@q\033\r\340-\220\017@\225e\210c]\\\004@\355|?5^\272\022@\216uq\033\r\340\005@\246\233\304 \260r\367??\306\334\265\204|\003@\374\030s\327\022\022!@\365\333\327\201sF\367?\201&\302\206\247W\001@\221~\373:p\316\375?d;\337O\215\227\020@\356|?5^\272\033@;\337O\215\227n\371?\000o\201\004\305\017\002@_\007\316\031Q\232\025@\256\330_vO\036\001@\253>W[\261?\030@\314\356\311\303B-\n@\373:p\316\210R\004@\256\330_vO\336\023@\024\256G\341z\324\022@\224\366\006_\230\014\020@\313\241E\266\363=\026@\223\251\202QI\035\007@\305\376\262{\362\360\027@\313\020\307\272\270\r\003@\376e\367\344a\241\000@b\241\3264\3578\006@$(~\214\271k\371?T\343\245\233\304@(@\336\223\207\205ZS\000@\036\026jM\363\016\t@\246\nF%u\302\030@=\233U\237\253-\"@\221\017z6\253>\373?0L\246\nF%\365?\374\251\361\322Mb\004@\276\301\027&S\005\000@\254\034Zd;_\016@7\032\300[ A\374?q=\n\327\243p\370?yX\2505\315;\006@X\2505\315;\316\000@33333\263\020@\000\221~\373:p\003@#\333\371~j\034 @u\002\232\010\033\036\023@\340-\220\240\370\261\000@t$\227\377\220\376\021@\243\222:\001MD\022@\243\222:\001M\004\017@\235\357\247\306K\267\021@\302\027&S\005c\031@\234\242#\271\374\207\372?\306K7\211A`\003@\235\357\247\306K\267\021@\261Pk\232w\234\373?8gDiop\014@.\220\240\3701&\025@(\017\013\265\246y\367?\327\022\362A\317\346\034@HP\374\030s\327\027@\271\215\006\360\026\310\005@\351H.\377!\375\017@g\325\347j+\366\013@\210\205Z\323\274\343\375?\271\215\006\360\026\010\021@\361c\314]K\310\373?\224\207\205Z\323<\n@{\024\256G\341z\027@F\266\363\375\324\370\006@.\220\240\3701&\025@R\270\036\205\353\321\010@\347\214(\355\r\276\375?Y\027\267\321\000^\014@\314\177H\277}\235\005@e\031\342X\0277\r@\3122\304\261.n\371?33333\263\014@Y\027\267\321\000^\000@\032\300[ Aq\002@Zd;\337O\315\027@\253>W[\261?\023@\277}\0358gD\010@\360\026HP\374\330\024@\202\342\307\230\273\226\002@\263\352s\265\025\373\r@\016\2760\231*X\031@\351&1\010\254\034\375?w\276\237\032/]\002@1\010\254\034Z$\034@#J{\203/L\016@\327\022\362A\317&\034@\010=\233U\237+\005@n4\200\267@B\033@\330\201sF\224v\003@\344\203\236\315\252\217\020@_\007\316\031Q\232\025@<\337O\215\227\356\020@D\213l\347\373\251\366?\025\035\311\345?$\007@Dio\360\205\311\362?H\341z\024\256G\031@\321\221\\\376C\372\000@O@\023a\303\323\002@\317f\325\347jk\021@\236\357\247\306Kw\021@n4\200\267@B\033@\275R\226!\216\225!@H\277}\0358\347\007@\206\311T\301\250d!@\020z6\253>\327\005@F\266\363\375\324x\024@\246\nF%u\302\030@xz\245,C\034\377?\212\260\341\351\225\262\372?\345\362\037\322o_\003@U0*\251\023\220\032@\276\301\027&S\205\000@\317f\325\347jk\021@\017\2343\242\264\267\005@\323Mb\020X9\372?d\314]K\310\007\367?\221~\373:p\016\024@d;\337O\215\227\020@c\356ZB>h\003@\240\032/\335$F\033@\232\231\231\231\231\031\002@\n\327\243p=\n\004@\031\004V\016-r\032@J{\203/L\246 @\"lxz\245\354\024@\232\010\033\236^)\022@I\235\200&\302\206\002@\005\305\2171w-\366?\r\340-\220\240\370\371?\267b\177\331=y\370?O\257\224e\210c\006@\344\203\236\315\252O\037@\325\347j+\366\227\026@\253>W[\261?\023@\270@\202\342\307\230\375?\353\3426\032\300\333\024@\354Q\270\036\205\353\014@\344\203\236\315\252\317\371?\216\006\360\026HP\376?\030\225\324\th\"\372?\363\037\322o_G\035@\327\022\362A\317f\024@\000\221~\373:\320!@\326V\354/\273\'\007@m\347\373\251\361\322\376?}\256\266b\177\331\362?g\325\347j+\366\013@\212\216\344\362\037r\"@\337\340\013\223\251\002\022@\314]K\310\007=\363?O@\023a\303S\r@\206\311T\301\250d\020@\320\263Y\365\271\232\025@\241g\263\352s5\020@\263{\362\260P\353\031@e\031\342X\0277\r@\177\373:p\316\210\365?1\010\254\034Z$\034@\316\210\322\336\340+%@]\376C\372\355k\000@\217\302\365(\\\217\017@\346\256%\344\203\236\002@\326\305m4\200w\024@\236^)\313\020\307\001@\254\213\333h\000\357\017@\221~\373:p\316\366?(~\214\271k\211\004@,\324\232\346\035g\020@\314]K\310\007\275\010@\030\225\324\th\342\022@6\315;N\321\321\037@\202sF\224\366\006 @\273\270\215\006\360\226\006@u\223\030\004VN\037@R\270\036\205\353\321\003@#\333\371~j<\035@HP\374\030s\327\002@\017\2343\242\264\267\005@\314\177H\277}\035\374?(~\214\271k\t\374?\243\222:\001MD\022@\216uq\033\r`\"@0*\251\023\320D\035@\210\364\333\327\201s\023@\'\240\211\260\341\251\025@\343\245\233\304 \260\001@\027\331\316\367S\343\371?\\\217\302\365(\\\020@=\233U\237\253\255\377?\032Q\332\033|a\020@\016\2760\231*X\031@\344\203\236\315\252O\037@\341\013\223\251\202\321\014@[\323\274\343\024\235\036@\312\241E\266\363\375\031@[\323\274\343\024\235\036@0\273\'\017\013\265\016@\325x\351&1\010\367?\006\022\024?\306\334\370?\200H\277}\0358\377?\250\306K7\211\001\021@\363\037\322o_\307\022@\016\2760\231*X\031@\370S\343\245\233\304\002@\376\324x\351&1\362?\202\342\307\230\273\226\366?\212\037c\356ZB\037@KY\2068\326E\003@\204\rO\257\224\345\010@\354Q\270\036\205\353\017@\2343\242\2647\370\376?\340\276\016\2343\342\026@"
      }
    }
  }
}
node {
  name: "normalize_element/component_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 400
          }
        }
        tensor_content: "\024\256G\341z\2243@\232\231\231\231\231\0312@\244p=\n\327\243\033@\037\205\353Q\270\236%@R\270\036\205\353Q\370?\244p=\n\327\243\n@\n\327\243p=\n\373?\\\217\302\365(\\\030@\232\231\231\231\231\0312@=\n\327\243p\275;@\232\231\231\231\231\0312@q=\n\327\243p\001@\232\231\231\231\231\0312@\303\365(\\\217\302\017@\024\256G\341z\2243@\024\256G\341z\2243@\037\205\353Q\270\236%@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\366(\\\217\302\365\021@\217\302\365(\\\217\026@\327\243p=\n\327\027@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\341z\024\256Ga#@\205\353Q\270\036\005$@\024\256G\341z\2243@\232\231\231\231\231\0312@\232\231\231\231\231\0312@H\341z\024\256G\013@H\341z\024\256G\013@\232\231\231\231\231\0312@\315\314\314\314\314\314\030@\024\256G\341z\2243@\232\231\231\231\231\0312@\024\256G\341z\2243@\315\314\314\314\314\314\030@\232\231\231\231\231\0312@\244p=\n\327\3435@\303\365(\\\217\302\024@\232\231\231\231\231\0312@\244p=\n\327\3435@\244p=\n\327\3435@\024\256G\341z\2243@\315\314\314\314\314\314\030@\327\243p=\n\327\027@\232\231\231\231\231\0312@\232\231\231\231\231\0312@)\\\217\302\365\250)@\244p=\n\327\3435@\024\256G\341z\2243@\232\231\231\231\231\0312@fffff\2469@\232\231\231\231\231\0312@\232\231\231\231\231\0312@q=\n\327\243p\027@H\341z\024\256G @\n\327\243p=\n\373?\205\353Q\270\036\005$@\024\256G\341z\2243@\232\231\231\231\231\0312@=\n\327\243p\275;@\303\365(\\\217\302\024@\244p=\n\327\3435@\232\231\231\231\231\0312@\256G\341z\024\256\003@\256G\341z\024.%@\232\231\231\231\231\0312@\205\353Q\270\036\205\013@\232\231\231\231\231\0312@\232\231\231\231\231\0312@q=\n\327\243p\027@\232\231\231\231\231\0312@\205\353Q\270\036\205\035@\232\231\231\231\231\0312@H\341z\024\256G @H\341z\024\256G\034@\256G\341z\024.%@\303\365(\\\217\302\024@\244p=\n\327\243\033@\024\256G\341z\2243@\315\314\314\314\314\314\030@\315\314\314\314\314\314\023@\303\365(\\\217\302\007@\341z\024\256Ga#@H\341z\024\256\307+@\232\231\231\231\231\0312@\315\314\314\314\314\314\030@\232\231\231\231\231\0312@333333\020@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\232\231\231\231\231\0312@fffff\2469@\366(\\\217\302\365\021@H\341z\024\256G\025@=\n\327\243p\275;@\232\231\231\231\231\0312@q=\n\327\243p\023@\303\365(\\\217\302\017@\232\231\231\231\231\0312@\315\314\314\314\314\314\030@\303\365(\\\217\302\017@\256G\341z\024.%@\244p=\n\327\243\033@\232\231\231\231\231\0312@\024\256G\341z\2243@\232\231\231\231\231\0312@333333\020@\\\217\302\365(\\\363?\327\243p=\n\327+@\232\231\231\231\231\0312@q=\n\327\243p\023@\205\353Q\270\036\205\035@q=\n\327\243p\007@\244p=\n\327\243\031@\232\231\231\231\231\0312@H\341z\024\256G @H\341z\024\256G\025@\232\231\231\231\231\0312@\232\231\231\231\231\0312@{\024\256G\341z\037@\327\243p=\n\327\033@\024\256G\341z\2243@\205\353Q\270\036\205\035@\315\314\314\314\314\314\030@\024\256G\341z\024.@=\n\327\243p=\016@\315\314\314\314\314\314#@\037\205\353Q\270\036\007@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\341z\024\256Ga#@\232\231\231\231\231\0312@\244p=\n\327\3435@=\n\327\243p=\016@\256G\341z\024\256\003@\\\217\302\365(\\\030@\354Q\270\036\205\353\t@\303\365(\\\217\302\024@\256G\341z\024\256\003@\232\231\231\231\231\0312@=\n\327\243p=\030@\315\314\314\314\314\314#@q=\n\327\243p\027@\037\205\353Q\270\036\r@\000\000\000\000\000\000\364?=\n\327\243p=\000@\232\231\231\231\231\0312@\217\302\365(\\\217\026@\303\365(\\\217\302\017@H\341z\024\256G @H\341z\024\256G @\232\231\231\231\231\0312@\037\205\353Q\270\036!@\\\217\302\365(\334\'@\232\231\231\231\231\0312@q=\n\327\243p\001@H\341z\024\256G @\232\231\231\231\231\0312@H\341z\024\256G @q=\n\327\243p\005@q=\n\327\243p\007@\256G\341z\024\256\003@=\n\327\243p\275;@\315\314\314\314\314\314\023@H\341z\024\256G @\256G\341z\024\256\003@\232\231\231\231\231\0312@q=\n\327\243p\001@\244p=\n\327\3435@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\244p=\n\327\3435@\037\205\353Q\270\036\007@\303\365(\\\217\302\017@\232\231\231\231\231\0312@\244p=\n\327\243\033@\256G\341z\024.%@\037\205\353Q\270\036!@H\341z\024\256G @\232\231\231\231\231\0312@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\232\231\231\231\231\231\020@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\315\314\314\314\314\314\030@\205\353Q\270\036\205\024@\232\231\231\231\231\0312@fffff\2469@q=\n\327\243p\023@\303\365(\\\217\302\017@q=\n\327\243p\001@\315\314\314\314\314\314\030@\232\231\231\231\231\0312@H\341z\024\256G\034@H\341z\024\256G @H\341z\024\256G @{\024\256G\341z\037@H\341z\024\256\307+@\303\365(\\\217\302\024@\341z\024\256Ga#@\303\365(\\\217\302\017@\037\205\353Q\270\036!@\232\231\231\231\231\0312@)\\\217\302\365(\000@\024\256G\341z\2243@333333\020@\270\036\205\353Q\270\023@)\\\217\302\365(\374?\232\231\231\231\231\0312@\024\256G\341z\2243@\205\353Q\270\036\005$@\232\231\231\231\231\0312@H\341z\024\256G @\024\256G\341z\2243@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\232\231\231\231\231\0312@H\341z\024\256G @\232\231\231\231\231\0312@q=\n\327\243p\027@\366(\\\217\302\365\021@fffff\2469@H\341z\024\256G @\205\353Q\270\036\205\013@\256G\341z\024.%@\327\243p=\n\327\033@{\024\256G\341z\037@\232\231\231\231\231\0312@\024\256G\341z\2243@\327\243p=\n\327\033@\232\231\231\231\231\0312@333333\020@\037\205\353Q\270\236%@\232\231\231\231\231\0312@\205\353Q\270\036\205\024@\327\243p=\n\327+@\232\231\231\231\231\0312@\315\314\314\314\314\314#@\037\205\353Q\270\036\007@=\n\327\243p\275;@H\341z\024\256G @\024\256G\341z\2243@\256G\341z\024\256\003@\244p=\n\327\243\033@\232\231\231\231\231\0312@\037\205\353Q\270\236%@\315\314\314\314\314\314#@\232\231\231\231\231\0312@\232\231\231\231\231\0312@333333\020@\315\314\314\314\314\314\030@\232\231\231\231\231\0312@\256G\341z\024.%@\024\256G\341z\2243@\232\231\231\231\231\0312@{\024\256G\341z\037@\303\365(\\\217\302\024@\232\231\231\231\231\0312@\244p=\n\327\243\n@\232\231\231\231\231\0312@\366(\\\217\302\365\021@\270\036\205\353Q\270\023@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\270\036\205\353Q\270\023@H\341z\024\256G @R\270\036\205\353Q\370?333333\020@\217\302\365(\\\217\026@\037\205\353Q\270\036!@\244p=\n\327\243\031@q=\n\327\243p\023@H\341z\024\256G @\232\231\231\231\231\0312@\341z\024\256Ga#@\232\231\231\231\231\0312@\327\243p=\n\327+@\232\231\231\231\231\0312@\205\353Q\270\036\005$@\256G\341z\024.%@\327\243p=\n\327\033@\217\302\365(\\\217\026@\000\000\000\000\000\000\364?\256G\341z\024\256\003@\205\353Q\270\036\205\363?\205\353Q\270\036\005$@q=\n\327\243p\005@\270\036\205\353Q\270\023@fffff\2469@\244p=\n\327\3435@\303\365(\\\217\302\017@=\n\327\243p=\030@\232\231\231\231\231\0312@\256G\341z\024.%@\037\205\353Q\270\036!@\232\231\231\231\231\0312@\244p=\n\327\3435@)\\\217\302\365\250)@\315\314\314\314\314\314\030@\024\256G\341z\2243@\205\353Q\270\036\205\024@\024\256G\341z\2243@\\\217\302\365(\334\'@\366(\\\217\302\365\n@\037\205\353Q\270\036\365?\303\365(\\\217\302\024@\205\353Q\270\036\205\035@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\024\256G\341z\2243@\024\256G\341z\2243@\341z\024\256Ga#@\354Q\270\036\205\353\001@q=\n\327\243p\335?\303\365(\\\217\302\024@\244p=\n\327\3435@\354Q\270\036\205\353\t@\024\256G\341z\024.@\232\231\231\231\231\0312@\303\365(\\\217\302\017@\232\231\231\231\231\0312@\000\000\000\000\000\000\020@\244p=\n\327\243\033@q=\n\327\243p\027@\315\314\314\314\314\314\030@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\037\205\353Q\270\036\007@\024\256G\341z\024\366?)\\\217\302\365\250)@\232\231\231\231\231\0312@\024\256G\341z\024.@\232\231\231\231\231\0312@\232\231\231\231\231\231\007@)\\\217\302\365\250)@\205\353Q\270\036\205\013@\315\314\314\314\314\314\030@\024\256G\341z\2243@\270\036\205\353Q\270\023@\217\302\365(\\\217\376?\232\231\231\231\231\0312@\315\314\314\314\314\314#@\244p=\n\327\3435@\315\314\314\314\314\314\023@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\244p=\n\327\243\n@H\341z\024\256G\013@\205\353Q\270\036\205\035@q=\n\327\243p\027@\217\302\365(\\\217\021@\232\231\231\231\231\0312@q=\n\327\243p\027@\205\353Q\270\036\005$@R\270\036\205\353Q\370?\232\231\231\231\231\0312@\037\205\353Q\270\036!@fffff\2469@\232\231\231\231\231\0312@\205\353Q\270\036\205\013@\256G\341z\024\256\347?H\341z\024\256G\025@\244p=\n\327\243\031@\205\353Q\270\036\205\035@\037\205\353Q\270\036!@\024\256G\341z\2243@{\024\256G\341z\002@\244p=\n\327\3435@H\341z\024\256G @\000\000\000\000\000\000\016@\354Q\270\036\205\353\001@\315\314\314\314\314\314#@\205\353Q\270\036\205\367?H\341z\024\256G\030@\205\353Q\270\036\205\367?\315\314\314\314\314\314\030@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\232\231\231\231\231\0312@)\\\217\302\365\250)@\244p=\n\327\243\n@\270\036\205\353Q\270\023@\244p=\n\327\3435@\232\231\231\231\231\0312@\024\256G\341z\2243@\205\353Q\270\036\205\024@\341z\024\256Ga#@H\341z\024\256\307+@H\341z\024\256G @\232\231\231\231\231\0312@\244p=\n\327\243\033@"
      }
    }
  }
}
node {
  name: "normalize_element/component_4"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 400
          }
        }
        tensor_content: "\\\217\302\365(\\\343?\223\030\004V\016-\346?x\351&1\010\254\334?;\337O\215\227n\332?A`\345\320\"\333\331?c\177\331=yX\334?\350\373\251\361\322M\332?\203\300\312\241E\266\333?7\211A`\345\320\346?\260rh\221\355|\343?\223\030\004V\016-\346?i\221\355|?5\336?\244p=\n\327\243\350?Nb\020X9\264\344?\254\034Zd;\337\353?\\\217\302\365(\\\343?;\337O\215\227n\332?\217\302\365(\\\217\342?`\345\320\"\333\371\346?#\333\371~j\274\334?\177j\274t\223\030\334?V\016-\262\235\357\337?7\211A`\345\320\346?\306K7\211A`\345?\256G\341z\024\256\347?\270\036\205\353Q\270\342?\033/\335$\006\201\341?\\\217\302\365(\\\343?\343\245\233\304 \260\342?\343\245\233\304 \260\342?\262\235\357\247\306K\337?\262\235\357\247\306K\337?\223\030\004V\016-\346?T\343\245\233\304 \340?\\\217\302\365(\\\343?E\266\363\375\324x\345?\\\217\302\365(\\\343?T\343\245\233\304 \340?7\211A`\345\320\346?+\207\026\331\316\367\343?{\024\256G\341z\340?\223\030\004V\016-\346?+\207\026\331\316\367\343?+\207\026\331\316\367\343?\\\217\302\365(\\\343?T\343\245\233\304 \340?V\016-\262\235\357\337?E\266\363\375\324x\345?J\014\002+\207\026\345?,\207\026\331\316\367\333?+\207\026\331\316\367\343?\254\034Zd;\337\353?\256G\341z\024\256\347?d;\337O\215\227\342?ffffff\346?\240\032/\335$\006\341?/\335$\006\201\225\333?\235\357\247\306K7\341?\350\373\251\361\322M\332?\033/\335$\006\201\341?\254\034Zd;\337\353?\331\316\367S\343\245\343?\260rh\221\355|\343?{\024\256G\341z\340?+\207\026\331\316\367\343?\366(\\\217\302\365\344?\010\254\034Zd;\337?\262\235\357\247\306K\337?ffffff\346?,\207\026\331\316\367\333?\376\324x\351&1\344?\256G\341z\024\256\347?/\335$\006\201\225\333?\256G\341z\024\256\347?Zd;\337O\215\337?\264\310v\276\237\032\343?\235\357\247\306K7\341?j\274t\223\030\004\336?\262\235\357\247\306K\337?{\024\256G\341z\340?x\351&1\010\254\334?\254\034Zd;\337\353?T\343\245\233\304 \340?\350\373\251\361\322M\332?\232\231\231\231\231\231\331?\270\036\205\353Q\270\342?\232\231\231\231\231\231\341?\356|?5^\272\345?\323Mb\020X9\340?\376\324x\351&1\344?R\270\036\205\353Q\340?\256G\341z\024\256\347?\376\324x\351&1\344?\331\316\367S\343\245\343?E\266\363\375\324x\345?d;\337O\215\227\342?#\333\371~j\274\334?\354Q\270\036\205\353\331?\260rh\221\355|\343?\256G\341z\024\256\347?\335$\006\201\225C\333?Nb\020X9\264\344?\240\032/\335$\006\341?\323Mb\020X9\340?Nb\020X9\264\344?\262\235\357\247\306K\337?x\351&1\010\254\334?\343\245\233\304 \260\342?\\\217\302\365(\\\343?\376\324x\351&1\344?R\270\036\205\353Q\340?D\213l\347\373\251\331?,\207\026\331\316\367\333?\223\030\004V\016-\346?\335$\006\201\225C\333?Zd;\337O\215\337?D\213l\347\373\251\331?\317\367S\343\245\233\334?7\211A`\345\320\346?\235\357\247\306K7\341?\354Q\270\036\205\353\331?\240\032/\335$\006\341?ffffff\346?\370S\343\245\233\304\340?\030\004V\016-\262\335?\254\034Zd;\337\353?Zd;\337O\215\337?\323Mb\020X9\340?\030\004V\016-\262\335?`\345\320\"\333\371\336?\234\304 \260rh\341?{\024\256G\341z\334?\016-\262\235\357\247\342?\356|?5^\272\345?\244p=\n\327\243\350?\270\036\205\353Q\270\342?E\266\363\375\324x\345?+\207\026\331\316\367\343?`\345\320\"\333\371\336?\010\254\034Zd;\337?\203\300\312\241E\266\333?q=\n\327\243p\335?{\024\256G\341z\340?\010\254\034Zd;\337?\356|?5^\272\345?\021\307\272\270\215\006\334?\234\304 \260rh\341?/\335$\006\201\225\333?J\014\002+\207\026\331?\333\371~j\274t\333?\217\302\365(\\\217\332?\016-\262\235\357\247\342?\177j\274t\223\030\334?Nb\020X9\264\344?\235\357\247\306K7\341?\235\357\247\306K7\341?7\211A`\345\320\346?\244p=\n\327\243\340?\274t\223\030\004V\342?\356|?5^\272\345?\034Zd;\337O\335?\235\357\247\306K7\341?\223\030\004V\016-\346?\235\357\247\306K7\341?\376e\367\344a\241\332?D\213l\347\373\251\331?\010\254\034Zd;\337?\260rh\221\355|\343?\350\373\251\361\322M\332?\235\357\247\306K7\341?\010\254\034Zd;\337?\256G\341z\024\256\347?i\221\355|?5\336?+\207\026\331\316\367\343?\343\245\233\304 \260\342?ffffff\346?+\207\026\331\316\367\343?{\024\256G\341z\334?Nb\020X9\264\344?\223\030\004V\016-\346?x\351&1\010\254\334?\262\235\357\247\306K\337?\244p=\n\327\243\340?\235\357\247\306K7\341?7\211A`\345\320\346?\264\310v\276\237\032\343?7\211A`\345\320\346?\333\371~j\274t\333?\264\310v\276\237\032\343?ffffff\346?\356|?5^\272\345?\323Mb\020X9\340?\312\241E\266\363\375\334?ffffff\346?d;\337O\215\227\342?\335$\006\201\225C\333?Nb\020X9\264\344?\034Zd;\337O\335?\323Mb\020X9\340?\343\245\233\304 \260\342?j\274t\223\030\004\336?\235\357\247\306K7\341?\235\357\247\306K7\341?\370S\343\245\233\304\340?\232\231\231\231\231\231\341?{\024\256G\341z\340?\270\036\205\353Q\270\342?Nb\020X9\264\344?\244p=\n\327\243\340?\223\030\004V\016-\346?=\n\327\243p=\332?\\\217\302\365(\\\343?R\270\036\205\353Q\340?1\010\254\034Zd\333?\244p=\n\327\243\330?\223\030\004V\016-\346?\254\034Zd;\337\353?\033/\335$\006\201\341?\256G\341z\024\256\347?\235\357\247\306K7\341?\254\034Zd;\337\353?\264\310v\276\237\032\343?7\211A`\345\320\346?\331\316\367S\343\245\343?\235\357\247\306K7\341?\343\245\233\304 \260\342?/\335$\006\201\225\333?#\333\371~j\274\334?d;\337O\215\227\342?\235\357\247\306K7\341?,\207\026\331\316\367\333?\262\235\357\247\306K\337?\030\004V\016-\262\335?\370S\343\245\233\304\340?\223\030\004V\016-\346?\\\217\302\365(\\\343?\030\004V\016-\262\335?\223\030\004V\016-\346?R\270\036\205\353Q\340?;\337O\215\227n\332?ffffff\346?\312\241E\266\363\375\334?,\207\026\331\316\367\333?\244p=\n\327\243\350?\234\304 \260rh\341?{\024\256G\341z\334?\260rh\221\355|\343?\235\357\247\306K7\341?\254\034Zd;\337\353?\010\254\034Zd;\337?x\351&1\010\254\334?\366(\\\217\302\365\344?;\337O\215\227n\332?\234\304 \260rh\341?`\345\320\"\333\371\346?\016-\262\235\357\247\342?R\270\036\205\353Q\340?\323Mb\020X9\340?\264\310v\276\237\032\343?\262\235\357\247\306K\337?\\\217\302\365(\\\343?\331\316\367S\343\245\343?\370S\343\245\233\304\340?{\024\256G\341z\340?\217\302\365(\\\217\342?c\177\331=yX\334?7\211A`\345\320\346?#\333\371~j\274\334?1\010\254\034Zd\333?\356|?5^\272\345?\244p=\n\327\243\350?1\010\254\034Zd\333?\235\357\247\306K7\341?}?5^\272I\334?R\270\036\205\353Q\340?\177j\274t\223\030\334?\244p=\n\327\243\340?\317\367S\343\245\233\334?\335$\006\201\225C\333?\235\357\247\306K7\341?E\266\363\375\324x\345?\270\036\205\353Q\270\342?\306K7\211A`\345?,\207\026\331\316\367\333?\244p=\n\327\243\350?\033/\335$\006\201\341?\262\235\357\247\306K\337?\030\004V\016-\262\335?\177j\274t\223\030\334?\333\371~j\274t\333?\010\254\034Zd;\337?\227n\022\203\300\312\331?\033/\335$\006\201\341?\376e\367\344a\241\332?1\010\254\034Zd\333?d;\337O\215\227\342?+\207\026\331\316\367\343?ffffff\342?\021\307\272\270\215\006\334?\256G\341z\024\256\347?\262\235\357\247\306K\337?\244p=\n\327\243\340?\223\030\004V\016-\346?+\207\026\331\316\367\343?,\207\026\331\316\367\333?\323Mb\020X9\340?\\\217\302\365(\\\343?\312\241E\266\363\375\334?\\\217\302\365(\\\343?\274t\223\030\004V\342?E\266\363\375\324x\331?\350\373\251\361\322M\332?{\024\256G\341z\340?Zd;\337O\215\337?7\211A`\345\320\346?E\266\363\375\324x\345?\254\034Zd;\337\353?\254\034Zd;\337\353?\270\036\205\353Q\270\342?\232\231\231\231\231\231\331?6^\272I\014\002\333?{\024\256G\341z\340?+\207\026\331\316\367\343?q=\n\327\243p\335?\030\004V\016-\262\335?`\345\320\"\333\371\346?Nb\020X9\264\344?\223\030\004V\016-\346?=\n\327\243p=\332?x\351&1\010\254\334?/\335$\006\201\225\333?T\343\245\233\304 \340?ffffff\346?J\014\002+\207\026\345?{\024\256G\341z\334?\376e\367\344a\241\332?,\207\026\331\316\367\333?\376\324x\351&1\344?\030\004V\016-\262\335?\240\032/\335$\006\341?1\010\254\034Zd\333?,\207\026\331\316\367\333?,\207\026\331\316\367\333?\323Mb\020X9\340?\254\034Zd;\337\353?1\010\254\034Zd\333?;\337O\215\227n\332?\343\245\233\304 \260\342?\234\304 \260rh\341?+\207\026\331\316\367\343?\350\373\251\361\322M\332?7\211A`\345\320\346?\016-\262\235\357\247\342?\223\030\004V\016-\346?7\211A`\345\320\346?c\177\331=yX\334?\262\235\357\247\306K\337?Zd;\337O\215\337?/\335$\006\201\225\333?}?5^\272I\334?\217\302\365(\\\217\342?/\335$\006\201\225\333?\033/\335$\006\201\341?A`\345\320\"\333\331?7\211A`\345\320\346?\244p=\n\327\243\340?d;\337O\215\227\342?`\345\320\"\333\371\346?,\207\026\331\316\367\333?=\n\327\243p=\332?\354Q\270\036\205\353\331?\317\367S\343\245\233\334?Zd;\337O\215\337?\244p=\n\327\243\340?\254\034Zd;\337\353?\235\357\247\306K7\341?+\207\026\331\316\367\343?\235\357\247\306K7\341?\235\357\247\306K7\331?\232\231\231\231\231\231\331?\234\304 \260rh\341?\227n\022\203\300\312\331?\223\030\004V\016-\332?\227n\022\203\300\312\331?\323Mb\020X9\340?ffffff\346?\264\310v\276\237\032\343?\331\316\367S\343\245\343?,\207\026\331\316\367\333?c\177\331=yX\334?1\010\254\034Zd\333?+\207\026\331\316\367\343?\306K7\211A`\345?\254\034Zd;\337\353?\312\241E\266\363\375\334?\270\036\205\353Q\270\342?\232\231\231\231\231\231\341?\235\357\247\306K7\341?\356|?5^\272\345?x\351&1\010\254\334?"
      }
    }
  }
}
node {
  name: "normalize_element/component_5"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 400
          }
        }
        tensor_content: "ffffff-@3333334@fffff\3461@3333333@333333)@\315\314\314\314\314\314-@\315\314\314\314\314L2@\232\231\231\231\231\0310@3333334@\232\231\231\231\231\0314@3333334@ffffff2@3333334@\000\000\000\000\000\000*@ffffff-@ffffff-@3333333@3333334@3333334@\000\000\000\000\000\2002@\315\314\314\314\314\3140@3333333@3333334@3333334@3333334@3333333@\315\314\314\314\314\3141@ffffff-@3333334@3333334@\315\314\314\314\314\3141@\315\314\314\314\314\3141@3333334@ffffff1@ffffff-@3333334@ffffff-@ffffff1@3333334@3333335@3333334@3333334@3333335@3333335@ffffff-@ffffff1@3333333@3333334@3333334@33333\2632@3333335@ffffff-@3333334@\232\231\231\231\231\0313@3333334@3333334@\232\231\231\231\231\0313@\000\000\000\000\000\0005@\315\314\314\314\314L2@\315\314\314\314\314\3141@ffffff-@3333334@\232\231\231\231\231\0314@3333334@3333335@3333334@\315\314\314\314\314\3141@\232\231\231\231\231\2312@3333334@ffffff.@3333334@3333334@\232\231\231\231\231\0313@3333334@\232\231\231\231\231\2313@3333334@\000\000\000\000\000\0005@\315\314\314\314\314\3141@\232\231\231\231\231\2312@3333334@fffff\3461@ffffff-@ffffff1@3333333@\232\231\231\231\231\231.@3333333@ffffff0@3333334@ffffff1@3333334@\232\231\231\231\231\2310@3333334@3333334@3333334@3333334@\232\231\231\231\231\0313@\000\000\000\000\000\2002@\232\231\231\231\231\2310@\232\231\231\231\231\0314@3333334@\000\000\000\000\000\0003@\000\000\000\000\000\000*@3333334@ffffff1@\000\000\000\000\000\000*@\232\231\231\231\231\2312@fffff\3461@3333334@ffffff-@3333334@\232\231\231\231\231\2310@333333+@\000\000\000\000\000\0000@3333334@\000\000\000\000\000\0003@\232\231\231\231\231\2313@333333/@\232\231\231\231\231\2311@3333334@\000\000\000\000\000\0005@\232\231\231\231\231\2310@3333334@3333334@ffffff.@\232\231\231\231\231\2312@ffffff-@\232\231\231\231\231\2313@ffffff1@3333332@\232\231\231\231\231\2311@ffffff2@\000\000\000\000\000\0002@3333334@3333334@3333334@3333333@3333334@3333335@\232\231\231\231\231\2311@\315\314\314\314\314\3141@\232\231\231\231\231\0310@fffff\3460@3333334@\315\314\314\314\314\3141@3333334@fffff\3460@ffffff2@\232\231\231\231\231\0313@ffffff0@33333\2633@ffffff-@3333334@\315\314\314\314\314\3140@\000\000\000\000\000\000*@\000\000\000\000\000\0005@\000\000\000\000\000\0005@3333334@fffff\3464@\000\000\000\000\000\0005@3333334@33333\2632@\000\000\000\000\000\0005@3333334@\000\000\000\000\000\0005@ffffff-@333333/@\315\314\314\314\314\3141@\232\231\231\231\231\0314@3333333@\000\000\000\000\000\0005@\315\314\314\314\314\3141@3333334@ffffff2@3333335@3333334@3333334@3333335@\000\000\000\000\000\0002@\000\000\000\000\000\000*@3333334@fffff\3461@\232\231\231\231\231\2312@fffff\3464@\000\000\000\000\000\0005@3333334@3333334@3333334@fffff\3461@3333334@3333334@3333334@ffffff1@33333\2633@3333334@\232\231\231\231\231\0313@\000\000\000\000\000\0003@\000\000\000\000\000\000*@33333\2632@ffffff1@3333334@\315\314\314\314\314\3141@\000\000\000\000\000\0005@\000\000\000\000\000\0005@ffffff.@ffffff0@3333334@3333333@\000\000\000\000\000\000*@fffff\3464@3333334@\000\000\000\000\000\0001@ffffff-@\232\231\231\231\231\2310@\232\231\231\231\231\2310@3333332@3333334@ffffff-@\315\314\314\314\314\3141@3333334@\000\000\000\000\000\0005@ffffff-@3333334@3333334@3333334@\000\000\000\000\000\0005@3333334@\232\231\231\231\231\0313@\000\000\000\000\000\2002@\232\231\231\231\231\0313@\000\000\000\000\000\0005@ffffff.@\232\231\231\231\231\2312@\232\231\231\231\231\2312@ffffff.@3333334@ffffff-@\232\231\231\231\231\2312@3333334@\232\231\231\231\231\2310@3333333@3333334@33333\2633@\000\000\000\000\000\0000@3333334@ffffff2@\000\000\000\000\000\0002@\232\231\231\231\231\0314@\000\000\000\000\000\0005@ffffff-@\315\314\314\314\314\3141@fffff\3461@3333334@3333333@ffffff2@3333334@3333334@\232\231\231\231\231\2310@ffffff1@3333334@\232\231\231\231\231\2312@ffffff-@3333334@ffffff.@3333334@3333334@\315\314\314\314\314\314-@3333334@\000\000\000\000\000\2002@\232\231\231\231\231\2310@3333334@3333334@\232\231\231\231\231\2310@\000\000\000\000\000\0005@\000\000\000\000\000\000/@\232\231\231\231\231\2310@\315\314\314\314\314\3140@fffff\3464@\232\231\231\231\231\2311@\000\000\000\000\000\0003@\000\000\000\000\000\0005@3333334@3333333@3333334@\000\000\000\000\000\0000@3333334@\315\314\314\314\314\3141@\232\231\231\231\231\2312@\232\231\231\231\231\2312@\315\314\314\314\314\3140@33333\2633@\315\314\314\314\314\3141@fffff\3461@\315\314\314\314\314\3141@ffffff-@\232\231\231\231\231\2310@\232\231\231\231\231\0313@3333335@\000\000\000\000\000\000*@fffff\3460@3333334@\232\231\231\231\231\2312@fffff\3464@3333334@3333335@33333\2632@ffffff1@ffffff-@33333\2633@ffffff-@\000\000\000\000\000\0005@\232\231\231\231\231\0310@333333.@3333334@\232\231\231\231\231\2313@3333334@3333334@ffffff-@ffffff-@3333333@\232\231\231\231\231\231-@\315\314\314\314\314\314,@3333334@3333335@fffff\3460@3333332@3333334@\000\000\000\000\000\000*@3333334@\232\231\231\231\231\0315@fffff\3461@\232\231\231\231\231\0313@ffffff1@3333334@3333334@\000\000\000\000\000\0002@\232\231\231\231\231\2312@33333\2632@3333334@3333332@3333334@\315\314\314\314\314L2@33333\2632@ffffff.@ffffff1@ffffff-@\232\231\231\231\231\2310@\000\000\000\000\000\0006@3333334@ffffff2@3333335@3333333@3333334@3333334@3333334@3333334@\315\314\314\314\314\314-@\315\314\314\314\314\3141@\232\231\231\231\231\2313@\232\231\231\231\231\0313@\315\314\314\314\314\3142@3333334@\232\231\231\231\231\0313@\315\314\314\314\314\3141@333333)@3333334@fffff\3464@\232\231\231\231\231\0313@3333334@ffffff.@\315\314\314\314\314L1@\232\231\231\231\231\2310@\232\231\231\231\231\2311@\232\231\231\231\231\2313@fffff\3464@ffffff-@\232\231\231\231\231\231.@3333335@\000\000\000\000\000\0005@\315\314\314\314\314\314/@\232\231\231\231\231\231-@ffffff2@\000\000\000\000\000\0001@fffff\3462@\000\000\000\000\000\0001@ffffff1@3333334@3333334@3333334@33333\2632@\315\314\314\314\314\314-@\232\231\231\231\231\2310@3333335@3333334@ffffff-@33333\2633@3333333@ffffff0@\000\000\000\000\000\0005@3333334@fffff\3461@"
      }
    }
  }
}
node {
  name: "normalize_element/component_6"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 400
          }
        }
        tensor_content: "-\262\235\357\247F\031@@5^\272I\214\027@\024\256G\341z\024\033@\362\322Mb\020\330\027@\177j\274t\223\030\035@\254\034Zd;\337\033@\357\247\306K7\211\027@!\260rh\221\355\033@\350\373\251\361\322\315\032@7\211A`\345\320\025@\034Zd;\337\317\025@\021X9\264\310v\032@d;\337O\215\227\031@t\223\030\004V\016\034@\317\367S\343\245\233\030@\022\203\300\312\241\305\033@_\272I\014\002\253\031@sh\221\355|\277\031@\217\302\365(\\\217!@\205\353Q\270\036\205\032@\312\241E\266\363\375\027@w\276\237\032/\335\027@Nb\020X94\031@\000\000\000\000\000\200\027@\306K7\211A\340\030@\210\026\331\316\367\323\026@\006\201\225C\213\354\026@\000\000\000\000\000\000\031@\332\316\367S\343\245\030@\303\365(\\\217B\026@\273I\014\002+\007\034@\037\205\353Q\270\236\031@\022\203\300\312\241\305\030@\332\316\367S\343\245\035@\201\225C\213lg\030@\177j\274t\223\230\032@\333\371~j\274\364\035@X9\264\310v\276\036@=\n\327\243p\275\030@\370S\343\245\233\304\027@\024\256G\341z\224\027@:\264\310v\276\037\026@\327\243p=\nW\031@\241E\266\363\375\324\031@6^\272I\014\202\027@\024\256G\341z\024 @w\276\237\032/]\027@\223\030\004V\016-\033@;\337O\215\227n\026@\345\320\"\333\371~\027@\350\373\251\361\322M\031@\004V\016-\262\235\025@\022\203\300\312\241E\027@j\274t\223\030\204\027@\024\256G\341z\024\026@,\207\026\331\316\367\030@\254\034Zd;\337\032@H\341z\024\256G\026@7\211A`\345P\032@/\335$\006\201\025\030@Nb\020X9\264\023@\354Q\270\036\205\353\033@;\337O\215\227\356\027@=\n\327\243p=\031@}?5^\272I\027@\274t\223\030\004\326\030@\037\205\353Q\270\236\034@\004V\016-\262\235\025@\277\237\032/\335$\026@T\343\245\233\304 \033@w\276\237\032/\335\030@6^\272I\014\202\026@\254\034Zd;_\026@w\276\237\032/]\031@\241E\266\363\375T\030@\273I\014\002+\007\027@m\347\373\251\361\322\025@=\n\327\243p\275\034@\252\361\322Mb\220\027@\335$\006\201\225C\031@\277\237\032/\335$\027@?5^\272I\014\024@\006\201\225C\213\354\027@d;\337O\215\227\034@&1\010\254\034Z\034@\256G\341z\024\256\026@\312\241E\266\363}\031@#\333\371~j\274\031@j\274t\223\030\204\033@\010\254\034Zd\273\032@\303\365(\\\217B\031@\317\367S\343\245\233\030@\341z\024\256G\341\023@\266\363\375\324xi\030@\215\227n\022\203@\035@j\274t\223\030\004\030@\217\302\365(\\\017\030@\303\365(\\\217B\032@\254\034Zd;_\024@\274t\223\030\004\326\031@_\272I\014\002\253\030@m\347\373\251\361\322\034@\000\000\000\000\000\000\033@X9\264\310v~ @\234\304 \260rh!@\356|?5^\272\030@\362\322Mb\020\330\030@\241E\266\363\375T\033@\000\000\000\000\000\300 @\201\225C\213l\347\016@}?5^\272I\026@\375\324x\351&\261\037@6^\272I\014\202\030@\037\205\353Q\270\236\031@`\345\320\"\333y\032@sh\221\355|?\031@\321\"\333\371~j\032@\324x\351&1\010\033@\201\225C\213l\347\027@\344\245\233\304 0\030@\274t\223\030\004\326\030@X9\264\310v>\034@\277\237\032/\335$\024@\240\032/\335$\206\026@\363\375\324x\351&\032@\205\353Q\270\036\205\030@)\\\217\302\365\250\031@\016-\262\235\357\247\030@\370S\343\245\233\304\031@c\020X9\264\310\032@\n\327\243p=\212\032@H\341z\024\256G\037@\037\205\353Q\270\236\027@\235\357\247\306K7\025@\246\233\304 \260r\025@\317\367S\343\245\033\030@\256G\341z\024.\032@\323Mb\020X\271\031@\345\320\"\333\371~\033@\217\302\365(\\\017\037@\\\217\302\365(\\\032@\372~j\274t\223\030@\254\034Zd;\337\027@m\347\373\251\361R\037@\210\026\331\316\367\323\027@:\264\310v\276\037\030@d;\337O\215\027\030@;\337O\215\227n\030@;\337O\215\227n\030@\366(\\\217\302\365\031@q=\n\327\243p\036@\226C\213l\347{\027@\366(\\\217\302u\030@\262\235\357\247\306\313 @\374\251\361\322Mb\030@\030\004V\016-\262\032@\337O\215\227n\222\035@\234\304 \260r\350\032@\254\034Zd;_\032@/\335$\006\201\225\027@\312\241E\266\363\375\033@\305 \260rh\221\030@\234\304 \260rh\027@\374\251\361\322Mb\030@\266\363\375\324xi\037@333333\033@\372~j\274t\223\030@\016-\262\235\357\247\025@\205\353Q\270\036\205\032@L7\211A`e\026@\354Q\270\036\205\353\033@\033/\335$\006\001\031@L7\211A`e\033@\022\203\300\312\241\305\026@33333\263\031@\317\367S\343\245\033\025@\264\310v\276\237\232\030@\000\000\000\000\000\200\032@\034Zd;\337\317\034@\254\034Zd;_\031@\037\205\353Q\270\036\030@\000\000\000\000\000\200\031@\321\"\333\371~\352\030@\215\227n\022\203@\027@\370S\343\245\233D\031@\234\304 \260rh\033@\232\231\231\231\231\031\032@\252\361\322Mb\020\032@,\207\026\331\316w\026@Nb\020X94\030@\003+\207\026\331\316\030@;\337O\215\227n\035@i\221\355|?\265\027@\205\353Q\270\036\205\023@{\024\256G\341z\027@i\221\355|?5\031@\024\256G\341z\024\036@\270\036\205\353Q\270\031@E\266\363\375\324x\032@O\215\227n\022\003\030@\311v\276\237\032\257\031@\262\235\357\247\306\313\027@\\\217\302\365(\334\027@@5^\272I\014\030@\350\373\251\361\322\315\027@\332\316\367S\343%\030@Nb\020X9\264\027@\003+\207\026\331N\035@H\341z\024\256\307\030@\246\233\304 \260\362\027@\266\363\375\324x\351\032@i\221\355|?5\037@\311v\276\237\032/\032@\006\201\225C\213\354\031@\354Q\270\036\205\353\030@L7\211A`e\025@\351&1\010\254\234\025@\222\355|?5^\030@\362\322Mb\020\330\031@\234\304 \260r\350\026@\n\327\243p=\n\032@T\343\245\233\304\240\032@X9\264\310v\276\027@\235\357\247\306K7\025@}?5^\272I\030@i\221\355|?\265\025@\201\225C\213l\347\030@t\223\030\004V\216\031@\362\322Mb\020\330\027@=\n\327\243p\275\027@\323Mb\020X9\032@\327\243p=\n\327\027@\366(\\\217\302\365\030@6^\272I\014\202\031@\372~j\274t\023\022@\321\"\333\371~j\027@\006\201\225C\213l\027@\374\251\361\322M\342\031@\024\256G\341z\024\030@\303\365(\\\217B\030@\317\367S\343\245\233\022@\021X9\264\310\366\026@\203\300\312\241E\266\032@6^\272I\014\202\030@\016-\262\235\357\247\027@\363\375\324x\351\246\030@;\337O\215\227\356\027@\366(\\\217\302\365\027@J\014\002+\207\026\025@\351&1\010\254\234\030@\177j\274t\223\230\025@\003+\207\026\331\316\027@{\024\256G\341\372\030@\027\331\316\367S\343\027@\277\237\032/\335\244\031@\333\371~j\274t\030@V\016-\262\235o\027@\201\225C\213l\347\032@\037\205\353Q\270\236\024@\332\316\367S\343\245\025@\235\357\247\306K\267\037@V\016-\262\235\357\031@\344\245\233\304 \260\030@q=\n\327\243\360\027@_\272I\014\002\253\030@\024\256G\341z\224\036@\345\320\"\333\371\376\032@\226C\213l\347{\030@J\014\002+\207\226\033@T\343\245\233\304 \033@\033/\335$\006\001\031@\337O\215\227n\222\031@\350\373\251\361\322\315\026@\021X9\264\310\366\034@D\213l\347\373\251\031@%\006\201\225C\013\032@L7\211A`\345\031@!\260rh\221\355\031@\234\304 \260r\350\032@&1\010\254\034\332\026@\254\034Zd;\337\033@\223\030\004V\016-\027@:\264\310v\276\237\023@)\\\217\302\365(\027@\r\002+\207\026\331\030@\363\375\324x\351\246\027@n\022\203\300\312!\027@\335$\006\201\225\303\036@&1\010\254\034\332\027@\250\306K7\211\301\033@\321\"\333\371~j\026@\345\320\"\333\371\376\034@Nb\020X9\264\030@\304 \260rh\021 @\006\201\225C\213l\032@\006\201\225C\213l\027@!\260rh\221m\027@\362\322Mb\020\230 @m\347\373\251\361\322\026@:\264\310v\276\237\031@\350\373\251\361\322M\031@\037\205\353Q\270\236\031@\004V\016-\262\235\031@\372~j\274t\023\024@!\260rh\221\355\030@\240\032/\335$\206\032@\000\000\000\000\000\200\027@w\276\237\032/\335\027@\317\367S\343\245\233\031@\037\205\353Q\270\036\030@\332\316\367S\343%\027@\335$\006\201\225C\033@`\345\320\"\333y\027@\033/\335$\006\201\031@X9\264\310v\276\031@\205\353Q\270\036\205\031@\274t\223\030\004\326\026@X9\264\310v\276\024@\217\302\365(\\\217\025@\341z\024\256Ga\031@\000\000\000\000\000\200\037@#\333\371~j<\030@7\211A`\345\320\031@\241E\266\363\375T\031@\345\320\"\333\371\376\030@\261rh\221\355|\014@\241E\266\363\375T\035@\261rh\221\355\374\026@Zd;\337O\215\027@\356|?5^\272\026@\210\026\331\316\367\323\033@\325x\351&1\210 @&1\010\254\034\332\026@Zd;\337O\215\020@\026\331\316\367S# @\321\"\333\371~j\034@\277\237\032/\335$\031@\252\361\322Mb\020\034@\362\322Mb\020\330\030@@5^\272I\014\027@\341z\024\256Ga\032@\004V\016-\262\035\031@\333\371~j\274\364\032@\362\322Mb\020X\030@\352&1\010\254\234\023@;\337O\215\227n\031@X9\264\310v\276\027@1\010\254\034Zd\031@R\270\036\205\353\321\026@\261rh\221\355|\031@\214l\347\373\251q\033@\241E\266\363\375\324\030@sh\221\355|?\031@\010\254\034Zd\273\026@\033/\335$\006\201\031@sh\221\355|?\033@_\272I\014\002\253\031@\241E\266\363\375\324\026@\354Q\270\036\205k\026@d;\337O\215\227\027@&1\010\254\034\332\026@\010\254\034Zd\273\031@\261rh\221\355|\027@!\260rh\221m\034@\037\205\353Q\270\236\032@@5^\272I\214\030@\300\312\241E\266s\026@\'1\010\254\034\332\023@=\n\327\243p\275\034@\324x\351&1\210\031@\303\365(\\\217B\031@\350\373\251\361\322M\033@\323Mb\020X\271\031@\362\322Mb\020X\027@\261rh\221\355|\030@\315\314\314\314\314L\032@@5^\272I\214\026@\215\227n\022\203@\027@7\211A`\345\320\035@D\213l\347\373)\034@\370S\343\245\233D\032@fffff\346\033@O\215\227n\022\203\027@\n\327\243p=\212\034@\006\201\225C\213\254 @F\266\363\375\324x\021@P\215\227n\022\203\022@\321\"\333\371~\352\030@d;\337O\215\027\031@H\341z\024\256G\037@\341z\024\256Ga\030@\273I\014\002+\007\027@Zd;\337O\215\020@\254\034Zd;\337\025@\024\256G\341z\224\030@\372~j\274t\023\030@Zd;\337O\215\027@\315\314\314\314\314\314\027@\022\203\300\312\241\305\030@\223\030\004V\016\255\030@"
      }
    }
  }
}
node {
  name: "normalize_element/component_7"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 400
          }
        }
        tensor_contentt\001\000\000\000\000\000\000\376\000\000\000\000\000\000\000\232\002\000\000\000\000\000\0003\001\000\000\000\000\000\000%\001\000\000\000\000\000\000\232\002\000\000\000\000\000\000\232\002\000\000\000\000\000\0007\001\000\000\000\000\000\000\337\000\000\000\000\000\000\000\223\001\000\000\000\000\000\000\037\001\000\000\000\000\000\0003\001\000\000\000\000\000\000\016\001\000\000\000\000\000\000r\001\000\000\000\000\000\0000\001\000\000\000\000\000\000\024\001\000\000\000\000\000\000\232\002\000\000\000\000\000\000\232\002\000\000\000\000\000\000\232\002\000\000\000\000\000\000\207\001\000\000\000\000\000\000\232\002\000\000\000\000\000\000\265\001\000\000\000\000\000\000rtf`f
      }
    }
  }
}
node {
  name: "normalize_element/component_8"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 400
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "normalize_element/component_9"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 400
          }
        }
        tensor_content: "\315\314\314\314\314\3147@ffffff)@\232\231\231\231\231\231:@33333\2635@\315\314\314\314\314LA@33333\263A@\232\231\231\231\231\2312@\315\314\314\314\314\214@@ffffff0@ffffff.@\000\000\000\000\000\000\024@ffffff<@\000\000\000\000\000\0009@33333\263>@333333/@fffff\246D@3333338@3333337@fffff\3465@\232\231\231\231\231\231:@ffffff7@33333\2638@\315\314\314\314\314\314-@\000\000\000\000\000\000I@ffffff2@\315\314\314\314\314\3145@\315\314\314\314\314L3@\000\000\000\000\000\000;@\232\231\231\231\231\231*@ffffff\'@\232\231\231\231\231\2317@\000\000\000\000\000\0006@\232\231\231\231\231\231+@33333\263?@\000\000\000\000\000\0009@\315\314\314\314\314\314+@\000\000\000\000\000\000I@\232\231\231\231\231YG@333333,@ffffff1@\000\000\000\000\000\2002@\000\000\000\000\000\000!@\232\231\231\231\231\0312@3333333@\315\314\314\314\314\3147@\315\314\314\314\314\314B@\000\000\000\000\000\0004@\232\231\231\231\231\231*@fffff\346;@\315\314\314\314\314L4@\232\231\231\231\231\2313@\232\231\231\231\231\2313@\000\000\000\000\000\000%@\315\314\314\314\314\3142@\232\231\231\231\231\231(@\000\000\000\000\000\0007@333333:@333333+@\232\231\231\231\231\0318@3333333@333333-@\315\314\314\314\314\314=@\232\231\231\231\231\0314@33333\2634@ffffff2@ffffff5@33333\363B@\315\314\314\314\314L3@\232\231\231\231\231\231&@\000\000\000\000\000\000@@\000\000\000\000\000\000I@\232\231\231\231\231\231)@\232\231\231\231\231\2311@\315\314\314\314\314\314-@3333336@\000\000\000\000\000\000.@3333334@\232\231\231\231\231YA@\232\231\231\231\231\2316@3333336@\000\000\000\000\000\0004@\232\231\231\231\231\231.@\315\314\314\314\314L8@fffff\246B@\232\231\231\231\231\031@@\232\231\231\231\231\0317@\000\000\000\000\000\0007@\315\314\314\314\314\314\034@\000\000\000\000\000\200;@\000\000\000\000\000\000I@\232\231\231\231\231\2318@ffffff!@\000\000\000\000\000\000I@\315\314\314\314\314\314*@\000\000\000\000\000\000.@\315\314\314\314\314L4@\000\000\000\000\000\2006@\315\314\314\314\314\3148@333333 @\232\231\231\231\231\231\'@fffff\3466@\000\000\000\000\000@B@33333\2637@fffff&H@\000\000\000\000\000\000I@\000\000\000\000\000\0009@33333\2638@333333,@\000\000\000\000\000\000I@\232\231\231\231\231\0317@\232\231\231\231\231\0317@\000\000\000\000\000\000I@fffff\3467@\000\000\000\000\000\000)@fffff\3467@\000\000\000\000\000\0007@\232\231\231\231\231\031=@333333@@ffffff)@\232\231\231\231\231\231-@3333337@\000\000\000\000\000\0009@ffffff#@\000\000\000\000\000\2000@ffffff8@\232\231\231\231\231\231+@\000\000\000\000\000\0009@33333\2635@fffff\3466@fffff\3467@\315\314\314\314\314\3146@fffff\346E@\232\231\231\231\231\2314@\315\314\314\314\314\314$@\315\314\314\314\314\3144@\315\314\314\314\314\3140@\315\314\314\314\314\314%@\000\000\000\000\000\0002@333333?@fffff\346C@\000\000\000\000\000\0006@\315\314\314\314\314\3143@33333\2632@\000\000\000\000\000\000I@\232\231\231\231\231\231!@ffffff3@ffffff3@\315\314\314\314\314L8@fffff\3465@fffff\3466@fffff&E@\232\231\231\231\231\2314@\000\000\000\000\000\2004@ffffffH@3333332@\000\000\000\000\000\0005@\315\314\314\314\314\3141@\000\000\000\000\000\200;@ffffff6@\232\231\231\231\231\231 @33333\263@@ffffff.@333333\031@\000\000\000\000\000\000+@\000\000\000\000\000@H@\232\231\231\231\231\031?@\232\231\231\231\231\031B@\000\000\000\000\000\000\034@fffff\346;@\315\314\314\314\314\314+@\232\231\231\231\231\231B@333333)@333333<@3333330@\232\231\231\231\231\0310@\315\314\314\314\314\314\034@\315\314\314\314\314\3141@ffffff<@fffff\346@@\315\314\314\314\314\314\034@\232\231\231\231\231\2310@\232\231\231\231\231\031<@ffffff3@\232\231\231\231\231\2310@\000\000\000\000\000\2003@\000\000\000\000\000\200;@333333,@\232\231\231\231\231\0317@3333331@3333337@\315\314\314\314\314\314%@\000\000\000\000\000\200?@\232\231\231\231\231\2313@ffffff$@\000\000\000\000\000\0006@\315\314\314\314\314\3148@\315\314\314\314\314\214E@33333\263<@\232\231\231\231\231\031>@\232\231\231\231\231\0313@\232\231\231\231\231\2315@ffffff4@\232\231\231\231\231\2313@fffff\3466@\000\000\000\000\000\2005@\232\231\231\231\231\0315@\000\000\000\000\000\2008@\000\000\000\000\000\000?@33333\2635@ffffff\026@\232\231\231\231\231\031>@\000\000\000\000\000\000I@ffffff=@33333\2637@\232\231\231\231\231\0314@\232\231\231\231\231\231 @\315\314\314\314\314\314*@33333\2632@333333#@3333332@\315\314\314\314\314L7@3333331@\000\000\000\000\000\000+@\000\000\000\000\000\000(@\000\000\000\000\000\000-@\232\231\231\231\231\231+@\000\000\000\000\000\2004@fffff\3467@\000\000\000\000\000\2004@\232\231\231\231\231\0317@\315\314\314\314\314\314=@33333\2635@3333339@\000\000\000\000\000\000.@\000\000\000\000\000\000\034@33333\2636@\232\231\231\231\231\0315@333333*@3333337@\315\314\314\314\314\3146@\000\000\000\000\000\000%@33333\2632@\232\231\231\231\231\231<@33333\2636@\315\314\314\314\314\3141@ffffff5@333333+@\000\000\000\000\000\2001@333333*@\232\231\231\231\231\231=@\315\314\314\314\314\314,@\000\000\000\000\000\0003@ffffff7@\315\314\314\314\314L4@33333\2630@\232\231\231\231\231\0313@\232\231\231\231\231\2316@\000\000\000\000\000\000=@\315\314\314\314\314L0@33333\2637@\000\000\000\000\000\000I@33333\2630@\232\231\231\231\231\031;@\000\000\000\000\000\0003@fffff\3463@\000\000\000\000\000\000G@\315\314\314\314\314\314*@3333336@\000\000\000\000\000\0006@\000\000\000\000\000\000\036@fffff\3463@33333\2637@333333*@\232\231\231\231\231Y@@\232\231\231\231\231\2317@\000\000\000\000\000\0009@\315\314\314\314\314\3143@\232\231\231\231\231\031=@\000\000\000\000\000\000<@ffffff)@\315\314\314\314\314\314$@\315\314\314\314\314L2@\232\231\231\231\231\231+@\315\314\314\314\314L4@\315\314\314\314\314\3141@\315\314\314\314\314\3142@\000\000\000\000\000\2006@\232\231\231\231\231\231A@33333\2633@\232\231\231\231\231\231:@ffffff:@33333\263A@3333335@\000\000\000\000\000\000I@\315\314\314\314\314L7@\315\314\314\314\314L1@\232\231\231\231\231\231*@\000\000\000\000\000\000I@\232\231\231\231\231\0311@\232\231\231\231\231\0311@ffffff8@\232\231\231\231\231\2312@333333(@\315\314\314\314\314\314,@3333335@\232\231\231\231\231\0319@ffffff1@\000\000\000\000\000\0000@\315\314\314\314\314L6@\315\314\314\314\314\314\'@ffffff3@\232\231\231\231\231\231?@\000\000\000\000\000\2003@\232\231\231\231\231\0317@\232\231\231\231\231\231,@333333*@ffffff3@\315\314\314\314\314\3141@33333\2633@\000\000\000\000\000\2006@\000\000\000\000\000\000I@\232\231\231\231\231\2314@\232\231\231\231\231\0311@\232\231\231\231\231\2316@\232\231\231\231\231\2314@\000\000\000\000\000\200;@\000\000\000\000\000\000B@\000\000\000\000\000\000!@fffff\3462@\315\314\314\314\314L3@\232\231\231\231\231\231=@ffffffF@333333.@\315\314\314\314\314\314\'@\232\231\231\231\231YC@\000\000\000\000\000\200@@ffffff5@\000\000\000\000\000\000I@\000\000\000\000\000\0009@\315\314\314\314\314\3145@\315\314\314\314\314\314>@\000\000\000\000\000\0004@\000\000\000\000\000\200>@\000\000\000\000\000\0008@\232\231\231\231\231\231\'@3333336@\232\231\231\231\231\2314@\000\000\000\000\000\000-@3333330@\000\000\000\000\000\0007@\000\000\000\000\000\200<@ffffff\'@3333335@\000\000\000\000\000\000\024@33333\2631@\315\314\314\314\314\214A@\232\231\231\231\231\2316@\000\000\000\000\000\2002@\000\000\000\000\000\2002@3333331@\232\231\231\231\231\0314@\000\000\000\000\000\2008@ffffff4@\315\314\314\314\314L>@ffffff.@\315\314\314\314\314L3@ffffff/@fffff\3465@33333sA@33333\2638@\315\314\314\314\314L6@\315\314\314\314\314\214@@\232\231\231\231\231\2318@\000\000\000\000\000\2003@\000\000\000\000\000\2005@\000\000\000\000\000\0008@\232\231\231\231\231\231,@\000\000\000\000\000\000-@\000\000\000\000\000\000F@\000\000\000\000\000\000=@\315\314\314\314\314\3147@33333sA@\000\000\000\000\000\0006@33333s@@\232\231\231\231\231\331D@\232\231\231\231\231\231!@fffff\3461@ffffff5@\232\231\231\231\231\0318@33333\263F@\232\231\231\231\231\0314@333333/@\232\231\231\231\231\231+@333333/@\315\314\314\314\314L7@3333335@\315\314\314\314\314L7@ffffff*@\000\000\000\000\000\000&@\315\314\314\314\314L9@"
      }
    }
  }
}
node {
  name: "TensorSliceDataset"
  op: "TensorSliceDataset"
  input: "normalize_element/component_0"
  input: "normalize_element/component_1"
  input: "normalize_element/component_2"
  input: "normalize_element/component_3"
  input: "normalize_element/component_4"
  input: "normalize_element/component_5"
  input: "normalize_element/component_6"
  input: "normalize_element/component_7"
  input: "normalize_element/component_8"
  input: "normalize_element/component_9"
  device: "/device:CPU:0"
  attr {
    key: "Toutput_types"
    value {
      list {
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_INT64
        type: DT_DOUBLE
        type: DT_DOUBLE
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "count"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "RepeatDataset"
  op: "RepeatDataset"
  input: "TensorSliceDataset"
  input: "count"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_INT64
        type: DT_DOUBLE
        type: DT_DOUBLE
      }
    }
  }
}
node {
  name: "batch_size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 128
      }
    }
  }
}
node {
  name: "drop_remainder"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "BatchDatasetV2"
  op: "BatchDatasetV2"
  input: "RepeatDataset"
  input: "batch_size"
  input: "drop_remainder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_INT64
        type: DT_DOUBLE
        type: DT_DOUBLE
      }
    }
  }
  attr {
    key: "parallel_copy"
    value {
      b: false
    }
  }
}
node {
  name: "OneShotIterator"
  op: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_ba75O7pEaZw"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_INT64
        type: DT_DOUBLE
        type: DT_DOUBLE
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorToStringHandle"
  op: "IteratorToStringHandle"
  input: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "IteratorGetNext"
  op: "IteratorGetNext"
  input: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_INT64
        type: DT_DOUBLE
        type: DT_DOUBLE
      }
    }
  }
}
node {
  name: "linear/linear_model/Cast"
  op: "Cast"
  input: "IteratorGetNext"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/Cast_1"
  op: "Cast"
  input: "IteratorGetNext:1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/Cast_2"
  op: "Cast"
  input: "IteratorGetNext:2"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/Cast_3"
  op: "Cast"
  input: "IteratorGetNext:3"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/Cast_4"
  op: "Cast"
  input: "IteratorGetNext:4"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/Cast_5"
  op: "Cast"
  input: "IteratorGetNext:5"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/Cast_6"
  op: "Cast"
  input: "IteratorGetNext:6"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/Cast_7"
  op: "Cast"
  input: "IteratorGetNext:8"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/age/weights/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/age/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/linear_model/age/weights/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/age/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "linear/linear_model/age/weights/part_0"
    }
  }
}
node {
  name: "linear/linear_model/age/weights/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "linear/linear_model/age/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/age/weights/part_0/Assign"
  op: "AssignVariableOp"
  input: "linear/linear_model/age/weights/part_0"
  input: "linear/linear_model/age/weights/part_0/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear_model/age/weights/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/age/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear_model/crim/weights/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/crim/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/linear_model/crim/weights/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/crim/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "linear/linear_model/crim/weights/part_0"
    }
  }
}
node {
  name: "linear/linear_model/crim/weights/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "linear/linear_model/crim/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/crim/weights/part_0/Assign"
  op: "AssignVariableOp"
  input: "linear/linear_model/crim/weights/part_0"
  input: "linear/linear_model/crim/weights/part_0/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear_model/crim/weights/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/crim/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear_model/dis/weights/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/dis/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/linear_model/dis/weights/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/dis/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "linear/linear_model/dis/weights/part_0"
    }
  }
}
node {
  name: "linear/linear_model/dis/weights/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "linear/linear_model/dis/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/dis/weights/part_0/Assign"
  op: "AssignVariableOp"
  input: "linear/linear_model/dis/weights/part_0"
  input: "linear/linear_model/dis/weights/part_0/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear_model/dis/weights/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/dis/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear_model/indus/weights/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/indus/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/linear_model/indus/weights/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/indus/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "linear/linear_model/indus/weights/part_0"
    }
  }
}
node {
  name: "linear/linear_model/indus/weights/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "linear/linear_model/indus/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/indus/weights/part_0/Assign"
  op: "AssignVariableOp"
  input: "linear/linear_model/indus/weights/part_0"
  input: "linear/linear_model/indus/weights/part_0/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear_model/indus/weights/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/indus/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear_model/nox/weights/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/nox/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/linear_model/nox/weights/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/nox/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "linear/linear_model/nox/weights/part_0"
    }
  }
}
node {
  name: "linear/linear_model/nox/weights/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "linear/linear_model/nox/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/nox/weights/part_0/Assign"
  op: "AssignVariableOp"
  input: "linear/linear_model/nox/weights/part_0"
  input: "linear/linear_model/nox/weights/part_0/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear_model/nox/weights/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/nox/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear_model/ptratio/weights/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/ptratio/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/linear_model/ptratio/weights/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/ptratio/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "linear/linear_model/ptratio/weights/part_0"
    }
  }
}
node {
  name: "linear/linear_model/ptratio/weights/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "linear/linear_model/ptratio/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/ptratio/weights/part_0/Assign"
  op: "AssignVariableOp"
  input: "linear/linear_model/ptratio/weights/part_0"
  input: "linear/linear_model/ptratio/weights/part_0/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear_model/ptratio/weights/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/ptratio/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear_model/rm/weights/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/rm/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/linear_model/rm/weights/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/rm/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "linear/linear_model/rm/weights/part_0"
    }
  }
}
node {
  name: "linear/linear_model/rm/weights/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "linear/linear_model/rm/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/rm/weights/part_0/Assign"
  op: "AssignVariableOp"
  input: "linear/linear_model/rm/weights/part_0"
  input: "linear/linear_model/rm/weights/part_0/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear_model/rm/weights/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/rm/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear_model/tax/weights/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/tax/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/linear_model/tax/weights/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/tax/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "linear/linear_model/tax/weights/part_0"
    }
  }
}
node {
  name: "linear/linear_model/tax/weights/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "linear/linear_model/tax/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/tax/weights/part_0/Assign"
  op: "AssignVariableOp"
  input: "linear/linear_model/tax/weights/part_0"
  input: "linear/linear_model/tax/weights/part_0/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear_model/tax/weights/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/tax/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear_model/zn/weights/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/zn/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/linear_model/zn/weights/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/zn/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "linear/linear_model/zn/weights/part_0"
    }
  }
}
node {
  name: "linear/linear_model/zn/weights/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "linear/linear_model/zn/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/zn/weights/part_0/Assign"
  op: "AssignVariableOp"
  input: "linear/linear_model/zn/weights/part_0"
  input: "linear/linear_model/zn/weights/part_0/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear_model/zn/weights/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/zn/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear_model/bias_weights/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/linear_model/bias_weights/part_0"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "linear/linear_model/bias_weights/part_0"
    }
  }
}
node {
  name: "linear/linear_model/bias_weights/part_0/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "linear/linear_model/bias_weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/bias_weights/part_0/Assign"
  op: "AssignVariableOp"
  input: "linear/linear_model/bias_weights/part_0"
  input: "linear/linear_model/bias_weights/part_0/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear_model/bias_weights/part_0/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/bias_weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/age/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/age/ExpandDims"
  op: "ExpandDims"
  input: "linear/linear_model/Cast"
  input: "linear/linear_model/linear_model/linear_model/age/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/age/Shape"
  op: "Shape"
  input: "linear/linear_model/linear_model/linear_model/age/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/age/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/age/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/age/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/age/strided_slice"
  op: "StridedSlice"
  input: "linear/linear_model/linear_model/linear_model/age/Shape"
  input: "linear/linear_model/linear_model/linear_model/age/strided_slice/stack"
  input: "linear/linear_model/linear_model/linear_model/age/strided_slice/stack_1"
  input: "linear/linear_model/linear_model/linear_model/age/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/age/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/age/Reshape/shape"
  op: "Pack"
  input: "linear/linear_model/linear_model/linear_model/age/strided_slice"
  input: "linear/linear_model/linear_model/linear_model/age/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/age/Reshape"
  op: "Reshape"
  input: "linear/linear_model/linear_model/linear_model/age/ExpandDims"
  input: "linear/linear_model/linear_model/linear_model/age/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/age/weights/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/age/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear_model/age/weights"
  op: "Identity"
  input: "linear/linear_model/age/weights/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/age/weighted_sum"
  op: "MatMul"
  input: "linear/linear_model/linear_model/linear_model/age/Reshape"
  input: "linear/linear_model/age/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/crim/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/crim/ExpandDims"
  op: "ExpandDims"
  input: "linear/linear_model/Cast_1"
  input: "linear/linear_model/linear_model/linear_model/crim/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/crim/Shape"
  op: "Shape"
  input: "linear/linear_model/linear_model/linear_model/crim/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/crim/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/crim/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/crim/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/crim/strided_slice"
  op: "StridedSlice"
  input: "linear/linear_model/linear_model/linear_model/crim/Shape"
  input: "linear/linear_model/linear_model/linear_model/crim/strided_slice/stack"
  input: "linear/linear_model/linear_model/linear_model/crim/strided_slice/stack_1"
  input: "linear/linear_model/linear_model/linear_model/crim/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/crim/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/crim/Reshape/shape"
  op: "Pack"
  input: "linear/linear_model/linear_model/linear_model/crim/strided_slice"
  input: "linear/linear_model/linear_model/linear_model/crim/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/crim/Reshape"
  op: "Reshape"
  input: "linear/linear_model/linear_model/linear_model/crim/ExpandDims"
  input: "linear/linear_model/linear_model/linear_model/crim/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/crim/weights/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/crim/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear_model/crim/weights"
  op: "Identity"
  input: "linear/linear_model/crim/weights/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/crim/weighted_sum"
  op: "MatMul"
  input: "linear/linear_model/linear_model/linear_model/crim/Reshape"
  input: "linear/linear_model/crim/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/dis/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/dis/ExpandDims"
  op: "ExpandDims"
  input: "linear/linear_model/Cast_2"
  input: "linear/linear_model/linear_model/linear_model/dis/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/dis/Shape"
  op: "Shape"
  input: "linear/linear_model/linear_model/linear_model/dis/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/dis/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/dis/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/dis/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/dis/strided_slice"
  op: "StridedSlice"
  input: "linear/linear_model/linear_model/linear_model/dis/Shape"
  input: "linear/linear_model/linear_model/linear_model/dis/strided_slice/stack"
  input: "linear/linear_model/linear_model/linear_model/dis/strided_slice/stack_1"
  input: "linear/linear_model/linear_model/linear_model/dis/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/dis/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/dis/Reshape/shape"
  op: "Pack"
  input: "linear/linear_model/linear_model/linear_model/dis/strided_slice"
  input: "linear/linear_model/linear_model/linear_model/dis/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/dis/Reshape"
  op: "Reshape"
  input: "linear/linear_model/linear_model/linear_model/dis/ExpandDims"
  input: "linear/linear_model/linear_model/linear_model/dis/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/dis/weights/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/dis/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear_model/dis/weights"
  op: "Identity"
  input: "linear/linear_model/dis/weights/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/dis/weighted_sum"
  op: "MatMul"
  input: "linear/linear_model/linear_model/linear_model/dis/Reshape"
  input: "linear/linear_model/dis/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/indus/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/indus/ExpandDims"
  op: "ExpandDims"
  input: "linear/linear_model/Cast_3"
  input: "linear/linear_model/linear_model/linear_model/indus/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/indus/Shape"
  op: "Shape"
  input: "linear/linear_model/linear_model/linear_model/indus/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/indus/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/indus/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/indus/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/indus/strided_slice"
  op: "StridedSlice"
  input: "linear/linear_model/linear_model/linear_model/indus/Shape"
  input: "linear/linear_model/linear_model/linear_model/indus/strided_slice/stack"
  input: "linear/linear_model/linear_model/linear_model/indus/strided_slice/stack_1"
  input: "linear/linear_model/linear_model/linear_model/indus/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/indus/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/indus/Reshape/shape"
  op: "Pack"
  input: "linear/linear_model/linear_model/linear_model/indus/strided_slice"
  input: "linear/linear_model/linear_model/linear_model/indus/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/indus/Reshape"
  op: "Reshape"
  input: "linear/linear_model/linear_model/linear_model/indus/ExpandDims"
  input: "linear/linear_model/linear_model/linear_model/indus/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/indus/weights/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/indus/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear_model/indus/weights"
  op: "Identity"
  input: "linear/linear_model/indus/weights/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/indus/weighted_sum"
  op: "MatMul"
  input: "linear/linear_model/linear_model/linear_model/indus/Reshape"
  input: "linear/linear_model/indus/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/nox/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/nox/ExpandDims"
  op: "ExpandDims"
  input: "linear/linear_model/Cast_4"
  input: "linear/linear_model/linear_model/linear_model/nox/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/nox/Shape"
  op: "Shape"
  input: "linear/linear_model/linear_model/linear_model/nox/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/nox/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/nox/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/nox/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/nox/strided_slice"
  op: "StridedSlice"
  input: "linear/linear_model/linear_model/linear_model/nox/Shape"
  input: "linear/linear_model/linear_model/linear_model/nox/strided_slice/stack"
  input: "linear/linear_model/linear_model/linear_model/nox/strided_slice/stack_1"
  input: "linear/linear_model/linear_model/linear_model/nox/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/nox/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/nox/Reshape/shape"
  op: "Pack"
  input: "linear/linear_model/linear_model/linear_model/nox/strided_slice"
  input: "linear/linear_model/linear_model/linear_model/nox/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/nox/Reshape"
  op: "Reshape"
  input: "linear/linear_model/linear_model/linear_model/nox/ExpandDims"
  input: "linear/linear_model/linear_model/linear_model/nox/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/nox/weights/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/nox/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear_model/nox/weights"
  op: "Identity"
  input: "linear/linear_model/nox/weights/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/nox/weighted_sum"
  op: "MatMul"
  input: "linear/linear_model/linear_model/linear_model/nox/Reshape"
  input: "linear/linear_model/nox/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/ptratio/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/ptratio/ExpandDims"
  op: "ExpandDims"
  input: "linear/linear_model/Cast_5"
  input: "linear/linear_model/linear_model/linear_model/ptratio/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/ptratio/Shape"
  op: "Shape"
  input: "linear/linear_model/linear_model/linear_model/ptratio/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/ptratio/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/ptratio/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/ptratio/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/ptratio/strided_slice"
  op: "StridedSlice"
  input: "linear/linear_model/linear_model/linear_model/ptratio/Shape"
  input: "linear/linear_model/linear_model/linear_model/ptratio/strided_slice/stack"
  input: "linear/linear_model/linear_model/linear_model/ptratio/strided_slice/stack_1"
  input: "linear/linear_model/linear_model/linear_model/ptratio/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/ptratio/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/ptratio/Reshape/shape"
  op: "Pack"
  input: "linear/linear_model/linear_model/linear_model/ptratio/strided_slice"
  input: "linear/linear_model/linear_model/linear_model/ptratio/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/ptratio/Reshape"
  op: "Reshape"
  input: "linear/linear_model/linear_model/linear_model/ptratio/ExpandDims"
  input: "linear/linear_model/linear_model/linear_model/ptratio/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/ptratio/weights/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/ptratio/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear_model/ptratio/weights"
  op: "Identity"
  input: "linear/linear_model/ptratio/weights/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/ptratio/weighted_sum"
  op: "MatMul"
  input: "linear/linear_model/linear_model/linear_model/ptratio/Reshape"
  input: "linear/linear_model/ptratio/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/rm/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/rm/ExpandDims"
  op: "ExpandDims"
  input: "linear/linear_model/Cast_6"
  input: "linear/linear_model/linear_model/linear_model/rm/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/rm/Shape"
  op: "Shape"
  input: "linear/linear_model/linear_model/linear_model/rm/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/rm/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/rm/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/rm/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/rm/strided_slice"
  op: "StridedSlice"
  input: "linear/linear_model/linear_model/linear_model/rm/Shape"
  input: "linear/linear_model/linear_model/linear_model/rm/strided_slice/stack"
  input: "linear/linear_model/linear_model/linear_model/rm/strided_slice/stack_1"
  input: "linear/linear_model/linear_model/linear_model/rm/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/rm/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/rm/Reshape/shape"
  op: "Pack"
  input: "linear/linear_model/linear_model/linear_model/rm/strided_slice"
  input: "linear/linear_model/linear_model/linear_model/rm/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/rm/Reshape"
  op: "Reshape"
  input: "linear/linear_model/linear_model/linear_model/rm/ExpandDims"
  input: "linear/linear_model/linear_model/linear_model/rm/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/rm/weights/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/rm/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear_model/rm/weights"
  op: "Identity"
  input: "linear/linear_model/rm/weights/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/rm/weighted_sum"
  op: "MatMul"
  input: "linear/linear_model/linear_model/linear_model/rm/Reshape"
  input: "linear/linear_model/rm/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/tax/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/tax/ExpandDims"
  op: "ExpandDims"
  input: "IteratorGetNext:7"
  input: "linear/linear_model/linear_model/linear_model/tax/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/tax/Cast"
  op: "Cast"
  input: "linear/linear_model/linear_model/linear_model/tax/ExpandDims"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/tax/Shape"
  op: "Shape"
  input: "linear/linear_model/linear_model/linear_model/tax/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/tax/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/tax/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/tax/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/tax/strided_slice"
  op: "StridedSlice"
  input: "linear/linear_model/linear_model/linear_model/tax/Shape"
  input: "linear/linear_model/linear_model/linear_model/tax/strided_slice/stack"
  input: "linear/linear_model/linear_model/linear_model/tax/strided_slice/stack_1"
  input: "linear/linear_model/linear_model/linear_model/tax/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/tax/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/tax/Reshape/shape"
  op: "Pack"
  input: "linear/linear_model/linear_model/linear_model/tax/strided_slice"
  input: "linear/linear_model/linear_model/linear_model/tax/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/tax/Reshape"
  op: "Reshape"
  input: "linear/linear_model/linear_model/linear_model/tax/Cast"
  input: "linear/linear_model/linear_model/linear_model/tax/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/tax/weights/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/tax/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear_model/tax/weights"
  op: "Identity"
  input: "linear/linear_model/tax/weights/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/tax/weighted_sum"
  op: "MatMul"
  input: "linear/linear_model/linear_model/linear_model/tax/Reshape"
  input: "linear/linear_model/tax/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/zn/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/zn/ExpandDims"
  op: "ExpandDims"
  input: "linear/linear_model/Cast_7"
  input: "linear/linear_model/linear_model/linear_model/zn/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/zn/Shape"
  op: "Shape"
  input: "linear/linear_model/linear_model/linear_model/zn/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/zn/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/zn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/zn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/zn/strided_slice"
  op: "StridedSlice"
  input: "linear/linear_model/linear_model/linear_model/zn/Shape"
  input: "linear/linear_model/linear_model/linear_model/zn/strided_slice/stack"
  input: "linear/linear_model/linear_model/linear_model/zn/strided_slice/stack_1"
  input: "linear/linear_model/linear_model/linear_model/zn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/zn/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/zn/Reshape/shape"
  op: "Pack"
  input: "linear/linear_model/linear_model/linear_model/zn/strided_slice"
  input: "linear/linear_model/linear_model/linear_model/zn/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/zn/Reshape"
  op: "Reshape"
  input: "linear/linear_model/linear_model/linear_model/zn/ExpandDims"
  input: "linear/linear_model/linear_model/linear_model/zn/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/zn/weights/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/zn/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear_model/zn/weights"
  op: "Identity"
  input: "linear/linear_model/zn/weights/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/zn/weighted_sum"
  op: "MatMul"
  input: "linear/linear_model/linear_model/linear_model/zn/Reshape"
  input: "linear/linear_model/zn/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/weighted_sum_no_bias"
  op: "AddN"
  input: "linear/linear_model/linear_model/linear_model/age/weighted_sum"
  input: "linear/linear_model/linear_model/linear_model/crim/weighted_sum"
  input: "linear/linear_model/linear_model/linear_model/dis/weighted_sum"
  input: "linear/linear_model/linear_model/linear_model/indus/weighted_sum"
  input: "linear/linear_model/linear_model/linear_model/nox/weighted_sum"
  input: "linear/linear_model/linear_model/linear_model/ptratio/weighted_sum"
  input: "linear/linear_model/linear_model/linear_model/rm/weighted_sum"
  input: "linear/linear_model/linear_model/linear_model/tax/weighted_sum"
  input: "linear/linear_model/linear_model/linear_model/zn/weighted_sum"
  attr {
    key: "N"
    value {
      i: 9
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/bias_weights/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/bias_weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear_model/bias_weights"
  op: "Identity"
  input: "linear/linear_model/bias_weights/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear_model/linear_model/weighted_sum"
  op: "BiasAdd"
  input: "linear/linear_model/linear_model/linear_model/weighted_sum_no_bias"
  input: "linear/linear_model/bias_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "linear/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/bias_weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/strided_slice"
  op: "StridedSlice"
  input: "linear/ReadVariableOp"
  input: "linear/strided_slice/stack"
  input: "linear/strided_slice/stack_1"
  input: "linear/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/bias/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/bias"
      }
    }
  }
}
node {
  name: "linear/bias"
  op: "ScalarSummary"
  input: "linear/bias/tags"
  input: "linear/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/zero_fraction/total_size/Size/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/age/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/zero_fraction/total_size/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "linear/zero_fraction/total_size/Size_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/crim/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/zero_fraction/total_size/Size_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "linear/zero_fraction/total_size/Size_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/dis/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/zero_fraction/total_size/Size_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "linear/zero_fraction/total_size/Size_3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/indus/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/zero_fraction/total_size/Size_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "linear/zero_fraction/total_size/Size_4/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/nox/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/zero_fraction/total_size/Size_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "linear/zero_fraction/total_size/Size_5/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/ptratio/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/zero_fraction/total_size/Size_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "linear/zero_fraction/total_size/Size_6/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/rm/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/zero_fraction/total_size/Size_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "linear/zero_fraction/total_size/Size_7/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/tax/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/zero_fraction/total_size/Size_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "linear/zero_fraction/total_size/Size_8/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/zn/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/zero_fraction/total_size/Size_8"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "linear/zero_fraction/total_size/AddN"
  op: "AddN"
  input: "linear/zero_fraction/total_size/Size"
  input: "linear/zero_fraction/total_size/Size_1"
  input: "linear/zero_fraction/total_size/Size_2"
  input: "linear/zero_fraction/total_size/Size_3"
  input: "linear/zero_fraction/total_size/Size_4"
  input: "linear/zero_fraction/total_size/Size_5"
  input: "linear/zero_fraction/total_size/Size_6"
  input: "linear/zero_fraction/total_size/Size_7"
  input: "linear/zero_fraction/total_size/Size_8"
  attr {
    key: "N"
    value {
      i: 9
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/zero_fraction/total_zero/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "linear/zero_fraction/total_zero/Equal"
  op: "Equal"
  input: "linear/zero_fraction/total_size/Size"
  input: "linear/zero_fraction/total_zero/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "linear/zero_fraction/total_zero/zero_count"
  op: "If"
  input: "linear/zero_fraction/total_zero/Equal"
  input: "linear/linear_model/age/weights/part_0"
  input: "linear/zero_fraction/total_size/Size"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_RESOURCE
        type: DT_INT64
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "linear_zero_fraction_total_zero_zero_count_false_13722"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "linear_zero_fraction_total_zero_zero_count_true_13721"
      }
    }
  }
}
node {
  name: "linear/zero_fraction/total_zero/zero_count/Identity"
  op: "Identity"
  input: "linear/zero_fraction/total_zero/zero_count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/zero_fraction/total_zero/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "linear/zero_fraction/total_zero/Equal_1"
  op: "Equal"
  input: "linear/zero_fraction/total_size/Size_1"
  input: "linear/zero_fraction/total_zero/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "linear/zero_fraction/total_zero/zero_count_1"
  op: "If"
  input: "linear/zero_fraction/total_zero/Equal_1"
  input: "linear/linear_model/crim/weights/part_0"
  input: "linear/zero_fraction/total_size/Size_1"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_RESOURCE
        type: DT_INT64
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "linear_zero_fraction_total_zero_zero_count_1_false_13765"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "linear_zero_fraction_total_zero_zero_count_1_true_13764"
      }
    }
  }
}
node {
  name: "linear/zero_fraction/total_zero/zero_count_1/Identity"
  op: "Identity"
  input: "linear/zero_fraction/total_zero/zero_count_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/zero_fraction/total_zero/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "linear/zero_fraction/total_zero/Equal_2"
  op: "Equal"
  input: "linear/zero_fraction/total_size/Size_2"
  input: "linear/zero_fraction/total_zero/Const_2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "linear/zero_fraction/total_zero/zero_count_2"
  op: "If"
  input: "linear/zero_fraction/total_zero/Equal_2"
  input: "linear/linear_model/dis/weights/part_0"
  input: "linear/zero_fraction/total_size/Size_2"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_RESOURCE
        type: DT_INT64
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "linear_zero_fraction_total_zero_zero_count_2_false_13808"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "linear_zero_fraction_total_zero_zero_count_2_true_13807"
      }
    }
  }
}
node {
  name: "linear/zero_fraction/total_zero/zero_count_2/Identity"
  op: "Identity"
  input: "linear/zero_fraction/total_zero/zero_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/zero_fraction/total_zero/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "linear/zero_fraction/total_zero/Equal_3"
  op: "Equal"
  input: "linear/zero_fraction/total_size/Size_3"
  input: "linear/zero_fraction/total_zero/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "linear/zero_fraction/total_zero/zero_count_3"
  op: "If"
  input: "linear/zero_fraction/total_zero/Equal_3"
  input: "linear/linear_model/indus/weights/part_0"
  input: "linear/zero_fraction/total_size/Size_3"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_RESOURCE
        type: DT_INT64
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "linear_zero_fraction_total_zero_zero_count_3_false_13851"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "linear_zero_fraction_total_zero_zero_count_3_true_13850"
      }
    }
  }
}
node {
  name: "linear/zero_fraction/total_zero/zero_count_3/Identity"
  op: "Identity"
  input: "linear/zero_fraction/total_zero/zero_count_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/zero_fraction/total_zero/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "linear/zero_fraction/total_zero/Equal_4"
  op: "Equal"
  input: "linear/zero_fraction/total_size/Size_4"
  input: "linear/zero_fraction/total_zero/Const_4"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "linear/zero_fraction/total_zero/zero_count_4"
  op: "If"
  input: "linear/zero_fraction/total_zero/Equal_4"
  input: "linear/linear_model/nox/weights/part_0"
  input: "linear/zero_fraction/total_size/Size_4"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_RESOURCE
        type: DT_INT64
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "linear_zero_fraction_total_zero_zero_count_4_false_13894"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "linear_zero_fraction_total_zero_zero_count_4_true_13893"
      }
    }
  }
}
node {
  name: "linear/zero_fraction/total_zero/zero_count_4/Identity"
  op: "Identity"
  input: "linear/zero_fraction/total_zero/zero_count_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/zero_fraction/total_zero/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "linear/zero_fraction/total_zero/Equal_5"
  op: "Equal"
  input: "linear/zero_fraction/total_size/Size_5"
  input: "linear/zero_fraction/total_zero/Const_5"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "linear/zero_fraction/total_zero/zero_count_5"
  op: "If"
  input: "linear/zero_fraction/total_zero/Equal_5"
  input: "linear/linear_model/ptratio/weights/part_0"
  input: "linear/zero_fraction/total_size/Size_5"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_RESOURCE
        type: DT_INT64
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "linear_zero_fraction_total_zero_zero_count_5_false_13937"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "linear_zero_fraction_total_zero_zero_count_5_true_13936"
      }
    }
  }
}
node {
  name: "linear/zero_fraction/total_zero/zero_count_5/Identity"
  op: "Identity"
  input: "linear/zero_fraction/total_zero/zero_count_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/zero_fraction/total_zero/Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "linear/zero_fraction/total_zero/Equal_6"
  op: "Equal"
  input: "linear/zero_fraction/total_size/Size_6"
  input: "linear/zero_fraction/total_zero/Const_6"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "linear/zero_fraction/total_zero/zero_count_6"
  op: "If"
  input: "linear/zero_fraction/total_zero/Equal_6"
  input: "linear/linear_model/rm/weights/part_0"
  input: "linear/zero_fraction/total_size/Size_6"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_RESOURCE
        type: DT_INT64
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "linear_zero_fraction_total_zero_zero_count_6_false_13980"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "linear_zero_fraction_total_zero_zero_count_6_true_13979"
      }
    }
  }
}
node {
  name: "linear/zero_fraction/total_zero/zero_count_6/Identity"
  op: "Identity"
  input: "linear/zero_fraction/total_zero/zero_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/zero_fraction/total_zero/Const_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "linear/zero_fraction/total_zero/Equal_7"
  op: "Equal"
  input: "linear/zero_fraction/total_size/Size_7"
  input: "linear/zero_fraction/total_zero/Const_7"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "linear/zero_fraction/total_zero/zero_count_7"
  op: "If"
  input: "linear/zero_fraction/total_zero/Equal_7"
  input: "linear/linear_model/tax/weights/part_0"
  input: "linear/zero_fraction/total_size/Size_7"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_RESOURCE
        type: DT_INT64
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "linear_zero_fraction_total_zero_zero_count_7_false_14023"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "linear_zero_fraction_total_zero_zero_count_7_true_14022"
      }
    }
  }
}
node {
  name: "linear/zero_fraction/total_zero/zero_count_7/Identity"
  op: "Identity"
  input: "linear/zero_fraction/total_zero/zero_count_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/zero_fraction/total_zero/Const_8"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "linear/zero_fraction/total_zero/Equal_8"
  op: "Equal"
  input: "linear/zero_fraction/total_size/Size_8"
  input: "linear/zero_fraction/total_zero/Const_8"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "linear/zero_fraction/total_zero/zero_count_8"
  op: "If"
  input: "linear/zero_fraction/total_zero/Equal_8"
  input: "linear/linear_model/zn/weights/part_0"
  input: "linear/zero_fraction/total_size/Size_8"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_RESOURCE
        type: DT_INT64
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "linear_zero_fraction_total_zero_zero_count_8_false_14066"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "linear_zero_fraction_total_zero_zero_count_8_true_14065"
      }
    }
  }
}
node {
  name: "linear/zero_fraction/total_zero/zero_count_8/Identity"
  op: "Identity"
  input: "linear/zero_fraction/total_zero/zero_count_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/zero_fraction/total_zero/AddN"
  op: "AddN"
  input: "linear/zero_fraction/total_zero/zero_count/Identity"
  input: "linear/zero_fraction/total_zero/zero_count_1/Identity"
  input: "linear/zero_fraction/total_zero/zero_count_2/Identity"
  input: "linear/zero_fraction/total_zero/zero_count_3/Identity"
  input: "linear/zero_fraction/total_zero/zero_count_4/Identity"
  input: "linear/zero_fraction/total_zero/zero_count_5/Identity"
  input: "linear/zero_fraction/total_zero/zero_count_6/Identity"
  input: "linear/zero_fraction/total_zero/zero_count_7/Identity"
  input: "linear/zero_fraction/total_zero/zero_count_8/Identity"
  attr {
    key: "N"
    value {
      i: 9
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/zero_fraction/compute/float32_size"
  op: "Cast"
  input: "linear/zero_fraction/total_size/AddN"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/zero_fraction/compute/truediv"
  op: "RealDiv"
  input: "linear/zero_fraction/total_zero/AddN"
  input: "linear/zero_fraction/compute/float32_size"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/zero_fraction/zero_fraction_or_nan"
  op: "Identity"
  input: "linear/zero_fraction/compute/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/fraction_of_zero_weights/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/fraction_of_zero_weights"
      }
    }
  }
}
node {
  name: "linear/fraction_of_zero_weights"
  op: "ScalarSummary"
  input: "linear/fraction_of_zero_weights/tags"
  input: "linear/zero_fraction/zero_fraction_or_nan"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/head/logits/Shape"
  op: "Shape"
  input: "linear/linear_model/linear_model/linear_model/weighted_sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/head/logits/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "linear/head/logits/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "linear/head/logits/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "linear/head/labels/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/head/labels/ExpandDims"
  op: "ExpandDims"
  input: "IteratorGetNext:9"
  input: "linear/head/labels/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/labels/Shape"
  op: "Shape"
  input: "linear/head/labels/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/head/labels/Shape_1"
  op: "Shape"
  input: "linear/linear_model/linear_model/linear_model/weighted_sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/head/labels/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "linear/head/labels/assert_rank_at_least/Shape"
  op: "Shape"
  input: "linear/head/labels/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/head/labels/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "linear/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "linear/head/labels/strided_slice/stack"
  op: "Const"
  input: "^linear/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/head/labels/strided_slice/stack_1"
  op: "Const"
  input: "^linear/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/head/labels/strided_slice/stack_2"
  op: "Const"
  input: "^linear/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/head/labels/strided_slice"
  op: "StridedSlice"
  input: "linear/head/labels/Shape_1"
  input: "linear/head/labels/strided_slice/stack"
  input: "linear/head/labels/strided_slice/stack_1"
  input: "linear/head/labels/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/head/labels/concat/values_1"
  op: "Const"
  input: "^linear/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/head/labels/concat/axis"
  op: "Const"
  input: "^linear/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/head/labels/concat"
  op: "ConcatV2"
  input: "linear/head/labels/strided_slice"
  input: "linear/head/labels/concat/values_1"
  input: "linear/head/labels/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/labels/assert_equal/Equal"
  op: "Equal"
  input: "linear/head/labels/concat"
  input: "linear/head/labels/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "linear/head/labels/assert_equal/Const"
  op: "Const"
  input: "^linear/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/head/labels/assert_equal/All"
  op: "All"
  input: "linear/head/labels/assert_equal/Equal"
  input: "linear/head/labels/assert_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/head/labels/assert_equal/Assert/Const"
  op: "Const"
  input: "^linear/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "linear/head/labels/assert_equal/Assert/Const_1"
  op: "Const"
  input: "^linear/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "linear/head/labels/assert_equal/Assert/Assert/data_0"
  op: "Const"
  input: "^linear/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "linear/head/labels/assert_equal/Assert/Assert/data_2"
  op: "Const"
  input: "^linear/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "linear/head/labels/assert_equal/Assert/Assert"
  op: "Assert"
  input: "linear/head/labels/assert_equal/All"
  input: "linear/head/labels/assert_equal/Assert/Assert/data_0"
  input: "linear/head/labels/concat"
  input: "linear/head/labels/assert_equal/Assert/Assert/data_2"
  input: "linear/head/labels/Shape"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "linear/head/labels"
  op: "Identity"
  input: "linear/head/labels/ExpandDims"
  input: "^linear/head/labels/assert_equal/Assert/Assert"
  input: "^linear/head/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/ToFloat"
  op: "Cast"
  input: "linear/head/labels"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/mean_squared_error/SquaredDifference"
  op: "SquaredDifference"
  input: "linear/linear_model/linear_model/linear_model/weighted_sum"
  input: "linear/head/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/mean_squared_error/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/head/mean_squared_error/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/mean_squared_error/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/head/mean_squared_error/assert_broadcastable/values/shape"
  op: "Shape"
  input: "linear/head/mean_squared_error/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/head/mean_squared_error/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "linear/head/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "linear/head/mean_squared_error/Cast/x"
  op: "Const"
  input: "^linear/head/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/head/mean_squared_error/Mul"
  op: "Mul"
  input: "linear/head/mean_squared_error/SquaredDifference"
  input: "linear/head/mean_squared_error/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/weighted_loss/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/head/weighted_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/weighted_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/head/weighted_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "linear/head/mean_squared_error/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/head/weighted_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "linear/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "linear/head/weighted_loss/Cast/x"
  op: "Const"
  input: "^linear/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/head/weighted_loss/Mul"
  op: "Mul"
  input: "linear/head/mean_squared_error/Mul"
  input: "linear/head/weighted_loss/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/weighted_loss/Const"
  op: "Const"
  input: "^linear/head/weighted_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/head/weighted_loss/Sum"
  op: "Sum"
  input: "linear/head/weighted_loss/Mul"
  input: "linear/head/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/head/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/head/gradients/Fill"
  op: "Fill"
  input: "linear/head/gradients/Shape"
  input: "linear/head/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/head/gradients/linear/head/weighted_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/head/weighted_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "linear/head/gradients/Fill"
  input: "linear/head/gradients/linear/head/weighted_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/head/weighted_loss/Sum_grad/Shape"
  op: "Shape"
  input: "linear/head/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/head/gradients/linear/head/weighted_loss/Sum_grad/Tile"
  op: "Tile"
  input: "linear/head/gradients/linear/head/weighted_loss/Sum_grad/Reshape"
  input: "linear/head/gradients/linear/head/weighted_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/head/weighted_loss/Mul_grad/Shape"
  op: "Shape"
  input: "linear/head/mean_squared_error/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/head/gradients/linear/head/weighted_loss/Mul_grad/Shape_1"
  op: "Shape"
  input: "linear/head/weighted_loss/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/head/gradients/linear/head/weighted_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "linear/head/gradients/linear/head/weighted_loss/Mul_grad/Shape"
  input: "linear/head/gradients/linear/head/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/head/weighted_loss/Mul_grad/Mul"
  op: "Mul"
  input: "linear/head/gradients/linear/head/weighted_loss/Sum_grad/Tile"
  input: "linear/head/weighted_loss/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/head/weighted_loss/Mul_grad/Sum"
  op: "Sum"
  input: "linear/head/gradients/linear/head/weighted_loss/Mul_grad/Mul"
  input: "linear/head/gradients/linear/head/weighted_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/head/gradients/linear/head/weighted_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "linear/head/gradients/linear/head/weighted_loss/Mul_grad/Sum"
  input: "linear/head/gradients/linear/head/weighted_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/head/weighted_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "linear/head/mean_squared_error/Mul"
  input: "linear/head/gradients/linear/head/weighted_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/head/weighted_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "linear/head/gradients/linear/head/weighted_loss/Mul_grad/Mul_1"
  input: "linear/head/gradients/linear/head/weighted_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/head/gradients/linear/head/weighted_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "linear/head/gradients/linear/head/weighted_loss/Mul_grad/Sum_1"
  input: "linear/head/gradients/linear/head/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/head/weighted_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^linear/head/gradients/linear/head/weighted_loss/Mul_grad/Reshape"
  input: "^linear/head/gradients/linear/head/weighted_loss/Mul_grad/Reshape_1"
}
node {
  name: "linear/head/gradients/linear/head/weighted_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "linear/head/gradients/linear/head/weighted_loss/Mul_grad/Reshape"
  input: "^linear/head/gradients/linear/head/weighted_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/head/gradients/linear/head/weighted_loss/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/head/weighted_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "linear/head/gradients/linear/head/weighted_loss/Mul_grad/Reshape_1"
  input: "^linear/head/gradients/linear/head/weighted_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/head/gradients/linear/head/weighted_loss/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/head/mean_squared_error/Mul_grad/Shape"
  op: "Shape"
  input: "linear/head/mean_squared_error/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/head/gradients/linear/head/mean_squared_error/Mul_grad/Shape_1"
  op: "Shape"
  input: "linear/head/mean_squared_error/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/head/gradients/linear/head/mean_squared_error/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "linear/head/gradients/linear/head/mean_squared_error/Mul_grad/Shape"
  input: "linear/head/gradients/linear/head/mean_squared_error/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/head/mean_squared_error/Mul_grad/Mul"
  op: "Mul"
  input: "linear/head/gradients/linear/head/weighted_loss/Mul_grad/tuple/control_dependency"
  input: "linear/head/mean_squared_error/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/head/mean_squared_error/Mul_grad/Sum"
  op: "Sum"
  input: "linear/head/gradients/linear/head/mean_squared_error/Mul_grad/Mul"
  input: "linear/head/gradients/linear/head/mean_squared_error/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/head/gradients/linear/head/mean_squared_error/Mul_grad/Reshape"
  op: "Reshape"
  input: "linear/head/gradients/linear/head/mean_squared_error/Mul_grad/Sum"
  input: "linear/head/gradients/linear/head/mean_squared_error/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/head/mean_squared_error/Mul_grad/Mul_1"
  op: "Mul"
  input: "linear/head/mean_squared_error/SquaredDifference"
  input: "linear/head/gradients/linear/head/weighted_loss/Mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/head/mean_squared_error/Mul_grad/Sum_1"
  op: "Sum"
  input: "linear/head/gradients/linear/head/mean_squared_error/Mul_grad/Mul_1"
  input: "linear/head/gradients/linear/head/mean_squared_error/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/head/gradients/linear/head/mean_squared_error/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "linear/head/gradients/linear/head/mean_squared_error/Mul_grad/Sum_1"
  input: "linear/head/gradients/linear/head/mean_squared_error/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/head/mean_squared_error/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^linear/head/gradients/linear/head/mean_squared_error/Mul_grad/Reshape"
  input: "^linear/head/gradients/linear/head/mean_squared_error/Mul_grad/Reshape_1"
}
node {
  name: "linear/head/gradients/linear/head/mean_squared_error/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "linear/head/gradients/linear/head/mean_squared_error/Mul_grad/Reshape"
  input: "^linear/head/gradients/linear/head/mean_squared_error/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/head/gradients/linear/head/mean_squared_error/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/head/mean_squared_error/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "linear/head/gradients/linear/head/mean_squared_error/Mul_grad/Reshape_1"
  input: "^linear/head/gradients/linear/head/mean_squared_error/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/head/gradients/linear/head/mean_squared_error/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^linear/head/gradients/linear/head/mean_squared_error/Mul_grad/tuple/control_dependency"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/scalar"
  input: "linear/head/gradients/linear/head/mean_squared_error/Mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/sub"
  op: "Sub"
  input: "linear/linear_model/linear_model/linear_model/weighted_sum"
  input: "linear/head/ToFloat"
  input: "^linear/head/gradients/linear/head/mean_squared_error/Mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/Mul"
  input: "linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "linear/linear_model/linear_model/linear_model/weighted_sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/Shape_1"
  op: "Shape"
  input: "linear/head/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/Shape"
  input: "linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/mul_1"
  input: "linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/Sum"
  input: "linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/mul_1"
  input: "linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/Sum_1"
  input: "linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/Neg"
  input: "^linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/Reshape"
}
node {
  name: "linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/Reshape"
  input: "^linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/Neg"
  input: "^linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/tuple/control_dependency"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_grad/BiasAddGrad"
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_grad/tuple/control_dependency"
  op: "Identity"
  input: "linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/tuple/control_dependency"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_grad/BiasAddGrad"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_no_bias_grad/tuple/group_deps"
  op: "NoOp"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_grad/tuple/control_dependency"
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_no_bias_grad/tuple/control_dependency"
  op: "Identity"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_grad/tuple/control_dependency"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_no_bias_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_no_bias_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_grad/tuple/control_dependency"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_no_bias_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_no_bias_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_grad/tuple/control_dependency"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_no_bias_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_no_bias_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_grad/tuple/control_dependency"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_no_bias_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_no_bias_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_grad/tuple/control_dependency"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_no_bias_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_no_bias_grad/tuple/control_dependency_5"
  op: "Identity"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_grad/tuple/control_dependency"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_no_bias_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_no_bias_grad/tuple/control_dependency_6"
  op: "Identity"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_grad/tuple/control_dependency"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_no_bias_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_no_bias_grad/tuple/control_dependency_7"
  op: "Identity"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_grad/tuple/control_dependency"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_no_bias_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_no_bias_grad/tuple/control_dependency_8"
  op: "Identity"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_grad/tuple/control_dependency"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_no_bias_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/head/gradients/linear/head/mean_squared_error/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/age/weighted_sum_grad/MatMul"
  op: "MatMul"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_no_bias_grad/tuple/control_dependency"
  input: "linear/linear_model/age/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/age/weighted_sum_grad/MatMul_1"
  op: "MatMul"
  input: "linear/linear_model/linear_model/linear_model/age/Reshape"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_no_bias_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/age/weighted_sum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/age/weighted_sum_grad/MatMul"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/age/weighted_sum_grad/MatMul_1"
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/age/weighted_sum_grad/tuple/control_dependency"
  op: "Identity"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/age/weighted_sum_grad/MatMul"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/age/weighted_sum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/head/gradients/linear/linear_model/linear_model/linear_model/age/weighted_sum_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/age/weighted_sum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/age/weighted_sum_grad/MatMul_1"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/age/weighted_sum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/head/gradients/linear/linear_model/linear_model/linear_model/age/weighted_sum_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/crim/weighted_sum_grad/MatMul"
  op: "MatMul"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_no_bias_grad/tuple/control_dependency_1"
  input: "linear/linear_model/crim/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/crim/weighted_sum_grad/MatMul_1"
  op: "MatMul"
  input: "linear/linear_model/linear_model/linear_model/crim/Reshape"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_no_bias_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/crim/weighted_sum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/crim/weighted_sum_grad/MatMul"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/crim/weighted_sum_grad/MatMul_1"
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/crim/weighted_sum_grad/tuple/control_dependency"
  op: "Identity"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/crim/weighted_sum_grad/MatMul"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/crim/weighted_sum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/head/gradients/linear/linear_model/linear_model/linear_model/crim/weighted_sum_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/crim/weighted_sum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/crim/weighted_sum_grad/MatMul_1"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/crim/weighted_sum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/head/gradients/linear/linear_model/linear_model/linear_model/crim/weighted_sum_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/dis/weighted_sum_grad/MatMul"
  op: "MatMul"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_no_bias_grad/tuple/control_dependency_2"
  input: "linear/linear_model/dis/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/dis/weighted_sum_grad/MatMul_1"
  op: "MatMul"
  input: "linear/linear_model/linear_model/linear_model/dis/Reshape"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_no_bias_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/dis/weighted_sum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/dis/weighted_sum_grad/MatMul"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/dis/weighted_sum_grad/MatMul_1"
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/dis/weighted_sum_grad/tuple/control_dependency"
  op: "Identity"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/dis/weighted_sum_grad/MatMul"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/dis/weighted_sum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/head/gradients/linear/linear_model/linear_model/linear_model/dis/weighted_sum_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/dis/weighted_sum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/dis/weighted_sum_grad/MatMul_1"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/dis/weighted_sum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/head/gradients/linear/linear_model/linear_model/linear_model/dis/weighted_sum_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/indus/weighted_sum_grad/MatMul"
  op: "MatMul"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_no_bias_grad/tuple/control_dependency_3"
  input: "linear/linear_model/indus/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/indus/weighted_sum_grad/MatMul_1"
  op: "MatMul"
  input: "linear/linear_model/linear_model/linear_model/indus/Reshape"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_no_bias_grad/tuple/control_dependency_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/indus/weighted_sum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/indus/weighted_sum_grad/MatMul"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/indus/weighted_sum_grad/MatMul_1"
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/indus/weighted_sum_grad/tuple/control_dependency"
  op: "Identity"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/indus/weighted_sum_grad/MatMul"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/indus/weighted_sum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/head/gradients/linear/linear_model/linear_model/linear_model/indus/weighted_sum_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/indus/weighted_sum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/indus/weighted_sum_grad/MatMul_1"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/indus/weighted_sum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/head/gradients/linear/linear_model/linear_model/linear_model/indus/weighted_sum_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/nox/weighted_sum_grad/MatMul"
  op: "MatMul"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_no_bias_grad/tuple/control_dependency_4"
  input: "linear/linear_model/nox/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/nox/weighted_sum_grad/MatMul_1"
  op: "MatMul"
  input: "linear/linear_model/linear_model/linear_model/nox/Reshape"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_no_bias_grad/tuple/control_dependency_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/nox/weighted_sum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/nox/weighted_sum_grad/MatMul"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/nox/weighted_sum_grad/MatMul_1"
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/nox/weighted_sum_grad/tuple/control_dependency"
  op: "Identity"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/nox/weighted_sum_grad/MatMul"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/nox/weighted_sum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/head/gradients/linear/linear_model/linear_model/linear_model/nox/weighted_sum_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/nox/weighted_sum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/nox/weighted_sum_grad/MatMul_1"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/nox/weighted_sum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/head/gradients/linear/linear_model/linear_model/linear_model/nox/weighted_sum_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/ptratio/weighted_sum_grad/MatMul"
  op: "MatMul"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_no_bias_grad/tuple/control_dependency_5"
  input: "linear/linear_model/ptratio/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/ptratio/weighted_sum_grad/MatMul_1"
  op: "MatMul"
  input: "linear/linear_model/linear_model/linear_model/ptratio/Reshape"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_no_bias_grad/tuple/control_dependency_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/ptratio/weighted_sum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/ptratio/weighted_sum_grad/MatMul"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/ptratio/weighted_sum_grad/MatMul_1"
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/ptratio/weighted_sum_grad/tuple/control_dependency"
  op: "Identity"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/ptratio/weighted_sum_grad/MatMul"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/ptratio/weighted_sum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/head/gradients/linear/linear_model/linear_model/linear_model/ptratio/weighted_sum_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/ptratio/weighted_sum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/ptratio/weighted_sum_grad/MatMul_1"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/ptratio/weighted_sum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/head/gradients/linear/linear_model/linear_model/linear_model/ptratio/weighted_sum_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/rm/weighted_sum_grad/MatMul"
  op: "MatMul"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_no_bias_grad/tuple/control_dependency_6"
  input: "linear/linear_model/rm/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/rm/weighted_sum_grad/MatMul_1"
  op: "MatMul"
  input: "linear/linear_model/linear_model/linear_model/rm/Reshape"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_no_bias_grad/tuple/control_dependency_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/rm/weighted_sum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/rm/weighted_sum_grad/MatMul"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/rm/weighted_sum_grad/MatMul_1"
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/rm/weighted_sum_grad/tuple/control_dependency"
  op: "Identity"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/rm/weighted_sum_grad/MatMul"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/rm/weighted_sum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/head/gradients/linear/linear_model/linear_model/linear_model/rm/weighted_sum_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/rm/weighted_sum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/rm/weighted_sum_grad/MatMul_1"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/rm/weighted_sum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/head/gradients/linear/linear_model/linear_model/linear_model/rm/weighted_sum_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/tax/weighted_sum_grad/MatMul"
  op: "MatMul"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_no_bias_grad/tuple/control_dependency_7"
  input: "linear/linear_model/tax/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/tax/weighted_sum_grad/MatMul_1"
  op: "MatMul"
  input: "linear/linear_model/linear_model/linear_model/tax/Reshape"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_no_bias_grad/tuple/control_dependency_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/tax/weighted_sum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/tax/weighted_sum_grad/MatMul"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/tax/weighted_sum_grad/MatMul_1"
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/tax/weighted_sum_grad/tuple/control_dependency"
  op: "Identity"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/tax/weighted_sum_grad/MatMul"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/tax/weighted_sum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/head/gradients/linear/linear_model/linear_model/linear_model/tax/weighted_sum_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/tax/weighted_sum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/tax/weighted_sum_grad/MatMul_1"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/tax/weighted_sum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/head/gradients/linear/linear_model/linear_model/linear_model/tax/weighted_sum_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/zn/weighted_sum_grad/MatMul"
  op: "MatMul"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_no_bias_grad/tuple/control_dependency_8"
  input: "linear/linear_model/zn/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/zn/weighted_sum_grad/MatMul_1"
  op: "MatMul"
  input: "linear/linear_model/linear_model/linear_model/zn/Reshape"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_no_bias_grad/tuple/control_dependency_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/zn/weighted_sum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/zn/weighted_sum_grad/MatMul"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/zn/weighted_sum_grad/MatMul_1"
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/zn/weighted_sum_grad/tuple/control_dependency"
  op: "Identity"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/zn/weighted_sum_grad/MatMul"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/zn/weighted_sum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/head/gradients/linear/linear_model/linear_model/linear_model/zn/weighted_sum_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/gradients/linear/linear_model/linear_model/linear_model/zn/weighted_sum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/zn/weighted_sum_grad/MatMul_1"
  input: "^linear/head/gradients/linear/linear_model/linear_model/linear_model/zn/weighted_sum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/head/gradients/linear/linear_model/linear_model/linear_model/zn/weighted_sum_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/age/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/age/weights/part_0/Ftrl"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/age/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "linear/linear/linear_model/age/weights/part_0/Ftrl"
    }
  }
}
node {
  name: "linear/linear/linear_model/age/weights/part_0/Ftrl/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/age/weights/part_0/Ftrl"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/age/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/age/weights/part_0/Ftrl/Assign"
  op: "AssignVariableOp"
  input: "linear/linear/linear_model/age/weights/part_0/Ftrl"
  input: "linear/head/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear/linear_model/age/weights/part_0/Ftrl/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/age/weights/part_0/Ftrl"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/age/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear/linear_model/age/weights/part_0/Ftrl_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/age/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/age/weights/part_0/Ftrl_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/age/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "linear/linear/linear_model/age/weights/part_0/Ftrl_1"
    }
  }
}
node {
  name: "linear/linear/linear_model/age/weights/part_0/Ftrl_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/age/weights/part_0/Ftrl_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/age/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/age/weights/part_0/Ftrl_1/Assign"
  op: "AssignVariableOp"
  input: "linear/linear/linear_model/age/weights/part_0/Ftrl_1"
  input: "linear/linear/linear_model/age/weights/part_0/Ftrl_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear/linear_model/age/weights/part_0/Ftrl_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/age/weights/part_0/Ftrl_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/age/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/head/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/crim/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/crim/weights/part_0/Ftrl"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/crim/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "linear/linear/linear_model/crim/weights/part_0/Ftrl"
    }
  }
}
node {
  name: "linear/linear/linear_model/crim/weights/part_0/Ftrl/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/crim/weights/part_0/Ftrl"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/crim/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/crim/weights/part_0/Ftrl/Assign"
  op: "AssignVariableOp"
  input: "linear/linear/linear_model/crim/weights/part_0/Ftrl"
  input: "linear/head/Const_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear/linear_model/crim/weights/part_0/Ftrl/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/crim/weights/part_0/Ftrl"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/crim/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear/linear_model/crim/weights/part_0/Ftrl_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/crim/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/crim/weights/part_0/Ftrl_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/crim/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "linear/linear/linear_model/crim/weights/part_0/Ftrl_1"
    }
  }
}
node {
  name: "linear/linear/linear_model/crim/weights/part_0/Ftrl_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/crim/weights/part_0/Ftrl_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/crim/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/crim/weights/part_0/Ftrl_1/Assign"
  op: "AssignVariableOp"
  input: "linear/linear/linear_model/crim/weights/part_0/Ftrl_1"
  input: "linear/linear/linear_model/crim/weights/part_0/Ftrl_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear/linear_model/crim/weights/part_0/Ftrl_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/crim/weights/part_0/Ftrl_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/crim/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/head/Const_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/dis/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/dis/weights/part_0/Ftrl"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/dis/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "linear/linear/linear_model/dis/weights/part_0/Ftrl"
    }
  }
}
node {
  name: "linear/linear/linear_model/dis/weights/part_0/Ftrl/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/dis/weights/part_0/Ftrl"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/dis/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/dis/weights/part_0/Ftrl/Assign"
  op: "AssignVariableOp"
  input: "linear/linear/linear_model/dis/weights/part_0/Ftrl"
  input: "linear/head/Const_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear/linear_model/dis/weights/part_0/Ftrl/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/dis/weights/part_0/Ftrl"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/dis/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear/linear_model/dis/weights/part_0/Ftrl_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/dis/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/dis/weights/part_0/Ftrl_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/dis/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "linear/linear/linear_model/dis/weights/part_0/Ftrl_1"
    }
  }
}
node {
  name: "linear/linear/linear_model/dis/weights/part_0/Ftrl_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/dis/weights/part_0/Ftrl_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/dis/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/dis/weights/part_0/Ftrl_1/Assign"
  op: "AssignVariableOp"
  input: "linear/linear/linear_model/dis/weights/part_0/Ftrl_1"
  input: "linear/linear/linear_model/dis/weights/part_0/Ftrl_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear/linear_model/dis/weights/part_0/Ftrl_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/dis/weights/part_0/Ftrl_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/dis/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/head/Const_3"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/indus/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/indus/weights/part_0/Ftrl"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/indus/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "linear/linear/linear_model/indus/weights/part_0/Ftrl"
    }
  }
}
node {
  name: "linear/linear/linear_model/indus/weights/part_0/Ftrl/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/indus/weights/part_0/Ftrl"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/indus/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/indus/weights/part_0/Ftrl/Assign"
  op: "AssignVariableOp"
  input: "linear/linear/linear_model/indus/weights/part_0/Ftrl"
  input: "linear/head/Const_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear/linear_model/indus/weights/part_0/Ftrl/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/indus/weights/part_0/Ftrl"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/indus/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear/linear_model/indus/weights/part_0/Ftrl_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/indus/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/indus/weights/part_0/Ftrl_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/indus/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "linear/linear/linear_model/indus/weights/part_0/Ftrl_1"
    }
  }
}
node {
  name: "linear/linear/linear_model/indus/weights/part_0/Ftrl_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/indus/weights/part_0/Ftrl_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/indus/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/indus/weights/part_0/Ftrl_1/Assign"
  op: "AssignVariableOp"
  input: "linear/linear/linear_model/indus/weights/part_0/Ftrl_1"
  input: "linear/linear/linear_model/indus/weights/part_0/Ftrl_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear/linear_model/indus/weights/part_0/Ftrl_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/indus/weights/part_0/Ftrl_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/indus/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/head/Const_4"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/nox/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/nox/weights/part_0/Ftrl"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/nox/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "linear/linear/linear_model/nox/weights/part_0/Ftrl"
    }
  }
}
node {
  name: "linear/linear/linear_model/nox/weights/part_0/Ftrl/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/nox/weights/part_0/Ftrl"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/nox/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/nox/weights/part_0/Ftrl/Assign"
  op: "AssignVariableOp"
  input: "linear/linear/linear_model/nox/weights/part_0/Ftrl"
  input: "linear/head/Const_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear/linear_model/nox/weights/part_0/Ftrl/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/nox/weights/part_0/Ftrl"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/nox/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear/linear_model/nox/weights/part_0/Ftrl_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/nox/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/nox/weights/part_0/Ftrl_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/nox/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "linear/linear/linear_model/nox/weights/part_0/Ftrl_1"
    }
  }
}
node {
  name: "linear/linear/linear_model/nox/weights/part_0/Ftrl_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/nox/weights/part_0/Ftrl_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/nox/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/nox/weights/part_0/Ftrl_1/Assign"
  op: "AssignVariableOp"
  input: "linear/linear/linear_model/nox/weights/part_0/Ftrl_1"
  input: "linear/linear/linear_model/nox/weights/part_0/Ftrl_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear/linear_model/nox/weights/part_0/Ftrl_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/nox/weights/part_0/Ftrl_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/nox/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/head/Const_5"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/ptratio/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/ptratio/weights/part_0/Ftrl"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/ptratio/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "linear/linear/linear_model/ptratio/weights/part_0/Ftrl"
    }
  }
}
node {
  name: "linear/linear/linear_model/ptratio/weights/part_0/Ftrl/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/ptratio/weights/part_0/Ftrl"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/ptratio/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/ptratio/weights/part_0/Ftrl/Assign"
  op: "AssignVariableOp"
  input: "linear/linear/linear_model/ptratio/weights/part_0/Ftrl"
  input: "linear/head/Const_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear/linear_model/ptratio/weights/part_0/Ftrl/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/ptratio/weights/part_0/Ftrl"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/ptratio/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear/linear_model/ptratio/weights/part_0/Ftrl_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/ptratio/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/ptratio/weights/part_0/Ftrl_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/ptratio/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "linear/linear/linear_model/ptratio/weights/part_0/Ftrl_1"
    }
  }
}
node {
  name: "linear/linear/linear_model/ptratio/weights/part_0/Ftrl_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/ptratio/weights/part_0/Ftrl_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/ptratio/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/ptratio/weights/part_0/Ftrl_1/Assign"
  op: "AssignVariableOp"
  input: "linear/linear/linear_model/ptratio/weights/part_0/Ftrl_1"
  input: "linear/linear/linear_model/ptratio/weights/part_0/Ftrl_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear/linear_model/ptratio/weights/part_0/Ftrl_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/ptratio/weights/part_0/Ftrl_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/ptratio/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/head/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/rm/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/rm/weights/part_0/Ftrl"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/rm/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "linear/linear/linear_model/rm/weights/part_0/Ftrl"
    }
  }
}
node {
  name: "linear/linear/linear_model/rm/weights/part_0/Ftrl/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/rm/weights/part_0/Ftrl"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/rm/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/rm/weights/part_0/Ftrl/Assign"
  op: "AssignVariableOp"
  input: "linear/linear/linear_model/rm/weights/part_0/Ftrl"
  input: "linear/head/Const_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear/linear_model/rm/weights/part_0/Ftrl/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/rm/weights/part_0/Ftrl"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/rm/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear/linear_model/rm/weights/part_0/Ftrl_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/rm/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/rm/weights/part_0/Ftrl_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/rm/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "linear/linear/linear_model/rm/weights/part_0/Ftrl_1"
    }
  }
}
node {
  name: "linear/linear/linear_model/rm/weights/part_0/Ftrl_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/rm/weights/part_0/Ftrl_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/rm/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/rm/weights/part_0/Ftrl_1/Assign"
  op: "AssignVariableOp"
  input: "linear/linear/linear_model/rm/weights/part_0/Ftrl_1"
  input: "linear/linear/linear_model/rm/weights/part_0/Ftrl_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear/linear_model/rm/weights/part_0/Ftrl_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/rm/weights/part_0/Ftrl_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/rm/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/head/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/tax/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/tax/weights/part_0/Ftrl"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/tax/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "linear/linear/linear_model/tax/weights/part_0/Ftrl"
    }
  }
}
node {
  name: "linear/linear/linear_model/tax/weights/part_0/Ftrl/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/tax/weights/part_0/Ftrl"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/tax/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/tax/weights/part_0/Ftrl/Assign"
  op: "AssignVariableOp"
  input: "linear/linear/linear_model/tax/weights/part_0/Ftrl"
  input: "linear/head/Const_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear/linear_model/tax/weights/part_0/Ftrl/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/tax/weights/part_0/Ftrl"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/tax/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear/linear_model/tax/weights/part_0/Ftrl_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/tax/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/tax/weights/part_0/Ftrl_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/tax/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "linear/linear/linear_model/tax/weights/part_0/Ftrl_1"
    }
  }
}
node {
  name: "linear/linear/linear_model/tax/weights/part_0/Ftrl_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/tax/weights/part_0/Ftrl_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/tax/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/tax/weights/part_0/Ftrl_1/Assign"
  op: "AssignVariableOp"
  input: "linear/linear/linear_model/tax/weights/part_0/Ftrl_1"
  input: "linear/linear/linear_model/tax/weights/part_0/Ftrl_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear/linear_model/tax/weights/part_0/Ftrl_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/tax/weights/part_0/Ftrl_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/tax/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/head/Const_8"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/zn/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/zn/weights/part_0/Ftrl"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/zn/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "linear/linear/linear_model/zn/weights/part_0/Ftrl"
    }
  }
}
node {
  name: "linear/linear/linear_model/zn/weights/part_0/Ftrl/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/zn/weights/part_0/Ftrl"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/zn/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/zn/weights/part_0/Ftrl/Assign"
  op: "AssignVariableOp"
  input: "linear/linear/linear_model/zn/weights/part_0/Ftrl"
  input: "linear/head/Const_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear/linear_model/zn/weights/part_0/Ftrl/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/zn/weights/part_0/Ftrl"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/zn/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear/linear_model/zn/weights/part_0/Ftrl_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/zn/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/zn/weights/part_0/Ftrl_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/zn/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "linear/linear/linear_model/zn/weights/part_0/Ftrl_1"
    }
  }
}
node {
  name: "linear/linear/linear_model/zn/weights/part_0/Ftrl_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/zn/weights/part_0/Ftrl_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/zn/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/zn/weights/part_0/Ftrl_1/Assign"
  op: "AssignVariableOp"
  input: "linear/linear/linear_model/zn/weights/part_0/Ftrl_1"
  input: "linear/linear/linear_model/zn/weights/part_0/Ftrl_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear/linear_model/zn/weights/part_0/Ftrl_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/zn/weights/part_0/Ftrl_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/zn/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/head/Const_9"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/bias_weights/part_0/Ftrl"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "linear/linear/linear_model/bias_weights/part_0/Ftrl"
    }
  }
}
node {
  name: "linear/linear/linear_model/bias_weights/part_0/Ftrl/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/bias_weights/part_0/Ftrl"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/bias_weights/part_0/Ftrl/Assign"
  op: "AssignVariableOp"
  input: "linear/linear/linear_model/bias_weights/part_0/Ftrl"
  input: "linear/head/Const_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear/linear_model/bias_weights/part_0/Ftrl/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/bias_weights/part_0/Ftrl"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear/linear_model/bias_weights/part_0/Ftrl_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/bias_weights/part_0/Ftrl_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "linear/linear/linear_model/bias_weights/part_0/Ftrl_1"
    }
  }
}
node {
  name: "linear/linear/linear_model/bias_weights/part_0/Ftrl_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/bias_weights/part_0/Ftrl_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/linear_model/bias_weights/part_0/Ftrl_1/Assign"
  op: "AssignVariableOp"
  input: "linear/linear/linear_model/bias_weights/part_0/Ftrl_1"
  input: "linear/linear/linear_model/bias_weights/part_0/Ftrl_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear/linear_model/bias_weights/part_0/Ftrl_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/bias_weights/part_0/Ftrl_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/head/Ftrl/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "linear/head/Ftrl/l1_regularization_strength"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/head/Ftrl/l2_regularization_strength"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/head/Ftrl/l2_shrinkage_regularization_strength"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/head/Ftrl/learning_rate_power"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.5
      }
    }
  }
}
node {
  name: "linear/head/Ftrl/update_linear/linear_model/age/weights/part_0/ResourceApplyFtrl"
  op: "ResourceApplyFtrl"
  input: "linear/linear_model/age/weights/part_0"
  input: "linear/linear/linear_model/age/weights/part_0/Ftrl"
  input: "linear/linear/linear_model/age/weights/part_0/Ftrl_1"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/age/weighted_sum_grad/tuple/control_dependency_1"
  input: "linear/head/Ftrl/learning_rate"
  input: "linear/head/Ftrl/l1_regularization_strength"
  input: "linear/head/Ftrl/l2_regularization_strength"
  input: "linear/head/Ftrl/learning_rate_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/age/weights/part_0"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/head/Ftrl/update_linear/linear_model/crim/weights/part_0/ResourceApplyFtrl"
  op: "ResourceApplyFtrl"
  input: "linear/linear_model/crim/weights/part_0"
  input: "linear/linear/linear_model/crim/weights/part_0/Ftrl"
  input: "linear/linear/linear_model/crim/weights/part_0/Ftrl_1"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/crim/weighted_sum_grad/tuple/control_dependency_1"
  input: "linear/head/Ftrl/learning_rate"
  input: "linear/head/Ftrl/l1_regularization_strength"
  input: "linear/head/Ftrl/l2_regularization_strength"
  input: "linear/head/Ftrl/learning_rate_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/crim/weights/part_0"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/head/Ftrl/update_linear/linear_model/dis/weights/part_0/ResourceApplyFtrl"
  op: "ResourceApplyFtrl"
  input: "linear/linear_model/dis/weights/part_0"
  input: "linear/linear/linear_model/dis/weights/part_0/Ftrl"
  input: "linear/linear/linear_model/dis/weights/part_0/Ftrl_1"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/dis/weighted_sum_grad/tuple/control_dependency_1"
  input: "linear/head/Ftrl/learning_rate"
  input: "linear/head/Ftrl/l1_regularization_strength"
  input: "linear/head/Ftrl/l2_regularization_strength"
  input: "linear/head/Ftrl/learning_rate_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/dis/weights/part_0"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/head/Ftrl/update_linear/linear_model/indus/weights/part_0/ResourceApplyFtrl"
  op: "ResourceApplyFtrl"
  input: "linear/linear_model/indus/weights/part_0"
  input: "linear/linear/linear_model/indus/weights/part_0/Ftrl"
  input: "linear/linear/linear_model/indus/weights/part_0/Ftrl_1"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/indus/weighted_sum_grad/tuple/control_dependency_1"
  input: "linear/head/Ftrl/learning_rate"
  input: "linear/head/Ftrl/l1_regularization_strength"
  input: "linear/head/Ftrl/l2_regularization_strength"
  input: "linear/head/Ftrl/learning_rate_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/indus/weights/part_0"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/head/Ftrl/update_linear/linear_model/nox/weights/part_0/ResourceApplyFtrl"
  op: "ResourceApplyFtrl"
  input: "linear/linear_model/nox/weights/part_0"
  input: "linear/linear/linear_model/nox/weights/part_0/Ftrl"
  input: "linear/linear/linear_model/nox/weights/part_0/Ftrl_1"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/nox/weighted_sum_grad/tuple/control_dependency_1"
  input: "linear/head/Ftrl/learning_rate"
  input: "linear/head/Ftrl/l1_regularization_strength"
  input: "linear/head/Ftrl/l2_regularization_strength"
  input: "linear/head/Ftrl/learning_rate_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/nox/weights/part_0"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/head/Ftrl/update_linear/linear_model/ptratio/weights/part_0/ResourceApplyFtrl"
  op: "ResourceApplyFtrl"
  input: "linear/linear_model/ptratio/weights/part_0"
  input: "linear/linear/linear_model/ptratio/weights/part_0/Ftrl"
  input: "linear/linear/linear_model/ptratio/weights/part_0/Ftrl_1"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/ptratio/weighted_sum_grad/tuple/control_dependency_1"
  input: "linear/head/Ftrl/learning_rate"
  input: "linear/head/Ftrl/l1_regularization_strength"
  input: "linear/head/Ftrl/l2_regularization_strength"
  input: "linear/head/Ftrl/learning_rate_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/ptratio/weights/part_0"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/head/Ftrl/update_linear/linear_model/rm/weights/part_0/ResourceApplyFtrl"
  op: "ResourceApplyFtrl"
  input: "linear/linear_model/rm/weights/part_0"
  input: "linear/linear/linear_model/rm/weights/part_0/Ftrl"
  input: "linear/linear/linear_model/rm/weights/part_0/Ftrl_1"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/rm/weighted_sum_grad/tuple/control_dependency_1"
  input: "linear/head/Ftrl/learning_rate"
  input: "linear/head/Ftrl/l1_regularization_strength"
  input: "linear/head/Ftrl/l2_regularization_strength"
  input: "linear/head/Ftrl/learning_rate_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/rm/weights/part_0"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/head/Ftrl/update_linear/linear_model/tax/weights/part_0/ResourceApplyFtrl"
  op: "ResourceApplyFtrl"
  input: "linear/linear_model/tax/weights/part_0"
  input: "linear/linear/linear_model/tax/weights/part_0/Ftrl"
  input: "linear/linear/linear_model/tax/weights/part_0/Ftrl_1"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/tax/weighted_sum_grad/tuple/control_dependency_1"
  input: "linear/head/Ftrl/learning_rate"
  input: "linear/head/Ftrl/l1_regularization_strength"
  input: "linear/head/Ftrl/l2_regularization_strength"
  input: "linear/head/Ftrl/learning_rate_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/tax/weights/part_0"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/head/Ftrl/update_linear/linear_model/zn/weights/part_0/ResourceApplyFtrl"
  op: "ResourceApplyFtrl"
  input: "linear/linear_model/zn/weights/part_0"
  input: "linear/linear/linear_model/zn/weights/part_0/Ftrl"
  input: "linear/linear/linear_model/zn/weights/part_0/Ftrl_1"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/zn/weighted_sum_grad/tuple/control_dependency_1"
  input: "linear/head/Ftrl/learning_rate"
  input: "linear/head/Ftrl/l1_regularization_strength"
  input: "linear/head/Ftrl/l2_regularization_strength"
  input: "linear/head/Ftrl/learning_rate_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/zn/weights/part_0"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/head/Ftrl/update_linear/linear_model/bias_weights/part_0/ResourceApplyFtrl"
  op: "ResourceApplyFtrl"
  input: "linear/linear_model/bias_weights/part_0"
  input: "linear/linear/linear_model/bias_weights/part_0/Ftrl"
  input: "linear/linear/linear_model/bias_weights/part_0/Ftrl_1"
  input: "linear/head/gradients/linear/linear_model/linear_model/linear_model/weighted_sum_grad/tuple/control_dependency_1"
  input: "linear/head/Ftrl/learning_rate"
  input: "linear/head/Ftrl/l1_regularization_strength"
  input: "linear/head/Ftrl/l2_regularization_strength"
  input: "linear/head/Ftrl/learning_rate_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights/part_0"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/head/Ftrl/update"
  op: "NoOp"
  input: "^linear/head/Ftrl/update_linear/linear_model/age/weights/part_0/ResourceApplyFtrl"
  input: "^linear/head/Ftrl/update_linear/linear_model/bias_weights/part_0/ResourceApplyFtrl"
  input: "^linear/head/Ftrl/update_linear/linear_model/crim/weights/part_0/ResourceApplyFtrl"
  input: "^linear/head/Ftrl/update_linear/linear_model/dis/weights/part_0/ResourceApplyFtrl"
  input: "^linear/head/Ftrl/update_linear/linear_model/indus/weights/part_0/ResourceApplyFtrl"
  input: "^linear/head/Ftrl/update_linear/linear_model/nox/weights/part_0/ResourceApplyFtrl"
  input: "^linear/head/Ftrl/update_linear/linear_model/ptratio/weights/part_0/ResourceApplyFtrl"
  input: "^linear/head/Ftrl/update_linear/linear_model/rm/weights/part_0/ResourceApplyFtrl"
  input: "^linear/head/Ftrl/update_linear/linear_model/tax/weights/part_0/ResourceApplyFtrl"
  input: "^linear/head/Ftrl/update_linear/linear_model/zn/weights/part_0/ResourceApplyFtrl"
}
node {
  name: "linear/head/Ftrl/Const"
  op: "Const"
  input: "^linear/head/Ftrl/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "linear/head/Ftrl"
  op: "AssignAddVariableOp"
  input: "global_step"
  input: "linear/head/Ftrl/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "linear/head/ones_like/Shape"
  op: "Shape"
  input: "linear/head/mean_squared_error/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/head/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/head/ones_like"
  op: "Fill"
  input: "linear/head/ones_like/Shape"
  input: "linear/head/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/head/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/head/mul"
  op: "Mul"
  input: "linear/head/mul/x"
  input: "linear/head/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/head/Const_10"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/head/Sum"
  op: "Sum"
  input: "linear/head/mul"
  input: "linear/head/Const_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/head/truediv"
  op: "RealDiv"
  input: "linear/head/weighted_loss/Sum"
  input: "linear/head/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "loss"
  op: "ScalarSummary"
  input: "loss/tags"
  input: "linear/head/weighted_loss/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "average_loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "average_loss"
      }
    }
  }
}
node {
  name: "average_loss"
  op: "ScalarSummary"
  input: "average_loss/tags"
  input: "linear/head/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^linear/linear/linear_model/age/weights/part_0/Ftrl/Assign"
  input: "^linear/linear/linear_model/age/weights/part_0/Ftrl_1/Assign"
  input: "^linear/linear/linear_model/bias_weights/part_0/Ftrl/Assign"
  input: "^linear/linear/linear_model/bias_weights/part_0/Ftrl_1/Assign"
  input: "^linear/linear/linear_model/crim/weights/part_0/Ftrl/Assign"
  input: "^linear/linear/linear_model/crim/weights/part_0/Ftrl_1/Assign"
  input: "^linear/linear/linear_model/dis/weights/part_0/Ftrl/Assign"
  input: "^linear/linear/linear_model/dis/weights/part_0/Ftrl_1/Assign"
  input: "^linear/linear/linear_model/indus/weights/part_0/Ftrl/Assign"
  input: "^linear/linear/linear_model/indus/weights/part_0/Ftrl_1/Assign"
  input: "^linear/linear/linear_model/nox/weights/part_0/Ftrl/Assign"
  input: "^linear/linear/linear_model/nox/weights/part_0/Ftrl_1/Assign"
  input: "^linear/linear/linear_model/ptratio/weights/part_0/Ftrl/Assign"
  input: "^linear/linear/linear_model/ptratio/weights/part_0/Ftrl_1/Assign"
  input: "^linear/linear/linear_model/rm/weights/part_0/Ftrl/Assign"
  input: "^linear/linear/linear_model/rm/weights/part_0/Ftrl_1/Assign"
  input: "^linear/linear/linear_model/tax/weights/part_0/Ftrl/Assign"
  input: "^linear/linear/linear_model/tax/weights/part_0/Ftrl_1/Assign"
  input: "^linear/linear/linear_model/zn/weights/part_0/Ftrl/Assign"
  input: "^linear/linear/linear_model/zn/weights/part_0/Ftrl_1/Assign"
  input: "^linear/linear_model/age/weights/part_0/Assign"
  input: "^linear/linear_model/bias_weights/part_0/Assign"
  input: "^linear/linear_model/crim/weights/part_0/Assign"
  input: "^linear/linear_model/dis/weights/part_0/Assign"
  input: "^linear/linear_model/indus/weights/part_0/Assign"
  input: "^linear/linear_model/nox/weights/part_0/Assign"
  input: "^linear/linear_model/ptratio/weights/part_0/Assign"
  input: "^linear/linear_model/rm/weights/part_0/Assign"
  input: "^linear/linear_model/tax/weights/part_0/Assign"
  input: "^linear/linear_model/zn/weights/part_0/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "linear/linear_model/age/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "linear/linear_model/crim/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "linear/linear_model/dis/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "linear/linear_model/indus/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "linear/linear_model/nox/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "linear/linear_model/ptratio/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "linear/linear_model/rm/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "linear/linear_model/tax/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "linear/linear_model/zn/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "linear/linear_model/bias_weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/age/weights/part_0/Ftrl"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/age/weights/part_0/Ftrl_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/crim/weights/part_0/Ftrl"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/crim/weights/part_0/Ftrl_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/dis/weights/part_0/Ftrl"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/dis/weights/part_0/Ftrl_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/indus/weights/part_0/Ftrl"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/indus/weights/part_0/Ftrl_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/nox/weights/part_0/Ftrl"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/nox/weights/part_0/Ftrl_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/ptratio/weights/part_0/Ftrl"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/ptratio/weights/part_0/Ftrl_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/rm/weights/part_0/Ftrl"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/rm/weights/part_0/Ftrl_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/tax/weights/part_0/Ftrl"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/tax/weights/part_0/Ftrl_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_27"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/zn/weights/part_0/Ftrl"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_28"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/zn/weights/part_0/Ftrl_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_29"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/bias_weights/part_0/Ftrl"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_30"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/bias_weights/part_0/Ftrl_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/VarIsInitializedOp"
  input: "report_uninitialized_variables/VarIsInitializedOp_1"
  input: "report_uninitialized_variables/VarIsInitializedOp_2"
  input: "report_uninitialized_variables/VarIsInitializedOp_3"
  input: "report_uninitialized_variables/VarIsInitializedOp_4"
  input: "report_uninitialized_variables/VarIsInitializedOp_5"
  input: "report_uninitialized_variables/VarIsInitializedOp_6"
  input: "report_uninitialized_variables/VarIsInitializedOp_7"
  input: "report_uninitialized_variables/VarIsInitializedOp_8"
  input: "report_uninitialized_variables/VarIsInitializedOp_9"
  input: "report_uninitialized_variables/VarIsInitializedOp_10"
  input: "report_uninitialized_variables/VarIsInitializedOp_11"
  input: "report_uninitialized_variables/VarIsInitializedOp_12"
  input: "report_uninitialized_variables/VarIsInitializedOp_13"
  input: "report_uninitialized_variables/VarIsInitializedOp_14"
  input: "report_uninitialized_variables/VarIsInitializedOp_15"
  input: "report_uninitialized_variables/VarIsInitializedOp_16"
  input: "report_uninitialized_variables/VarIsInitializedOp_17"
  input: "report_uninitialized_variables/VarIsInitializedOp_18"
  input: "report_uninitialized_variables/VarIsInitializedOp_19"
  input: "report_uninitialized_variables/VarIsInitializedOp_20"
  input: "report_uninitialized_variables/VarIsInitializedOp_21"
  input: "report_uninitialized_variables/VarIsInitializedOp_22"
  input: "report_uninitialized_variables/VarIsInitializedOp_23"
  input: "report_uninitialized_variables/VarIsInitializedOp_24"
  input: "report_uninitialized_variables/VarIsInitializedOp_25"
  input: "report_uninitialized_variables/VarIsInitializedOp_26"
  input: "report_uninitialized_variables/VarIsInitializedOp_27"
  input: "report_uninitialized_variables/VarIsInitializedOp_28"
  input: "report_uninitialized_variables/VarIsInitializedOp_29"
  input: "report_uninitialized_variables/VarIsInitializedOp_30"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 31
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 31
          }
        }
        string_val: "global_step"
        string_val: "linear/linear_model/age/weights/part_0"
        string_val: "linear/linear_model/crim/weights/part_0"
        string_val: "linear/linear_model/dis/weights/part_0"
        string_val: "linear/linear_model/indus/weights/part_0"
        string_val: "linear/linear_model/nox/weights/part_0"
        string_val: "linear/linear_model/ptratio/weights/part_0"
        string_val: "linear/linear_model/rm/weights/part_0"
        string_val: "linear/linear_model/tax/weights/part_0"
        string_val: "linear/linear_model/zn/weights/part_0"
        string_val: "linear/linear_model/bias_weights/part_0"
        string_val: "linear/linear/linear_model/age/weights/part_0/Ftrl"
        string_val: "linear/linear/linear_model/age/weights/part_0/Ftrl_1"
        string_val: "linear/linear/linear_model/crim/weights/part_0/Ftrl"
        string_val: "linear/linear/linear_model/crim/weights/part_0/Ftrl_1"
        string_val: "linear/linear/linear_model/dis/weights/part_0/Ftrl"
        string_val: "linear/linear/linear_model/dis/weights/part_0/Ftrl_1"
        string_val: "linear/linear/linear_model/indus/weights/part_0/Ftrl"
        string_val: "linear/linear/linear_model/indus/weights/part_0/Ftrl_1"
        string_val: "linear/linear/linear_model/nox/weights/part_0/Ftrl"
        string_val: "linear/linear/linear_model/nox/weights/part_0/Ftrl_1"
        string_val: "linear/linear/linear_model/ptratio/weights/part_0/Ftrl"
        string_val: "linear/linear/linear_model/ptratio/weights/part_0/Ftrl_1"
        string_val: "linear/linear/linear_model/rm/weights/part_0/Ftrl"
        string_val: "linear/linear/linear_model/rm/weights/part_0/Ftrl_1"
        string_val: "linear/linear/linear_model/tax/weights/part_0/Ftrl"
        string_val: "linear/linear/linear_model/tax/weights/part_0/Ftrl_1"
        string_val: "linear/linear/linear_model/zn/weights/part_0/Ftrl"
        string_val: "linear/linear/linear_model/zn/weights/part_0/Ftrl_1"
        string_val: "linear/linear/linear_model/bias_weights/part_0/Ftrl"
        string_val: "linear/linear/linear_model/bias_weights/part_0/Ftrl_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 31
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 31
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 31
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/GatherV2"
  input: "report_uninitialized_resources/Const"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "linear/linear_model/age/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "linear/linear_model/crim/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "linear/linear_model/dis/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "linear/linear_model/indus/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "linear/linear_model/nox/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "linear/linear_model/ptratio/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "linear/linear_model/rm/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "linear/linear_model/tax/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "linear/linear_model/zn/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "linear/linear_model/bias_weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/age/weights/part_0/Ftrl"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/age/weights/part_0/Ftrl_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/crim/weights/part_0/Ftrl"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/crim/weights/part_0/Ftrl_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/dis/weights/part_0/Ftrl"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/dis/weights/part_0/Ftrl_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/indus/weights/part_0/Ftrl"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/indus/weights/part_0/Ftrl_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/nox/weights/part_0/Ftrl"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/nox/weights/part_0/Ftrl_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/ptratio/weights/part_0/Ftrl"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/ptratio/weights/part_0/Ftrl_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/rm/weights/part_0/Ftrl"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/rm/weights/part_0/Ftrl_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/tax/weights/part_0/Ftrl"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/tax/weights/part_0/Ftrl_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_27"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/zn/weights/part_0/Ftrl"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_28"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/zn/weights/part_0/Ftrl_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_29"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/bias_weights/part_0/Ftrl"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_30"
  op: "VarIsInitializedOp"
  input: "linear/linear/linear_model/bias_weights/part_0/Ftrl_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/VarIsInitializedOp"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_1"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_2"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_3"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_4"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_5"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_6"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_7"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_8"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_9"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_10"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_11"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_12"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_13"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_14"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_15"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_16"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_17"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_18"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_19"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_20"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_21"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_22"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_23"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_24"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_25"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_26"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_27"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_28"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_29"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_30"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 31
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 31
          }
        }
        string_val: "global_step"
        string_val: "linear/linear_model/age/weights/part_0"
        string_val: "linear/linear_model/crim/weights/part_0"
        string_val: "linear/linear_model/dis/weights/part_0"
        string_val: "linear/linear_model/indus/weights/part_0"
        string_val: "linear/linear_model/nox/weights/part_0"
        string_val: "linear/linear_model/ptratio/weights/part_0"
        string_val: "linear/linear_model/rm/weights/part_0"
        string_val: "linear/linear_model/tax/weights/part_0"
        string_val: "linear/linear_model/zn/weights/part_0"
        string_val: "linear/linear_model/bias_weights/part_0"
        string_val: "linear/linear/linear_model/age/weights/part_0/Ftrl"
        string_val: "linear/linear/linear_model/age/weights/part_0/Ftrl_1"
        string_val: "linear/linear/linear_model/crim/weights/part_0/Ftrl"
        string_val: "linear/linear/linear_model/crim/weights/part_0/Ftrl_1"
        string_val: "linear/linear/linear_model/dis/weights/part_0/Ftrl"
        string_val: "linear/linear/linear_model/dis/weights/part_0/Ftrl_1"
        string_val: "linear/linear/linear_model/indus/weights/part_0/Ftrl"
        string_val: "linear/linear/linear_model/indus/weights/part_0/Ftrl_1"
        string_val: "linear/linear/linear_model/nox/weights/part_0/Ftrl"
        string_val: "linear/linear/linear_model/nox/weights/part_0/Ftrl_1"
        string_val: "linear/linear/linear_model/ptratio/weights/part_0/Ftrl"
        string_val: "linear/linear/linear_model/ptratio/weights/part_0/Ftrl_1"
        string_val: "linear/linear/linear_model/rm/weights/part_0/Ftrl"
        string_val: "linear/linear/linear_model/rm/weights/part_0/Ftrl_1"
        string_val: "linear/linear/linear_model/tax/weights/part_0/Ftrl"
        string_val: "linear/linear/linear_model/tax/weights/part_0/Ftrl_1"
        string_val: "linear/linear/linear_model/zn/weights/part_0/Ftrl"
        string_val: "linear/linear/linear_model/zn/weights/part_0/Ftrl_1"
        string_val: "linear/linear/linear_model/bias_weights/part_0/Ftrl"
        string_val: "linear/linear/linear_model/bias_weights/part_0/Ftrl_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 31
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 31
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 31
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_1"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  input: "report_uninitialized_resources_1/Const"
  input: "concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "init_3"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_2"
  input: "^init_3"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "linear/bias"
  input: "linear/fraction_of_zero_weights"
  input: "loss"
  input: "average_loss"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/age/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_1"
  op: "Identity"
  input: "save/Identity"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/age/weights/part_0/Ftrl"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_2"
  op: "Identity"
  input: "save/Read_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_3"
  op: "Identity"
  input: "save/Identity_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/age/weights/part_0/Ftrl_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_4"
  op: "Identity"
  input: "save/Read_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_5"
  op: "Identity"
  input: "save/Identity_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/bias_weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_6"
  op: "Identity"
  input: "save/Read_3/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_7"
  op: "Identity"
  input: "save/Identity_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_4/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/bias_weights/part_0/Ftrl"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_8"
  op: "Identity"
  input: "save/Read_4/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_9"
  op: "Identity"
  input: "save/Identity_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_5/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/bias_weights/part_0/Ftrl_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_10"
  op: "Identity"
  input: "save/Read_5/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_11"
  op: "Identity"
  input: "save/Identity_10"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_6/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/crim/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_12"
  op: "Identity"
  input: "save/Read_6/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_13"
  op: "Identity"
  input: "save/Identity_12"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_7/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/crim/weights/part_0/Ftrl"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_14"
  op: "Identity"
  input: "save/Read_7/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_15"
  op: "Identity"
  input: "save/Identity_14"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_8/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/crim/weights/part_0/Ftrl_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_16"
  op: "Identity"
  input: "save/Read_8/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_17"
  op: "Identity"
  input: "save/Identity_16"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_9/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/dis/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_18"
  op: "Identity"
  input: "save/Read_9/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_19"
  op: "Identity"
  input: "save/Identity_18"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_10/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/dis/weights/part_0/Ftrl"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_20"
  op: "Identity"
  input: "save/Read_10/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_21"
  op: "Identity"
  input: "save/Identity_20"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_11/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/dis/weights/part_0/Ftrl_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_22"
  op: "Identity"
  input: "save/Read_11/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_23"
  op: "Identity"
  input: "save/Identity_22"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_12/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/indus/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_24"
  op: "Identity"
  input: "save/Read_12/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_25"
  op: "Identity"
  input: "save/Identity_24"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_13/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/indus/weights/part_0/Ftrl"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_26"
  op: "Identity"
  input: "save/Read_13/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_27"
  op: "Identity"
  input: "save/Identity_26"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_14/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/indus/weights/part_0/Ftrl_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_28"
  op: "Identity"
  input: "save/Read_14/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_29"
  op: "Identity"
  input: "save/Identity_28"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_15/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/nox/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_30"
  op: "Identity"
  input: "save/Read_15/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_31"
  op: "Identity"
  input: "save/Identity_30"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_16/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/nox/weights/part_0/Ftrl"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_32"
  op: "Identity"
  input: "save/Read_16/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_33"
  op: "Identity"
  input: "save/Identity_32"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_17/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/nox/weights/part_0/Ftrl_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_34"
  op: "Identity"
  input: "save/Read_17/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_35"
  op: "Identity"
  input: "save/Identity_34"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_18/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/ptratio/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_36"
  op: "Identity"
  input: "save/Read_18/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_37"
  op: "Identity"
  input: "save/Identity_36"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_19/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/ptratio/weights/part_0/Ftrl"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_38"
  op: "Identity"
  input: "save/Read_19/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_39"
  op: "Identity"
  input: "save/Identity_38"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_20/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/ptratio/weights/part_0/Ftrl_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_40"
  op: "Identity"
  input: "save/Read_20/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_41"
  op: "Identity"
  input: "save/Identity_40"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_21/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/rm/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_42"
  op: "Identity"
  input: "save/Read_21/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_43"
  op: "Identity"
  input: "save/Identity_42"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_22/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/rm/weights/part_0/Ftrl"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_44"
  op: "Identity"
  input: "save/Read_22/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_45"
  op: "Identity"
  input: "save/Identity_44"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_23/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/rm/weights/part_0/Ftrl_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_46"
  op: "Identity"
  input: "save/Read_23/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_47"
  op: "Identity"
  input: "save/Identity_46"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_24/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/tax/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_48"
  op: "Identity"
  input: "save/Read_24/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_49"
  op: "Identity"
  input: "save/Identity_48"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_25/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/tax/weights/part_0/Ftrl"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_50"
  op: "Identity"
  input: "save/Read_25/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_51"
  op: "Identity"
  input: "save/Identity_50"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_26/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/tax/weights/part_0/Ftrl_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_52"
  op: "Identity"
  input: "save/Read_26/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_53"
  op: "Identity"
  input: "save/Identity_52"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_27/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/zn/weights/part_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_54"
  op: "Identity"
  input: "save/Read_27/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_55"
  op: "Identity"
  input: "save/Identity_54"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_28/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/zn/weights/part_0/Ftrl"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_56"
  op: "Identity"
  input: "save/Read_28/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_57"
  op: "Identity"
  input: "save/Identity_56"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_29/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/zn/weights/part_0/Ftrl_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_58"
  op: "Identity"
  input: "save/Read_29/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_59"
  op: "Identity"
  input: "save/Identity_58"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_21bde8e1915547469bfacf9d9b2013cc/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "global_step/Read/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/ShardedFilename_1/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename_1"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename_1/shard"
  input: "save/num_shards"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/Read_30/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/age/weights/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_60"
  op: "Identity"
  input: "save/Read_30/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_61"
  op: "Identity"
  input: "save/Identity_60"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_31/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/age/weights/part_0/Ftrl"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_62"
  op: "Identity"
  input: "save/Read_31/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_63"
  op: "Identity"
  input: "save/Identity_62"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_32/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/age/weights/part_0/Ftrl_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_64"
  op: "Identity"
  input: "save/Read_32/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_65"
  op: "Identity"
  input: "save/Identity_64"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_33/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/bias_weights/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_66"
  op: "Identity"
  input: "save/Read_33/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_67"
  op: "Identity"
  input: "save/Identity_66"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_34/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/bias_weights/part_0/Ftrl"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_68"
  op: "Identity"
  input: "save/Read_34/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_69"
  op: "Identity"
  input: "save/Identity_68"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_35/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/bias_weights/part_0/Ftrl_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_70"
  op: "Identity"
  input: "save/Read_35/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_71"
  op: "Identity"
  input: "save/Identity_70"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_36/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/crim/weights/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_72"
  op: "Identity"
  input: "save/Read_36/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_73"
  op: "Identity"
  input: "save/Identity_72"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_37/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/crim/weights/part_0/Ftrl"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_74"
  op: "Identity"
  input: "save/Read_37/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_75"
  op: "Identity"
  input: "save/Identity_74"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_38/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/crim/weights/part_0/Ftrl_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_76"
  op: "Identity"
  input: "save/Read_38/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_77"
  op: "Identity"
  input: "save/Identity_76"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_39/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/dis/weights/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_78"
  op: "Identity"
  input: "save/Read_39/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_79"
  op: "Identity"
  input: "save/Identity_78"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_40/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/dis/weights/part_0/Ftrl"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_80"
  op: "Identity"
  input: "save/Read_40/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_81"
  op: "Identity"
  input: "save/Identity_80"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_41/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/dis/weights/part_0/Ftrl_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_82"
  op: "Identity"
  input: "save/Read_41/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_83"
  op: "Identity"
  input: "save/Identity_82"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_42/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/indus/weights/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_84"
  op: "Identity"
  input: "save/Read_42/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_85"
  op: "Identity"
  input: "save/Identity_84"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_43/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/indus/weights/part_0/Ftrl"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_86"
  op: "Identity"
  input: "save/Read_43/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_87"
  op: "Identity"
  input: "save/Identity_86"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_44/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/indus/weights/part_0/Ftrl_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_88"
  op: "Identity"
  input: "save/Read_44/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_89"
  op: "Identity"
  input: "save/Identity_88"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_45/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/nox/weights/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_90"
  op: "Identity"
  input: "save/Read_45/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_91"
  op: "Identity"
  input: "save/Identity_90"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_46/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/nox/weights/part_0/Ftrl"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_92"
  op: "Identity"
  input: "save/Read_46/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_93"
  op: "Identity"
  input: "save/Identity_92"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_47/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/nox/weights/part_0/Ftrl_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_94"
  op: "Identity"
  input: "save/Read_47/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_95"
  op: "Identity"
  input: "save/Identity_94"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_48/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/ptratio/weights/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_96"
  op: "Identity"
  input: "save/Read_48/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_97"
  op: "Identity"
  input: "save/Identity_96"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_49/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/ptratio/weights/part_0/Ftrl"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_98"
  op: "Identity"
  input: "save/Read_49/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_99"
  op: "Identity"
  input: "save/Identity_98"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_50/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/ptratio/weights/part_0/Ftrl_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_100"
  op: "Identity"
  input: "save/Read_50/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_101"
  op: "Identity"
  input: "save/Identity_100"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_51/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/rm/weights/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_102"
  op: "Identity"
  input: "save/Read_51/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_103"
  op: "Identity"
  input: "save/Identity_102"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_52/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/rm/weights/part_0/Ftrl"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_104"
  op: "Identity"
  input: "save/Read_52/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_105"
  op: "Identity"
  input: "save/Identity_104"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_53/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/rm/weights/part_0/Ftrl_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_106"
  op: "Identity"
  input: "save/Read_53/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_107"
  op: "Identity"
  input: "save/Identity_106"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_54/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/tax/weights/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_108"
  op: "Identity"
  input: "save/Read_54/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_109"
  op: "Identity"
  input: "save/Identity_108"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_55/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/tax/weights/part_0/Ftrl"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_110"
  op: "Identity"
  input: "save/Read_55/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_111"
  op: "Identity"
  input: "save/Identity_110"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_56/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/tax/weights/part_0/Ftrl_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_112"
  op: "Identity"
  input: "save/Read_56/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_113"
  op: "Identity"
  input: "save/Identity_112"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_57/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/zn/weights/part_0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_114"
  op: "Identity"
  input: "save/Read_57/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_115"
  op: "Identity"
  input: "save/Identity_114"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_58/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/zn/weights/part_0/Ftrl"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_116"
  op: "Identity"
  input: "save/Read_58/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_117"
  op: "Identity"
  input: "save/Identity_116"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Read_59/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear/linear_model/zn/weights/part_0/Ftrl_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_118"
  op: "Identity"
  input: "save/Read_59/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/Identity_119"
  op: "Identity"
  input: "save/Identity_118"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/SaveV2_1/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 30
          }
        }
        string_val: "linear/linear_model/age/weights"
        string_val: "linear/linear_model/age/weights/part_0/Ftrl"
        string_val: "linear/linear_model/age/weights/part_0/Ftrl_1"
        string_val: "linear/linear_model/bias_weights"
        string_val: "linear/linear_model/bias_weights/part_0/Ftrl"
        string_val: "linear/linear_model/bias_weights/part_0/Ftrl_1"
        string_val: "linear/linear_model/crim/weights"
        string_val: "linear/linear_model/crim/weights/part_0/Ftrl"
        string_val: "linear/linear_model/crim/weights/part_0/Ftrl_1"
        string_val: "linear/linear_model/dis/weights"
        string_val: "linear/linear_model/dis/weights/part_0/Ftrl"
        string_val: "linear/linear_model/dis/weights/part_0/Ftrl_1"
        string_val: "linear/linear_model/indus/weights"
        string_val: "linear/linear_model/indus/weights/part_0/Ftrl"
        string_val: "linear/linear_model/indus/weights/part_0/Ftrl_1"
        string_val: "linear/linear_model/nox/weights"
        string_val: "linear/linear_model/nox/weights/part_0/Ftrl"
        string_val: "linear/linear_model/nox/weights/part_0/Ftrl_1"
        string_val: "linear/linear_model/ptratio/weights"
        string_val: "linear/linear_model/ptratio/weights/part_0/Ftrl"
        string_val: "linear/linear_model/ptratio/weights/part_0/Ftrl_1"
        string_val: "linear/linear_model/rm/weights"
        string_val: "linear/linear_model/rm/weights/part_0/Ftrl"
        string_val: "linear/linear_model/rm/weights/part_0/Ftrl_1"
        string_val: "linear/linear_model/tax/weights"
        string_val: "linear/linear_model/tax/weights/part_0/Ftrl"
        string_val: "linear/linear_model/tax/weights/part_0/Ftrl_1"
        string_val: "linear/linear_model/zn/weights"
        string_val: "linear/linear_model/zn/weights/part_0/Ftrl"
        string_val: "linear/linear_model/zn/weights/part_0/Ftrl_1"
      }
    }
  }
}
node {
  name: "save/SaveV2_1/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 30
          }
        }
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 0,1"
        string_val: "1 0,1"
        string_val: "1 0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/SaveV2_1"
  op: "SaveV2"
  input: "save/ShardedFilename_1"
  input: "save/SaveV2_1/tensor_names"
  input: "save/SaveV2_1/shape_and_slices"
  input: "save/Identity_61"
  input: "save/Identity_63"
  input: "save/Identity_65"
  input: "save/Identity_67"
  input: "save/Identity_69"
  input: "save/Identity_71"
  input: "save/Identity_73"
  input: "save/Identity_75"
  input: "save/Identity_77"
  input: "save/Identity_79"
  input: "save/Identity_81"
  input: "save/Identity_83"
  input: "save/Identity_85"
  input: "save/Identity_87"
  input: "save/Identity_89"
  input: "save/Identity_91"
  input: "save/Identity_93"
  input: "save/Identity_95"
  input: "save/Identity_97"
  input: "save/Identity_99"
  input: "save/Identity_101"
  input: "save/Identity_103"
  input: "save/Identity_105"
  input: "save/Identity_107"
  input: "save/Identity_109"
  input: "save/Identity_111"
  input: "save/Identity_113"
  input: "save/Identity_115"
  input: "save/Identity_117"
  input: "save/Identity_119"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency_1"
  op: "Identity"
  input: "save/ShardedFilename_1"
  input: "^save/SaveV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "save/ShardedFilename_1"
  input: "^save/control_dependency"
  input: "^save/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  device: "/device:CPU:0"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity_120"
  op: "Identity"
  input: "save/Const"
  input: "^save/MergeV2Checkpoints"
  input: "^save/control_dependency"
  input: "^save/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/Identity_121"
  op: "Identity"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp"
  op: "AssignVariableOp"
  input: "global_step"
  input: "save/Identity_121"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/AssignVariableOp"
}
node {
  name: "save/RestoreV2_1/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 30
          }
        }
        string_val: "linear/linear_model/age/weights"
        string_val: "linear/linear_model/age/weights/part_0/Ftrl"
        string_val: "linear/linear_model/age/weights/part_0/Ftrl_1"
        string_val: "linear/linear_model/bias_weights"
        string_val: "linear/linear_model/bias_weights/part_0/Ftrl"
        string_val: "linear/linear_model/bias_weights/part_0/Ftrl_1"
        string_val: "linear/linear_model/crim/weights"
        string_val: "linear/linear_model/crim/weights/part_0/Ftrl"
        string_val: "linear/linear_model/crim/weights/part_0/Ftrl_1"
        string_val: "linear/linear_model/dis/weights"
        string_val: "linear/linear_model/dis/weights/part_0/Ftrl"
        string_val: "linear/linear_model/dis/weights/part_0/Ftrl_1"
        string_val: "linear/linear_model/indus/weights"
        string_val: "linear/linear_model/indus/weights/part_0/Ftrl"
        string_val: "linear/linear_model/indus/weights/part_0/Ftrl_1"
        string_val: "linear/linear_model/nox/weights"
        string_val: "linear/linear_model/nox/weights/part_0/Ftrl"
        string_val: "linear/linear_model/nox/weights/part_0/Ftrl_1"
        string_val: "linear/linear_model/ptratio/weights"
        string_val: "linear/linear_model/ptratio/weights/part_0/Ftrl"
        string_val: "linear/linear_model/ptratio/weights/part_0/Ftrl_1"
        string_val: "linear/linear_model/rm/weights"
        string_val: "linear/linear_model/rm/weights/part_0/Ftrl"
        string_val: "linear/linear_model/rm/weights/part_0/Ftrl_1"
        string_val: "linear/linear_model/tax/weights"
        string_val: "linear/linear_model/tax/weights/part_0/Ftrl"
        string_val: "linear/linear_model/tax/weights/part_0/Ftrl_1"
        string_val: "linear/linear_model/zn/weights"
        string_val: "linear/linear_model/zn/weights/part_0/Ftrl"
        string_val: "linear/linear_model/zn/weights/part_0/Ftrl_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 30
          }
        }
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 0,1"
        string_val: "1 0,1"
        string_val: "1 0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_1/tensor_names"
  input: "save/RestoreV2_1/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Identity_122"
  op: "Identity"
  input: "save/RestoreV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "linear/linear_model/age/weights/part_0"
  input: "save/Identity_122"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_123"
  op: "Identity"
  input: "save/RestoreV2_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "linear/linear/linear_model/age/weights/part_0/Ftrl"
  input: "save/Identity_123"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_124"
  op: "Identity"
  input: "save/RestoreV2_1:2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "linear/linear/linear_model/age/weights/part_0/Ftrl_1"
  input: "save/Identity_124"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_125"
  op: "Identity"
  input: "save/RestoreV2_1:3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "linear/linear_model/bias_weights/part_0"
  input: "save/Identity_125"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_126"
  op: "Identity"
  input: "save/RestoreV2_1:4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "linear/linear/linear_model/bias_weights/part_0/Ftrl"
  input: "save/Identity_126"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_127"
  op: "Identity"
  input: "save/RestoreV2_1:5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "linear/linear/linear_model/bias_weights/part_0/Ftrl_1"
  input: "save/Identity_127"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_128"
  op: "Identity"
  input: "save/RestoreV2_1:6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "linear/linear_model/crim/weights/part_0"
  input: "save/Identity_128"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_129"
  op: "Identity"
  input: "save/RestoreV2_1:7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "linear/linear/linear_model/crim/weights/part_0/Ftrl"
  input: "save/Identity_129"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_130"
  op: "Identity"
  input: "save/RestoreV2_1:8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "linear/linear/linear_model/crim/weights/part_0/Ftrl_1"
  input: "save/Identity_130"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_131"
  op: "Identity"
  input: "save/RestoreV2_1:9"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "linear/linear_model/dis/weights/part_0"
  input: "save/Identity_131"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_132"
  op: "Identity"
  input: "save/RestoreV2_1:10"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "linear/linear/linear_model/dis/weights/part_0/Ftrl"
  input: "save/Identity_132"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_133"
  op: "Identity"
  input: "save/RestoreV2_1:11"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "linear/linear/linear_model/dis/weights/part_0/Ftrl_1"
  input: "save/Identity_133"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_134"
  op: "Identity"
  input: "save/RestoreV2_1:12"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "linear/linear_model/indus/weights/part_0"
  input: "save/Identity_134"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_135"
  op: "Identity"
  input: "save/RestoreV2_1:13"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "linear/linear/linear_model/indus/weights/part_0/Ftrl"
  input: "save/Identity_135"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_136"
  op: "Identity"
  input: "save/RestoreV2_1:14"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "linear/linear/linear_model/indus/weights/part_0/Ftrl_1"
  input: "save/Identity_136"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_137"
  op: "Identity"
  input: "save/RestoreV2_1:15"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "linear/linear_model/nox/weights/part_0"
  input: "save/Identity_137"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_138"
  op: "Identity"
  input: "save/RestoreV2_1:16"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "linear/linear/linear_model/nox/weights/part_0/Ftrl"
  input: "save/Identity_138"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_139"
  op: "Identity"
  input: "save/RestoreV2_1:17"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_18"
  op: "AssignVariableOp"
  input: "linear/linear/linear_model/nox/weights/part_0/Ftrl_1"
  input: "save/Identity_139"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_140"
  op: "Identity"
  input: "save/RestoreV2_1:18"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_19"
  op: "AssignVariableOp"
  input: "linear/linear_model/ptratio/weights/part_0"
  input: "save/Identity_140"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_141"
  op: "Identity"
  input: "save/RestoreV2_1:19"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_20"
  op: "AssignVariableOp"
  input: "linear/linear/linear_model/ptratio/weights/part_0/Ftrl"
  input: "save/Identity_141"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_142"
  op: "Identity"
  input: "save/RestoreV2_1:20"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_21"
  op: "AssignVariableOp"
  input: "linear/linear/linear_model/ptratio/weights/part_0/Ftrl_1"
  input: "save/Identity_142"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_143"
  op: "Identity"
  input: "save/RestoreV2_1:21"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_22"
  op: "AssignVariableOp"
  input: "linear/linear_model/rm/weights/part_0"
  input: "save/Identity_143"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_144"
  op: "Identity"
  input: "save/RestoreV2_1:22"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_23"
  op: "AssignVariableOp"
  input: "linear/linear/linear_model/rm/weights/part_0/Ftrl"
  input: "save/Identity_144"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_145"
  op: "Identity"
  input: "save/RestoreV2_1:23"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_24"
  op: "AssignVariableOp"
  input: "linear/linear/linear_model/rm/weights/part_0/Ftrl_1"
  input: "save/Identity_145"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_146"
  op: "Identity"
  input: "save/RestoreV2_1:24"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_25"
  op: "AssignVariableOp"
  input: "linear/linear_model/tax/weights/part_0"
  input: "save/Identity_146"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_147"
  op: "Identity"
  input: "save/RestoreV2_1:25"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_26"
  op: "AssignVariableOp"
  input: "linear/linear/linear_model/tax/weights/part_0/Ftrl"
  input: "save/Identity_147"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_148"
  op: "Identity"
  input: "save/RestoreV2_1:26"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_27"
  op: "AssignVariableOp"
  input: "linear/linear/linear_model/tax/weights/part_0/Ftrl_1"
  input: "save/Identity_148"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_149"
  op: "Identity"
  input: "save/RestoreV2_1:27"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_28"
  op: "AssignVariableOp"
  input: "linear/linear_model/zn/weights/part_0"
  input: "save/Identity_149"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_150"
  op: "Identity"
  input: "save/RestoreV2_1:28"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_29"
  op: "AssignVariableOp"
  input: "linear/linear/linear_model/zn/weights/part_0/Ftrl"
  input: "save/Identity_150"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_151"
  op: "Identity"
  input: "save/RestoreV2_1:29"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_30"
  op: "AssignVariableOp"
  input: "linear/linear/linear_model/zn/weights/part_0/Ftrl_1"
  input: "save/Identity_151"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/restore_shard_1"
  op: "NoOp"
  input: "^save/AssignVariableOp_1"
  input: "^save/AssignVariableOp_10"
  input: "^save/AssignVariableOp_11"
  input: "^save/AssignVariableOp_12"
  input: "^save/AssignVariableOp_13"
  input: "^save/AssignVariableOp_14"
  input: "^save/AssignVariableOp_15"
  input: "^save/AssignVariableOp_16"
  input: "^save/AssignVariableOp_17"
  input: "^save/AssignVariableOp_18"
  input: "^save/AssignVariableOp_19"
  input: "^save/AssignVariableOp_2"
  input: "^save/AssignVariableOp_20"
  input: "^save/AssignVariableOp_21"
  input: "^save/AssignVariableOp_22"
  input: "^save/AssignVariableOp_23"
  input: "^save/AssignVariableOp_24"
  input: "^save/AssignVariableOp_25"
  input: "^save/AssignVariableOp_26"
  input: "^save/AssignVariableOp_27"
  input: "^save/AssignVariableOp_28"
  input: "^save/AssignVariableOp_29"
  input: "^save/AssignVariableOp_3"
  input: "^save/AssignVariableOp_30"
  input: "^save/AssignVariableOp_4"
  input: "^save/AssignVariableOp_5"
  input: "^save/AssignVariableOp_6"
  input: "^save/AssignVariableOp_7"
  input: "^save/AssignVariableOp_8"
  input: "^save/AssignVariableOp_9"
  device: "/device:CPU:0"
}
node {
  name: "save/restore_all/NoOp"
  op: "NoOp"
  input: "^save/restore_shard"
}
node {
  name: "save/restore_all/NoOp_1"
  op: "NoOp"
  input: "^save/restore_shard_1"
  device: "/device:CPU:0"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_all/NoOp"
  input: "^save/restore_all/NoOp_1"
}
library {
  function {
    signature {
      name: "linear_zero_fraction_total_zero_zero_count_false_13722"
      input_arg {
        name: "zero_fraction_readvariableop_linear_linear_model_age_weights_part_0"
        type: DT_RESOURCE
      }
      input_arg {
        name: "tofloat_linear_zero_fraction_total_size_size"
        type: DT_INT64
      }
      output_arg {
        name: "mul"
        type: DT_FLOAT
      }
      is_stateful: true
    }
    node_def {
      name: "zero_fraction/ReadVariableOp"
      op: "ReadVariableOp"
      input: "zero_fraction_readvariableop_linear_linear_model_age_weights_part_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "zero_fraction/Size"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 1
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/LessEqual/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 2147483647
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/LessEqual"
      op: "LessEqual"
      input: "zero_fraction/Size:output:0"
      input: "zero_fraction/LessEqual/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/cond"
      op: "StatelessIf"
      input: "zero_fraction/LessEqual:z:0"
      input: "zero_fraction/ReadVariableOp:value:0"
      attr {
        key: "Tcond"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Tin"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "Tout"
        value {
          list {
            type: DT_INT64
          }
        }
      }
      attr {
        key: "_lower_using_switch_merge"
        value {
          b: true
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "else_branch"
        value {
          func {
            name: "zero_fraction_cond_false_13732"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "then_branch"
        value {
          func {
            name: "zero_fraction_cond_true_13731"
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/cond/Identity"
      op: "Identity"
      input: "zero_fraction/cond:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/sub"
      op: "Sub"
      input: "zero_fraction/Size:output:0"
      input: "zero_fraction/cond/Identity:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/Cast"
      op: "Cast"
      input: "zero_fraction/counts_to_fraction/sub:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/Cast_1"
      op: "Cast"
      input: "zero_fraction/Size:output:0"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/truediv"
      op: "RealDiv"
      input: "zero_fraction/counts_to_fraction/Cast:y:0"
      input: "zero_fraction/counts_to_fraction/Cast_1:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/fraction"
      op: "Identity"
      input: "zero_fraction/counts_to_fraction/truediv:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "ToFloat"
      op: "Cast"
      input: "tofloat_linear_zero_fraction_total_size_size"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "mul_0"
      op: "Mul"
      input: "zero_fraction/fraction:output:0"
      input: "ToFloat:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    ret {
      key: "mul"
      value: "mul_0:z:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
    arg_attr {
      key: 1
      value {
      }
    }
  }
  function {
    signature {
      name: "zero_fraction_cond_true_13860"
      input_arg {
        name: "count_nonzero_notequal_zero_fraction_readvariableop"
        type: DT_FLOAT
      }
      output_arg {
        name: "cast"
        type: DT_INT64
      }
    }
    node_def {
      name: "count_nonzero/zeros"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/NotEqual"
      op: "NotEqual"
      input: "count_nonzero_notequal_zero_fraction_readvariableop"
      input: "count_nonzero/zeros:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "count_nonzero/Cast"
      op: "Cast"
      input: "count_nonzero/NotEqual:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/nonzero_count"
      op: "Sum"
      input: "count_nonzero/Cast:y:0"
      input: "count_nonzero/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "Cast"
      op: "Cast"
      input: "count_nonzero/nonzero_count:output:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "cast"
      value: "Cast:y:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
  }
  function {
    signature {
      name: "zero_fraction_cond_false_13732"
      input_arg {
        name: "count_nonzero_notequal_zero_fraction_readvariableop"
        type: DT_FLOAT
      }
      output_arg {
        name: "count_nonzero_nonzero_count"
        type: DT_INT64
      }
    }
    node_def {
      name: "count_nonzero/zeros"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/NotEqual"
      op: "NotEqual"
      input: "count_nonzero_notequal_zero_fraction_readvariableop"
      input: "count_nonzero/zeros:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "count_nonzero/Cast"
      op: "Cast"
      input: "count_nonzero/NotEqual:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/nonzero_count"
      op: "Sum"
      input: "count_nonzero/Cast:y:0"
      input: "count_nonzero/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    ret {
      key: "count_nonzero_nonzero_count"
      value: "count_nonzero/nonzero_count:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
  }
  function {
    signature {
      name: "linear_zero_fraction_total_zero_zero_count_true_13721"
      input_arg {
        name: "placeholder"
        type: DT_RESOURCE
      }
      input_arg {
        name: "placeholder_1"
        type: DT_INT64
      }
      output_arg {
        name: "const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    ret {
      key: "const"
      value: "Const:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
    arg_attr {
      key: 1
      value {
      }
    }
  }
  function {
    signature {
      name: "linear_zero_fraction_total_zero_zero_count_1_false_13765"
      input_arg {
        name: "zero_fraction_readvariableop_linear_linear_model_crim_weights_part_0"
        type: DT_RESOURCE
      }
      input_arg {
        name: "tofloat_linear_zero_fraction_total_size_size_1"
        type: DT_INT64
      }
      output_arg {
        name: "mul"
        type: DT_FLOAT
      }
      is_stateful: true
    }
    node_def {
      name: "zero_fraction/ReadVariableOp"
      op: "ReadVariableOp"
      input: "zero_fraction_readvariableop_linear_linear_model_crim_weights_part_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "zero_fraction/Size"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 1
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/LessEqual/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 2147483647
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/LessEqual"
      op: "LessEqual"
      input: "zero_fraction/Size:output:0"
      input: "zero_fraction/LessEqual/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/cond"
      op: "StatelessIf"
      input: "zero_fraction/LessEqual:z:0"
      input: "zero_fraction/ReadVariableOp:value:0"
      attr {
        key: "Tcond"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Tin"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "Tout"
        value {
          list {
            type: DT_INT64
          }
        }
      }
      attr {
        key: "_lower_using_switch_merge"
        value {
          b: true
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "else_branch"
        value {
          func {
            name: "zero_fraction_cond_false_13775"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "then_branch"
        value {
          func {
            name: "zero_fraction_cond_true_13774"
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/cond/Identity"
      op: "Identity"
      input: "zero_fraction/cond:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/sub"
      op: "Sub"
      input: "zero_fraction/Size:output:0"
      input: "zero_fraction/cond/Identity:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/Cast"
      op: "Cast"
      input: "zero_fraction/counts_to_fraction/sub:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/Cast_1"
      op: "Cast"
      input: "zero_fraction/Size:output:0"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/truediv"
      op: "RealDiv"
      input: "zero_fraction/counts_to_fraction/Cast:y:0"
      input: "zero_fraction/counts_to_fraction/Cast_1:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/fraction"
      op: "Identity"
      input: "zero_fraction/counts_to_fraction/truediv:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "ToFloat"
      op: "Cast"
      input: "tofloat_linear_zero_fraction_total_size_size_1"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "mul_0"
      op: "Mul"
      input: "zero_fraction/fraction:output:0"
      input: "ToFloat:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    ret {
      key: "mul"
      value: "mul_0:z:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
    arg_attr {
      key: 1
      value {
      }
    }
  }
  function {
    signature {
      name: "linear_zero_fraction_total_zero_zero_count_3_true_13850"
      input_arg {
        name: "placeholder"
        type: DT_RESOURCE
      }
      input_arg {
        name: "placeholder_1"
        type: DT_INT64
      }
      output_arg {
        name: "const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    ret {
      key: "const"
      value: "Const:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
    arg_attr {
      key: 1
      value {
      }
    }
  }
  function {
    signature {
      name: "linear_zero_fraction_total_zero_zero_count_8_false_14066"
      input_arg {
        name: "zero_fraction_readvariableop_linear_linear_model_zn_weights_part_0"
        type: DT_RESOURCE
      }
      input_arg {
        name: "tofloat_linear_zero_fraction_total_size_size_8"
        type: DT_INT64
      }
      output_arg {
        name: "mul"
        type: DT_FLOAT
      }
      is_stateful: true
    }
    node_def {
      name: "zero_fraction/ReadVariableOp"
      op: "ReadVariableOp"
      input: "zero_fraction_readvariableop_linear_linear_model_zn_weights_part_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "zero_fraction/Size"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 1
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/LessEqual/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 2147483647
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/LessEqual"
      op: "LessEqual"
      input: "zero_fraction/Size:output:0"
      input: "zero_fraction/LessEqual/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/cond"
      op: "StatelessIf"
      input: "zero_fraction/LessEqual:z:0"
      input: "zero_fraction/ReadVariableOp:value:0"
      attr {
        key: "Tcond"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Tin"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "Tout"
        value {
          list {
            type: DT_INT64
          }
        }
      }
      attr {
        key: "_lower_using_switch_merge"
        value {
          b: true
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "else_branch"
        value {
          func {
            name: "zero_fraction_cond_false_14076"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "then_branch"
        value {
          func {
            name: "zero_fraction_cond_true_14075"
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/cond/Identity"
      op: "Identity"
      input: "zero_fraction/cond:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/sub"
      op: "Sub"
      input: "zero_fraction/Size:output:0"
      input: "zero_fraction/cond/Identity:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/Cast"
      op: "Cast"
      input: "zero_fraction/counts_to_fraction/sub:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/Cast_1"
      op: "Cast"
      input: "zero_fraction/Size:output:0"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/truediv"
      op: "RealDiv"
      input: "zero_fraction/counts_to_fraction/Cast:y:0"
      input: "zero_fraction/counts_to_fraction/Cast_1:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/fraction"
      op: "Identity"
      input: "zero_fraction/counts_to_fraction/truediv:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "ToFloat"
      op: "Cast"
      input: "tofloat_linear_zero_fraction_total_size_size_8"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "mul_0"
      op: "Mul"
      input: "zero_fraction/fraction:output:0"
      input: "ToFloat:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    ret {
      key: "mul"
      value: "mul_0:z:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
    arg_attr {
      key: 1
      value {
      }
    }
  }
  function {
    signature {
      name: "linear_zero_fraction_total_zero_zero_count_5_false_13937"
      input_arg {
        name: "zero_fraction_readvariableop_linear_linear_model_ptratio_weights_part_0"
        type: DT_RESOURCE
      }
      input_arg {
        name: "tofloat_linear_zero_fraction_total_size_size_5"
        type: DT_INT64
      }
      output_arg {
        name: "mul"
        type: DT_FLOAT
      }
      is_stateful: true
    }
    node_def {
      name: "zero_fraction/ReadVariableOp"
      op: "ReadVariableOp"
      input: "zero_fraction_readvariableop_linear_linear_model_ptratio_weights_part_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "zero_fraction/Size"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 1
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/LessEqual/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 2147483647
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/LessEqual"
      op: "LessEqual"
      input: "zero_fraction/Size:output:0"
      input: "zero_fraction/LessEqual/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/cond"
      op: "StatelessIf"
      input: "zero_fraction/LessEqual:z:0"
      input: "zero_fraction/ReadVariableOp:value:0"
      attr {
        key: "Tcond"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Tin"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "Tout"
        value {
          list {
            type: DT_INT64
          }
        }
      }
      attr {
        key: "_lower_using_switch_merge"
        value {
          b: true
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "else_branch"
        value {
          func {
            name: "zero_fraction_cond_false_13947"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "then_branch"
        value {
          func {
            name: "zero_fraction_cond_true_13946"
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/cond/Identity"
      op: "Identity"
      input: "zero_fraction/cond:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/sub"
      op: "Sub"
      input: "zero_fraction/Size:output:0"
      input: "zero_fraction/cond/Identity:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/Cast"
      op: "Cast"
      input: "zero_fraction/counts_to_fraction/sub:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/Cast_1"
      op: "Cast"
      input: "zero_fraction/Size:output:0"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/truediv"
      op: "RealDiv"
      input: "zero_fraction/counts_to_fraction/Cast:y:0"
      input: "zero_fraction/counts_to_fraction/Cast_1:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/fraction"
      op: "Identity"
      input: "zero_fraction/counts_to_fraction/truediv:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "ToFloat"
      op: "Cast"
      input: "tofloat_linear_zero_fraction_total_size_size_5"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "mul_0"
      op: "Mul"
      input: "zero_fraction/fraction:output:0"
      input: "ToFloat:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    ret {
      key: "mul"
      value: "mul_0:z:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
    arg_attr {
      key: 1
      value {
      }
    }
  }
  function {
    signature {
      name: "zero_fraction_cond_true_13774"
      input_arg {
        name: "count_nonzero_notequal_zero_fraction_readvariableop"
        type: DT_FLOAT
      }
      output_arg {
        name: "cast"
        type: DT_INT64
      }
    }
    node_def {
      name: "count_nonzero/zeros"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/NotEqual"
      op: "NotEqual"
      input: "count_nonzero_notequal_zero_fraction_readvariableop"
      input: "count_nonzero/zeros:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "count_nonzero/Cast"
      op: "Cast"
      input: "count_nonzero/NotEqual:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/nonzero_count"
      op: "Sum"
      input: "count_nonzero/Cast:y:0"
      input: "count_nonzero/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "Cast"
      op: "Cast"
      input: "count_nonzero/nonzero_count:output:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "cast"
      value: "Cast:y:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
  }
  function {
    signature {
      name: "zero_fraction_cond_false_13818"
      input_arg {
        name: "count_nonzero_notequal_zero_fraction_readvariableop"
        type: DT_FLOAT
      }
      output_arg {
        name: "count_nonzero_nonzero_count"
        type: DT_INT64
      }
    }
    node_def {
      name: "count_nonzero/zeros"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/NotEqual"
      op: "NotEqual"
      input: "count_nonzero_notequal_zero_fraction_readvariableop"
      input: "count_nonzero/zeros:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "count_nonzero/Cast"
      op: "Cast"
      input: "count_nonzero/NotEqual:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/nonzero_count"
      op: "Sum"
      input: "count_nonzero/Cast:y:0"
      input: "count_nonzero/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    ret {
      key: "count_nonzero_nonzero_count"
      value: "count_nonzero/nonzero_count:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
  }
  function {
    signature {
      name: "linear_zero_fraction_total_zero_zero_count_7_false_14023"
      input_arg {
        name: "zero_fraction_readvariableop_linear_linear_model_tax_weights_part_0"
        type: DT_RESOURCE
      }
      input_arg {
        name: "tofloat_linear_zero_fraction_total_size_size_7"
        type: DT_INT64
      }
      output_arg {
        name: "mul"
        type: DT_FLOAT
      }
      is_stateful: true
    }
    node_def {
      name: "zero_fraction/ReadVariableOp"
      op: "ReadVariableOp"
      input: "zero_fraction_readvariableop_linear_linear_model_tax_weights_part_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "zero_fraction/Size"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 1
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/LessEqual/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 2147483647
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/LessEqual"
      op: "LessEqual"
      input: "zero_fraction/Size:output:0"
      input: "zero_fraction/LessEqual/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/cond"
      op: "StatelessIf"
      input: "zero_fraction/LessEqual:z:0"
      input: "zero_fraction/ReadVariableOp:value:0"
      attr {
        key: "Tcond"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Tin"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "Tout"
        value {
          list {
            type: DT_INT64
          }
        }
      }
      attr {
        key: "_lower_using_switch_merge"
        value {
          b: true
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "else_branch"
        value {
          func {
            name: "zero_fraction_cond_false_14033"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "then_branch"
        value {
          func {
            name: "zero_fraction_cond_true_14032"
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/cond/Identity"
      op: "Identity"
      input: "zero_fraction/cond:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/sub"
      op: "Sub"
      input: "zero_fraction/Size:output:0"
      input: "zero_fraction/cond/Identity:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/Cast"
      op: "Cast"
      input: "zero_fraction/counts_to_fraction/sub:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/Cast_1"
      op: "Cast"
      input: "zero_fraction/Size:output:0"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/truediv"
      op: "RealDiv"
      input: "zero_fraction/counts_to_fraction/Cast:y:0"
      input: "zero_fraction/counts_to_fraction/Cast_1:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/fraction"
      op: "Identity"
      input: "zero_fraction/counts_to_fraction/truediv:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "ToFloat"
      op: "Cast"
      input: "tofloat_linear_zero_fraction_total_size_size_7"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "mul_0"
      op: "Mul"
      input: "zero_fraction/fraction:output:0"
      input: "ToFloat:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    ret {
      key: "mul"
      value: "mul_0:z:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
    arg_attr {
      key: 1
      value {
      }
    }
  }
  function {
    signature {
      name: "zero_fraction_cond_true_13946"
      input_arg {
        name: "count_nonzero_notequal_zero_fraction_readvariableop"
        type: DT_FLOAT
      }
      output_arg {
        name: "cast"
        type: DT_INT64
      }
    }
    node_def {
      name: "count_nonzero/zeros"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/NotEqual"
      op: "NotEqual"
      input: "count_nonzero_notequal_zero_fraction_readvariableop"
      input: "count_nonzero/zeros:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "count_nonzero/Cast"
      op: "Cast"
      input: "count_nonzero/NotEqual:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/nonzero_count"
      op: "Sum"
      input: "count_nonzero/Cast:y:0"
      input: "count_nonzero/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "Cast"
      op: "Cast"
      input: "count_nonzero/nonzero_count:output:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "cast"
      value: "Cast:y:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
  }
  function {
    signature {
      name: "zero_fraction_cond_false_14033"
      input_arg {
        name: "count_nonzero_notequal_zero_fraction_readvariableop"
        type: DT_FLOAT
      }
      output_arg {
        name: "count_nonzero_nonzero_count"
        type: DT_INT64
      }
    }
    node_def {
      name: "count_nonzero/zeros"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/NotEqual"
      op: "NotEqual"
      input: "count_nonzero_notequal_zero_fraction_readvariableop"
      input: "count_nonzero/zeros:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "count_nonzero/Cast"
      op: "Cast"
      input: "count_nonzero/NotEqual:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/nonzero_count"
      op: "Sum"
      input: "count_nonzero/Cast:y:0"
      input: "count_nonzero/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    ret {
      key: "count_nonzero_nonzero_count"
      value: "count_nonzero/nonzero_count:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
  }
  function {
    signature {
      name: "zero_fraction_cond_true_13731"
      input_arg {
        name: "count_nonzero_notequal_zero_fraction_readvariableop"
        type: DT_FLOAT
      }
      output_arg {
        name: "cast"
        type: DT_INT64
      }
    }
    node_def {
      name: "count_nonzero/zeros"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/NotEqual"
      op: "NotEqual"
      input: "count_nonzero_notequal_zero_fraction_readvariableop"
      input: "count_nonzero/zeros:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "count_nonzero/Cast"
      op: "Cast"
      input: "count_nonzero/NotEqual:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/nonzero_count"
      op: "Sum"
      input: "count_nonzero/Cast:y:0"
      input: "count_nonzero/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "Cast"
      op: "Cast"
      input: "count_nonzero/nonzero_count:output:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "cast"
      value: "Cast:y:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
  }
  function {
    signature {
      name: "global_step_cond_true_13461"
      input_arg {
        name: "read_readvariableop_global_step"
        type: DT_RESOURCE
      }
      input_arg {
        name: "placeholder"
        type: DT_INT64
      }
      output_arg {
        name: "identity"
        type: DT_INT64
      }
      is_stateful: true
    }
    node_def {
      name: "Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "read_readvariableop_global_step"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "Read/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
    arg_attr {
      key: 1
      value {
      }
    }
  }
  function {
    signature {
      name: "linear_zero_fraction_total_zero_zero_count_1_true_13764"
      input_arg {
        name: "placeholder"
        type: DT_RESOURCE
      }
      input_arg {
        name: "placeholder_1"
        type: DT_INT64
      }
      output_arg {
        name: "const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    ret {
      key: "const"
      value: "Const:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
    arg_attr {
      key: 1
      value {
      }
    }
  }
  function {
    signature {
      name: "zero_fraction_cond_true_14032"
      input_arg {
        name: "count_nonzero_notequal_zero_fraction_readvariableop"
        type: DT_FLOAT
      }
      output_arg {
        name: "cast"
        type: DT_INT64
      }
    }
    node_def {
      name: "count_nonzero/zeros"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/NotEqual"
      op: "NotEqual"
      input: "count_nonzero_notequal_zero_fraction_readvariableop"
      input: "count_nonzero/zeros:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "count_nonzero/Cast"
      op: "Cast"
      input: "count_nonzero/NotEqual:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/nonzero_count"
      op: "Sum"
      input: "count_nonzero/Cast:y:0"
      input: "count_nonzero/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "Cast"
      op: "Cast"
      input: "count_nonzero/nonzero_count:output:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "cast"
      value: "Cast:y:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
  }
  function {
    signature {
      name: "linear_zero_fraction_total_zero_zero_count_2_false_13808"
      input_arg {
        name: "zero_fraction_readvariableop_linear_linear_model_dis_weights_part_0"
        type: DT_RESOURCE
      }
      input_arg {
        name: "tofloat_linear_zero_fraction_total_size_size_2"
        type: DT_INT64
      }
      output_arg {
        name: "mul"
        type: DT_FLOAT
      }
      is_stateful: true
    }
    node_def {
      name: "zero_fraction/ReadVariableOp"
      op: "ReadVariableOp"
      input: "zero_fraction_readvariableop_linear_linear_model_dis_weights_part_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "zero_fraction/Size"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 1
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/LessEqual/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 2147483647
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/LessEqual"
      op: "LessEqual"
      input: "zero_fraction/Size:output:0"
      input: "zero_fraction/LessEqual/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/cond"
      op: "StatelessIf"
      input: "zero_fraction/LessEqual:z:0"
      input: "zero_fraction/ReadVariableOp:value:0"
      attr {
        key: "Tcond"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Tin"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "Tout"
        value {
          list {
            type: DT_INT64
          }
        }
      }
      attr {
        key: "_lower_using_switch_merge"
        value {
          b: true
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "else_branch"
        value {
          func {
            name: "zero_fraction_cond_false_13818"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "then_branch"
        value {
          func {
            name: "zero_fraction_cond_true_13817"
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/cond/Identity"
      op: "Identity"
      input: "zero_fraction/cond:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/sub"
      op: "Sub"
      input: "zero_fraction/Size:output:0"
      input: "zero_fraction/cond/Identity:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/Cast"
      op: "Cast"
      input: "zero_fraction/counts_to_fraction/sub:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/Cast_1"
      op: "Cast"
      input: "zero_fraction/Size:output:0"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/truediv"
      op: "RealDiv"
      input: "zero_fraction/counts_to_fraction/Cast:y:0"
      input: "zero_fraction/counts_to_fraction/Cast_1:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/fraction"
      op: "Identity"
      input: "zero_fraction/counts_to_fraction/truediv:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "ToFloat"
      op: "Cast"
      input: "tofloat_linear_zero_fraction_total_size_size_2"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "mul_0"
      op: "Mul"
      input: "zero_fraction/fraction:output:0"
      input: "ToFloat:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    ret {
      key: "mul"
      value: "mul_0:z:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
    arg_attr {
      key: 1
      value {
      }
    }
  }
  function {
    signature {
      name: "_make_dataset_ba75O7pEaZw"
      output_arg {
        name: "modeldataset"
        type: DT_VARIANT
      }
      description: "Factory function for a dataset."
      is_stateful: true
    }
    node_def {
      name: "optimizations"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 3
              }
            }
            string_val: "map_and_batch_fusion"
            string_val: "noop_elimination"
            string_val: "shuffle_and_repeat_fusion"
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/normalize_element/component_0"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_DOUBLE
            tensor_shape {
              dim {
                size: 400
              }
            }
            tensor_content: "fffff\006X@\315\314\314\314\314\254W@333333\007@\000\000\000\000\000\2001@fffff&C@\232\231\231\231\231\231B@\000\000\000\000\000\2002@33333\2631@\000\000\000\000\000\200V@\315\314\314\314\314,W@\000\000\000\000\000\000Y@\315\314\314\314\314\014M@\000\000\000\000\000\000V@fffff&U@fffff\246T@\232\231\231\231\231YX@ffffff\032@\000\000\000\000\000\300R@\232\231\231\231\231\271T@\315\314\314\314\314\014L@ffffff5@333333>@\315\314\314\314\314\354T@ffffffV@\000\000\000\000\000\000Y@\000\000\000\000\000\000K@\315\314\314\314\314LP@fffff&W@\232\231\231\231\231YX@fffff\246Q@33333\223U@\232\231\231\231\231yR@fffff&W@\232\231\231\231\2319S@\000\000\000\000\000@W@33333SW@33333\263V@\000\000\000\000\000\0001@\315\314\314\314\314\254X@\000\000\000\000\000`W@\315\314\314\314\314\314M@\232\231\231\231\231YU@\315\314\314\314\314\214X@\232\231\231\231\231\271X@\315\314\314\314\314\314S@\000\000\000\000\000\240U@33333\263N@33333\263X@\000\000\000\000\000\000Y@\315\314\314\314\314LB@\315\314\314\314\314lX@\000\000\000\000\000\000Y@\232\231\231\231\231\031W@33333\363W@\000\000\000\000\000\000Y@\315\314\314\314\314,P@\000\000\000\000\000\2001@fffff\206X@33333\363A@fffff\246T@\315\314\314\314\314\354W@fffff\346P@\000\000\000\000\000\340T@\000\000\000\000\000@C@\232\231\231\231\231\331W@\232\231\231\231\231YP@\315\314\314\314\314\014W@fffff&V@\000\000\000\000\000\000Y@\315\314\314\314\314\214D@\000\000\000\000\000\000Y@\232\231\231\231\231yW@\000\000\000\000\000 S@\232\231\231\231\231\031X@\232\231\231\231\231\331E@\000\000\000\000\000\000Y@\315\314\314\314\314LB@\315\314\314\314\314\214N@\315\314\314\314\314L6@\315\314\314\314\314\014C@fffff\246@@\000\000\000\000\000\000V@fffff\006Q@33333\263;@\315\314\314\314\314\3144@\315\314\314\314\314\314<@\232\231\231\231\231\031W@\000\000\000\000\000\000Y@\315\314\314\314\314lS@333333X@\232\231\231\231\231YR@\000\000\000\000\000\000Y@\000\000\000\000\000\000Y@fffffFU@\232\231\231\231\231yX@fffff\006U@\315\314\314\314\314\214F@fffff\3466@\000\000\000\000\000\200X@33333\263W@\232\231\231\231\231YG@fffff\346V@\232\231\231\231\231\271R@\232\231\231\231\231\231Q@\232\231\231\231\231\271U@333333E@\000\000\000\000\000\000\032@33333\223W@\232\231\231\231\231yW@\000\000\000\000\000\000Y@\000\000\000\000\000 V@\315\314\314\314\314\3148@ffffff2@\000\000\000\000\000\000X@\232\231\231\231\231\231Q@fffff\346<@\315\314\314\314\314\3142@33333s@@\232\231\231\231\231\371U@333333V@\315\314\314\314\314L?@\000\000\000\000\000@S@\000\000\000\000\000@X@\000\000\000\000\000\000Y@\232\231\231\231\231YM@\000\000\000\000\000\000Y@\315\314\314\314\314\014D@33333\323V@\315\314\314\314\314\314J@333333L@\000\000\000\000\000\240T@33333sB@\232\231\231\231\231\231J@fffffFV@\315\314\314\314\314\014X@\315\314\314\314\314\354S@fffff\306X@33333\263X@\232\231\231\231\231\031<@33333\323T@333333D@\232\231\231\231\231\031@@\000\000\000\000\000@M@\315\314\314\314\314\314J@\000\000\000\000\000\000Y@\315\314\314\314\314L7@\232\231\231\231\231\231V@33333sA@\000\000\000\000\000\000@@333333F@ffffff/@33333\363D@\000\000\000\000\000\200O@\000\000\000\000\000\340V@\000\000\000\000\000 U@33333\323U@33333\323X@\232\231\231\231\231\371S@fffffFQ@\232\231\231\231\231\331W@fffff\346F@\315\314\314\314\314\354V@33333sS@\232\231\231\231\2319X@\232\231\231\231\231\231@@\315\314\314\314\314\314#@\232\231\231\231\231\031O@33333\223X@ffffff7@\315\314\314\314\314lU@333333M@fffff&X@33333\223Q@\000\000\000\000\000\000X@33333\263R@fffff\206X@\232\231\231\231\231yX@fffff\346L@33333sT@\000\000\000\000\000\000Y@\000\000\000\000\000`U@fffff&@@\315\314\314\314\314\314V@33333\223V@\000\000\000\000\000\300T@\000\000\000\000\000\000Y@\000\000\000\000\000\240U@33333\263;@\232\231\231\231\231yX@\000\000\000\000\000\240T@\315\314\314\314\314\254S@fffff\346Q@\232\231\231\231\231\231G@\000\000\000\000\000\000Y@\315\314\314\314\314lQ@\232\231\231\231\231\031@@\232\231\231\231\231YV@\232\231\231\231\231YM@333333T@\000\000\000\000\000\240W@\232\231\231\231\231\271S@fffff\346N@\315\314\314\314\314LV@fffff\246P@33333sW@\000\000\000\000\000@A@\315\314\314\314\314LE@\000\000\000\000\000\240W@333333K@\000\000\000\000\000\000Y@\315\314\314\314\314\014B@\315\314\314\314\314\214X@\315\314\314\314\314\214@@\000\000\000\000\000\2002@\000\000\000\000\000\200?@\000\000\000\000\000\000X@\000\000\000\000\000\000Y@\232\231\231\231\231\331W@33333SW@\000\000\000\000\000`Q@\000\000\000\000\000\000Y@\000\000\000\000\000\000Y@33333\023T@33333SX@\000\000\000\000\000\000Y@\232\231\231\231\231\331W@\315\314\314\314\314\314S@\000\000\000\000\000\000H@\232\231\231\231\2319W@\315\314\314\314\314L=@\232\231\231\231\231\031=@fffff\006W@\315\314\314\314\314L0@33333\223W@\000\000\000\000\000\000Y@33333\363V@\315\314\314\314\314\014E@33333\263X@\232\231\231\231\231\231G@333333\037@\000\000\000\000\000\000Y@\315\314\314\314\314\214P@\232\231\231\231\231\031?@\232\231\231\231\231\331T@\315\314\314\314\314\314T@ffffffQ@33333\263X@\315\314\314\314\314lT@\000\000\000\000\000\200W@333333Q@33333\323W@\315\314\314\314\314,U@\315\314\314\314\314\314\030@\315\314\314\314\314,S@\000\000\000\000\000\000Y@33333\363S@\315\314\314\314\314,Q@\000\000\000\000\000\240P@\000\000\000\000\000\000Y@\232\231\231\231\231\231#@\315\314\314\314\314\014X@ffffffW@fffff\006X@33333\263F@\000\000\000\000\000\000U@\232\231\231\231\231\331H@fffff&W@ffffffL@fffff&K@33333\263V@fffff\306V@333333\037@\000\000\000\000\000\300W@fffff\246H@fffff\006U@\232\231\231\231\231\0315@fffffFX@\315\314\314\314\314\014@@\000\000\000\000\000\300@@fffff\206W@\232\231\231\231\231\371V@fffff\246Q@\000\000\000\000\000\000Y@\000\000\000\000\000\000M@\232\231\231\231\231YX@\232\231\231\231\2319W@\315\314\314\314\314,R@fffff\346I@\232\231\231\231\231\331F@\000\000\000\000\000@A@33333sV@fffff\3465@\000\000\000\000\000 R@fffff\346?@\232\231\231\231\231\031E@\000\000\000\000\000@X@\315\314\314\314\314\214X@\000\000\000\000\000\300P@ffffff<@\315\314\314\314\314LX@\000\000\000\000\000@J@\232\231\231\231\231YU@\000\000\000\000\000\000Y@\000\000\000\000\000\000Y@\232\231\231\231\231\331J@\000\000\000\000\000 S@fffff\246W@\232\231\231\231\231YW@\315\314\314\314\314\314W@333333T@\232\231\231\231\231\031?@\000\000\000\000\000@D@fffff&G@fffff&K@\232\231\231\231\231\371U@\315\314\314\314\314\014X@\000\000\000\000\000\240X@33333sW@\232\231\231\231\2319R@\232\231\231\231\231\0314@\000\000\000\000\000\000@@fffff\246B@\232\231\231\231\231\231X@3333331@33333SS@\232\231\231\231\231\371U@\000\000\000\000\000\000Y@\232\231\231\231\231\271X@\315\314\314\314\314\314G@fffff\346@@333333\033@33333\223S@\000\000\000\000\000@X@\000\000\000\000\000\000Y@\000\000\000\000\000\000S@\000\000\000\000\000\300M@\000\000\000\000\000\200F@\000\000\000\000\000`X@fffff\346<@fffff&D@\315\314\314\314\314\3145@\000\000\000\000\000\240R@\315\314\314\314\314\314>@\000\000\000\000\000\300N@33333sX@33333sJ@\000\000\000\000\000\2003@fffff\206U@\315\314\314\314\314lS@\232\231\231\231\231yX@fffff\346;@\000\000\000\000\000\300W@33333\363I@\000\000\000\000\000\000Y@\232\231\231\231\231\031V@\232\231\231\231\231\031@@fffff\206P@33333\223R@\315\314\314\314\314\214Q@fffff&J@\232\231\231\231\231YL@\315\314\314\314\314\214H@fffffFR@\315\314\314\314\314LB@\315\314\314\314\314\214X@\232\231\231\231\231\331U@fffff\346W@\232\231\231\231\231\331V@33333sC@\232\231\231\231\231\331A@\315\314\314\314\314\314F@\232\231\231\231\231\231;@ffffff-@\232\231\231\231\231\371V@33333SX@\315\314\314\314\314LP@\315\314\314\314\314\254W@\000\000\000\000\000\000Y@\232\231\231\231\231\031A@\000\000\000\000\000\000$@33333\323U@\232\231\231\231\231\231.@ffffff5@\315\314\314\314\314\314+@33333SR@\315\314\314\314\314\314V@\000\000\000\000\000\000Y@\000\000\000\000\000\000V@\000\000\000\000\000\000\030@\000\000\000\000\000 P@fffffFP@\232\231\231\231\231\231X@\000\000\000\000\000\000Y@\000\000\000\000\000\000Y@333333=@33333SP@\000\000\000\000\000\000L@\000\000\000\000\000\200T@fffff\206S@ffffff\032@"
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/normalize_element/component_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_DOUBLE
            tensor_shape {
              dim {
                size: 400
              }
            }
            tensor_content: "H\277}\0358g\002@\2343\242\2647\270*@\000\343\0314\364O\300?\337\333\364g?R\304?\t3m\377\312J\243?\2343\242\2647\370\242?\354\027\354\206m\213\262?\232\231\231\231\231\231\271?\345f\270\001\237?\023@\310$#gaO\303?\314]K\310\007-C@\257\261KTo\r\254?z1\224\023\355*\022@M\363\216St$\351?\200C\250R\263G\014@\207\242@\237\310\223\363?\200\202\213\0255\230\266??\035\217\031\250\214\014@\320,\tPS\313\013@>\350\331\254\372\\\255?\215\013\007B\262\200\251?+\030\225\324\th\306?\303G\304\224H\002\037@F\266\363\375\324\210 @_$\264\345\\\252\026@\345\355\010\247\005/\306?Hm\342\344~\207\302?\000:\314\227\027`\364?4\235\235\014\216\222\031@\331\003\255\300\220\225!@B>\350\331\254\372\254?\375M(D\300!\244?\265\211\223\373\035J!@T\313\326\372\"\241\335?1\010\254\034Zd\007@\372~j\274t\223.@\231d\344,\354i\367?\241\241\177\202\213\025\323?\233\341\006|~\250\"@\203i\030>\"\246\324?3\254\342\215\314#\237?\210\205Z\323\274\303D@\267\234KqU\331\341?k`\253\004\213\303\325?<I\272f\362\315\374?\206\224\237T\373t\330?R~R\355\323\361\270?\204*5{\240\245#@\202sF\224\366\346\'@\270\222\035\033\201x\265?\237q\341@H\026\363?\215\234\205=\355\360\367?[\323\274\343\024\r6@\202\250\373\000\2446\271?\200\274W\255L\370\037@\316N\006G\311K\027@\265\333.4\327i\310?\201[w\363T\007\364?\'1\010\254\034Z\264?l\317,\tPS\303?P6\345\n\357\362\002@\021p\010Uj\226\022@:\006d\257w\177\274?\245\210\014\253x#\243?$EdX\305\033\325?\317\203\273\263v[\037@\004s\364\370\275M\267?\224j\237\216\307\014\330?Ve\337\025\301_\"@)\\\217\302\365(\264?\273\270\215\006\360v\"@G\254\305\247\000\310\"@\377\t.V\324`\312?\272\325s\322\373&\031@\266l\255/\022\332\316?\376e\367\344a\221I@V\202\305\341\314\257\351?5\007\010\346\350\361\233?\331\231B\3475v\301?J\265O\307c\006\252?\225\361\3573.\034\310?->\005\300x\006\362?\311v\276\237\032/\341?Uj\366@+0\264?X4\235\235\014\216\202?)\320\'\362$\351\306?sh\221\355|?\275?\331=yX\250\0252@\025\000\343\0314\364\343?v\345\263<\017\256\026@-\262\235\357\247\306\253?\320\263Y\365\271Z.@\325s\322\373\306\227\023@\335A\354L\2413\034@]\376C\372\355\2333@\201&\302\206\247W\262?\252\t\242\356\003\220\252?\307\021k\361)\000\246?X4\235\235\014\216\312?V}\256\266b\177\345?\312\246\\\341].\242?\321W\220f,\232\341?\242\271N#-\325\026@I\272f\362\3156\325?RD\206U\274\221\343?\r\032\372\'\270X\311?\0221%\222\350e\304?\344\024\035\311\345\037$@\313\204_\352\347M\370?A\361c\314]\013+@W`\310\352V\317\301?\222W\347\030\220\275\216?\270\257\003\347\214(\265?>\350\331\254\372|\027@\361\272~\301n\330\246?\261KTo\rl\323?\270\222\035\033\201x\215?\331Z_$\264\345\254?\261U\202\305\341\254\022@\367\356\217\367\252\225\356?\375j\016\020\314\321\243?\315\222\0005\265\354\026@\200\267@\202\342\'\'@}\263\315\215\351\t\313?-!\037\364lV\275?b\204\360h\343\010\003@j\207\277&k\324\325?d#\020\257\353\027\332?\276\331\346\306\364\204\245?\356_YiR\n\232?\315@e\374\373\214\337?h\005\206\254n\365\264?G\376`\340\271W\023@\033\236^)\313\3609@\350\361{\233\376l\r@\2000\360\334{\270\314?\253>W[\261\277/@2\311\310Y\330\323\324?\232\217kC\3058\237?\004\342u\375\202\335\260?\316\337\204B\004\034\242?jH\334c\351C\247?\347\000\301\034=~\257?\347\005\330G\247\256\254?\3122\304\261.bR@\255n\365\234\364\276\241?\345,\354i\207\277\320?\217\307\014T\306\277\325?\006\r\375\023\\\254\250?\261U\202\305\341\314\257?\354\273\"\370\337J\226?H\371I\265O\007\003@MJA\267\2274\246?\023\355*\244\374\244\340?D\377\004\027+j\344?\322\000\336\002\t\n\360?\345\355\010\247\005\177 @\017\227\034wJ\007\303?b\234\277\t\205\010\260?c\177\331=y\270/@\3367\276\366\314\222\240?d\321tv2\270\363?0L\246\nF\325#@\004[%X\034\316\371?\r\340-\220\240\370\241?0\330\r\333\026e\226?\3745Y\243\036\242\261?\177\244\210\014\253x\307?n4\200\267@\202\242?\331Z_$\264\345\352?\325\347j+\366\227\255?Dio\360\205\331#@\033\323\023\226x@\251?\240\211\260\341\351\225\320?\273\'\017\013\265\306\031@\217\344\362\037\322\3170@\315\222\0005\265l\341?v\310\315p\003>\277?\016\303G\304\224H\341?b\241\3264\357x,@\014\032\372\'\270X\315?\261\21272\217\374\301?\220\245\017]P\337\320?\034_{fI\200\345?;\3745Y\243\236\032@q\254\213\333h\340,@Q\367\001Hm\002\023@\022\245\275\301\027&\223?\313\271\024W\225\235\035@\007_\230L\025,\025@x\234\242#\271\324B@\342\222\343N\351`\340?\215\264T\336\216p\272?\264Y\365\271\332\252,@(D\300!T\251\261?\316\245\270\252\354\273\242?\362v\204\323\202\027\341?Tt$\227\377\220\236?\010=\233U\237\253\343?\000\005\027+j\260\021@\020@j\023\'\367\233?\327\206\212q\376&\344?jH\334c\351C\353?\321W\220f,\232\266?\204\206\376\t.V\274?+j0\r\303G\244?\206U\274\221y\344\321?\177M\326\250\207h\352?\032\335A\354L\241\273?yX\2505\315\0139@r\304Z|\n\200\221?\273,&6\037W\375?\035\376\232\254Q\017\261?{\332\341\257\311\032\265?\2201w-!\037\224?\0054\0216<\3158@\341\013\223\251\202\221\n@t\315\344\233mn\314?HP\374\030s\327,@D\372\355\353\3009\347?\261U\202\305\341\314\366?}\320\263Y\365\031,@\237v\370k\262f @\353s\265\025\373\013.@?\313\363\340\356\254\365??\343\302\201\220\034 @\323\366\257\2544)\311?,`\002\267\356\346\251?\347\343\332P1\316\267?[_$\264\345\334\360?\266\370\024\000\343\031\300?\206\346:\215\264T\306?9b->\005\300\304?\267E\231\r2\311\314?\326\305m4\200\337F@T\336\216pZ\360\001@\366]\021\374o%\323?\345\320\"\333\371n!@Dn\206\033\360\371\261?\204d\001\023\270u\267?0*\251\023\320d8@\224\301Q\362\352\034\303?\005\377[\311\216\215\300?tA}\313\234\316\024@\037\021S\"\211^\324?\336Y\273\355Bs\275?\305\010\341\321\306\021\273?\016\2760\231*\030\351?\3367\276\366\314\222\003@\275:\307\200\354\365\256?\217\337\333\364g?\320?\302n\330\266(3\016@\212\223\373\035\212\002\311?\315;N\321\221\\\326??W[\261\277,&@1\010\254\034Z\304\026@\035=~o\323\237\265?|Ic\264\216\252\334?\200\267@\202\342\247<@\234\242#\271\374\207\322?M\370\245~\336\024\000@#\241-\347R|\023@\252\202QI\235\200\302?\206\261\205 \007%\254?\367\257\2544)e\021@6\310$#ga\257?\220\275\336\375\361\336\032@\003CV\267zN\262?9\276\366\314\222\000\275?z\245,C\034\253%@\213\340\177+\331\261\016@2\261\371\2706T\300?\314bb\363qm\362?\023\355*\244\374\244\212?\002Hm\342\344~\267?S\226!\216uq\253?\027\361\235\230\365b\300?\"\370\337Jvl\264?\220\332\304\311\375\016\245?\017\326\3779\314\027\362?\274\226\220\017z>V@w\241\271N#-\321?,e\031\342X7&@\350\237\340bE\r\302?e\215z\210F\367!@\310\200\354\365\356\217\277?\215\321:\252\232 \320?.x\321W\220f\314?\201\220,`\002\267\266?\253\347\244\367\215\257\235?M\241\363\032\273D\265?\232%\001jj\331\212?\017bg\n\235\327\300?Q\024\350\023y\222\224?\345\3259\006d\257\267?9z\374\336\246?\303?\3578EGr\371\317?\031\377>\343\302\201\342?\201`\216\036\277\267\251?\246\325\220\270\307r#@J\357\033_{f\315?\325\004Q\367\001H\315?\342\314\257\346\0001#@\254Q\017\321\350\016\372?Gw\020;S\350\254?*t^c\227\250\340?\305\224H\242\227Q\363?_\2652\341\227\372\305?)\221D/\243\230\003@g\270\001\237\037F\250?@\237\310\223\244k\246?\300\004n\335\315S\215?]\304wb\326\213\241?\003\354\243SW>\307?3\277\232\003\004S\026@gDio\360\2457@\375\274\251H\2051\001@\241l\312\025\336\245\002@\177\373:p\316\210\322?\005\377[\311\216\215\260?F\261\334\322jH\214?\223\214\234\205=\355\240?\\\224\331 \223\214\326?\202\250\373\000\2446\261?#gaO;\374\245?aO;\37459\022@\3544\322Ry;\345?\034\010\311\002&\260\036@_\007\316\031Q\332\213?T\256\360.\027\361\305?\010wg\355\266\013\265?\312\246\\\341].\324?\267b\177\331=\331\033@,e\031\342X\2674@\220,`\002\267\356\276?\230\243\307\357m\372\223?\232\r2\311\310Y\270?d\222\221\263\260\'\032@q=\n\327\243p\235?\225\232=\320\n\214\006@\264\315\215\351\tK\234?\347\030\220\275\336\375\271?p\231\323e1\261\261?\022\245\275\301\027&\325?x\020;S\350<\006@\201&\302\206\247W\272?\323\244\024t{I\273?\316\302\236v\370\373 @|\270\344\270S:\320?R\'\240\211\260\341\342?Xni5$\356\241?2U0*\251\323+@\334^\322\030\255c\r@\t\212\037c\356\372P@\226>tA}\213\r@\350\301\335Y\273\355\312?A\016J\230i\373\247?]\212\253\312\276+\322?\3500_^\200}\310??\035\217\031\250\214\257?\365\333\327\201s&*@_\014\345D\273\n\305?\273~\301n\330\266\300?k\016\020\314\321\343\247?k\324C4\272\303\025@\365\326\300V\t\026\313?\'\302\206\247W\312\330?\336\223\207\205Z\223\r@\350\331\254\372\\m\265?\354/\273\'\017\013\225?9\326\305m4\200\247?\312\253s\014\310^\257?;\215\264T\336\216\310?\'\240\211\260\341\351\305?\214\333h\000o\201\372?\211\265\370\024\000\343y?333333\354?6T\214\3637\241\357?\036\217\031\250\214\177\217?)?\251\366\351x\254?\214\271k\t\371\240\327?T\343\245\233\304 \240?\300\347\207\021\302\243\255?\333m\027\232\3534\222?)\350\366\222\306h\342?/n\243\001\274\0254@V\016-\262\235\3172@\264Y\365\271\332\252,@f1\261\371\2706\264?\213\246\263\223\301Q\242?\321\226s)\256*\273?#\303*\336\310<\357?\001\336\002\t\212\1772@\210\205Z\323\274c\020@i\000o\201\004\305\303?\007\346\350\361{\233\316?\324+e\031\342X\247?\367\314\222\00055\366?d#\020\257\353w\035@\351&1\010\254\034\302?"
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/normalize_element/component_2"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_DOUBLE
            tensor_shape {
              dim {
                size: 400
              }
            }
            tensor_content: "\315\314\314\314\314\314\000@\3019#J{\203\374?\340\276\016\2343\342\026@.\220\240\3701&\025@#\333\371~j<\035@&S\005\243\222\372\024@\226\262\014q\254k%@\326\305m4\200\367\025@H\341z\024\256\307\004@\030\225\324\th\"\375?\023\362A\317f\325\367?\366(\\\217\302\365\n@0L\246\nF%\004@q\033\r\340-\020\001@!\260rh\221\355\373?(~\214\271k\t\376?.\220\240\3701&\025@y\351&1\010,\007@(\017\013\265\246y\376?9\326\305m4\300\021@n4\200\267@B\033@\3274\3578E\307\016@\026\373\313\356\311C\006@P\374\030s\327\022\362?\231*\030\225\324\t\000@\313\020\307\272\270\r\003@P\374\030s\327\022\006@\274\005\022\024?\306\374?\331\316\367S\343\245\001@5^\272I\014\202\000@\035\311\345?\244_\013@[\261\277\354\236\274\010@\360\205\311T\301\250\374?\254\034Zd;_\r@\277}\0358gD\002@\024?\306\334\265\204\365?\177\373:p\316\210\377?9\326\305m4\000\013@\235\021\245\275\301\027\002@\325\th\"lx\377?\366(\\\217\302u\026@Gr\371\017\351\267\371?mV}\256\266\342\000@\246\233\304 \260\362\000@c\356ZB>h\003@D\372\355\353\300\271\t@gDio\360\005\013@\356|?5^\272\365?q\033\r\340-\220\364?\337\340\013\223\251\002\022@^\272I\014\002+\002@\201\004\305\2171w\371?$\271\374\207\364\333\375?\351\267\257\003\347\014\000@+\366\227\335\223\207\370?\242\2647\370\302d\013@u\223\030\004VN\037@\303\323+e\031b\016@\226\262\014q\254k%@B>\350\331\254\372\005@\345\362\037\322o_\367?\245N@\023aC\004@\251\244N@\023\341\000@\023\362A\317f\325\031@\212\037c\356Z\302\003@0\273\'\017\013\265\007@\355\236<,\324\232\005@R\270\036\205\353Q\r@\014\223\251\202QI\371?;\001M\204\rO\016@\277\016\2343\242\264\362?\301\250\244N@\023\375?6\315;N\321\321\037@\372~j\274t\223\000@\'\240\211\260\341\251\025@\317\367S\343\245\233\366?\254\034Zd;_\016@\256\330_vO\336\023@q\033\r\340-\220\017@\023\362A\317f\325\031@\327\022\362A\317f\024@\245N@\023a\303\371?\254\034Zd;_\r@\326\305m4\200w\024@B>\350\331\254:\035@O\257\224e\210c\006@+\030\225\324\t\350\n@\t\212\037c\356Z\375?\314\356\311\303B-\n@0\273\'\017\013\265\365?\n\327\243p=\212\n@\033\r\340-\220\240\376?R\270\036\205\353Q\365?\"lxz\245,\000@\310\230\273\226\220\017\365?\334\327\201sF\224\001@\241g\263\352s\265\021@0*\251\023\320D\035@\232\010\033\236^)\375?\221~\373:p\316\377?_\007\316\031Q\232\025@R\'\240\211\260\341\376?e\252`TR\247\n@e\031\342X\0277\r@7\211A`\345\320\374?q\033\r\340-\220\017@\340\276\016\2343\342\026@\277\016\2343\242\264\000@\262\235\357\247\306K\001@\317f\325\347j+\370?0*\251\023\320\304\004@\n\327\243p=\212\027@\373\313\356\311\303\002\026@\300\354\236<,\324\372?_\007\316\031Q\232\025@\'\240\211\260\341\251\025@p\316\210\322\336\340\030@\254\255\330_vO\020@\367u\340\234\021\245\004@\216\006\360\026H\320\021@0*\251\023\320D\035@\233\346\035\247\350H\013@R\270\036\205\353Q\374?\243\001\274\005\022T\030@\327\243p=\nW\017@\277\016\2343\242\264\366?\030\225\324\th\342\022@\374\251\361\322Mb\010@O@\023a\303S\r@=\233U\237\253\355\026@\n\327\243p=\212\n@g\325\347j+\366\013@Gr\371\017\3517\t@\\\217\302\365(\\\372?\300\354\236<,\324\000@\007\360\026HP\374\003@\312T\301\250\244N\370?\000\000\000\000\000\000\375?\315;N\321\221\334\031@!\260rh\221\355\005@\326\305m4\200\367\025@t$\227\377\220~\027@\253>W[\261?\023@\325\347j+\366\227\t@HP\374\030s\327\374?U0*\251\023\220\032@x\351&1\010\254\006@#\333\371~j\034 @\033\236^)\313p\"@\275R\226!\216\225!@\024\256G\341z\024\031@\227n\022\203\300\312\r@n4\200\267@B\033@\002+\207\026\331N\002@\360\026HP\374\330\021@\333\371~j\274\364\020@\2201w-!\237\003@b\241\3264\3578\006@\300\354\236<,\324\003@\313\020\307\272\270\215\376?\253>W[\261?\030@\377\262{\362\260\320\017@\304\261.n\243\001\370?\243\001\274\005\022\024\016@F\266\363\375\324x\024@p\316\210\322\336\340\030@*:\222\313\177\310\004@\331_vO\036\026\374?\326\305m4\200w\024@\341\013\223\251\202\321\021@n\022\203\300\312\241\006@/\335$\006\201\225\001@g\325\347j+v\t@\"\375\366u\340\234\374?|\362\260Pk\232\001@\2505\315;N\321\366?\373\\m\305\376\262\372?g\325\347j+\366\013@\204\rO\257\224\345\000@:#J{\203/\371?\031s\327\022\362\301\026@q\033\r\340-\220\017@\225e\210c]\\\004@\355|?5^\272\022@\216uq\033\r\340\005@\246\233\304 \260r\367??\306\334\265\204|\003@\374\030s\327\022\022!@\365\333\327\201sF\367?\201&\302\206\247W\001@\221~\373:p\316\375?d;\337O\215\227\020@\356|?5^\272\033@;\337O\215\227n\371?\000o\201\004\305\017\002@_\007\316\031Q\232\025@\256\330_vO\036\001@\253>W[\261?\030@\314\356\311\303B-\n@\373:p\316\210R\004@\256\330_vO\336\023@\024\256G\341z\324\022@\224\366\006_\230\014\020@\313\241E\266\363=\026@\223\251\202QI\035\007@\305\376\262{\362\360\027@\313\020\307\272\270\r\003@\376e\367\344a\241\000@b\241\3264\3578\006@$(~\214\271k\371?T\343\245\233\304@(@\336\223\207\205ZS\000@\036\026jM\363\016\t@\246\nF%u\302\030@=\233U\237\253-\"@\221\017z6\253>\373?0L\246\nF%\365?\374\251\361\322Mb\004@\276\301\027&S\005\000@\254\034Zd;_\016@7\032\300[ A\374?q=\n\327\243p\370?yX\2505\315;\006@X\2505\315;\316\000@33333\263\020@\000\221~\373:p\003@#\333\371~j\034 @u\002\232\010\033\036\023@\340-\220\240\370\261\000@t$\227\377\220\376\021@\243\222:\001MD\022@\243\222:\001M\004\017@\235\357\247\306K\267\021@\302\027&S\005c\031@\234\242#\271\374\207\372?\306K7\211A`\003@\235\357\247\306K\267\021@\261Pk\232w\234\373?8gDiop\014@.\220\240\3701&\025@(\017\013\265\246y\367?\327\022\362A\317\346\034@HP\374\030s\327\027@\271\215\006\360\026\310\005@\351H.\377!\375\017@g\325\347j+\366\013@\210\205Z\323\274\343\375?\271\215\006\360\026\010\021@\361c\314]K\310\373?\224\207\205Z\323<\n@{\024\256G\341z\027@F\266\363\375\324\370\006@.\220\240\3701&\025@R\270\036\205\353\321\010@\347\214(\355\r\276\375?Y\027\267\321\000^\014@\314\177H\277}\235\005@e\031\342X\0277\r@\3122\304\261.n\371?33333\263\014@Y\027\267\321\000^\000@\032\300[ Aq\002@Zd;\337O\315\027@\253>W[\261?\023@\277}\0358gD\010@\360\026HP\374\330\024@\202\342\307\230\273\226\002@\263\352s\265\025\373\r@\016\2760\231*X\031@\351&1\010\254\034\375?w\276\237\032/]\002@1\010\254\034Z$\034@#J{\203/L\016@\327\022\362A\317&\034@\010=\233U\237+\005@n4\200\267@B\033@\330\201sF\224v\003@\344\203\236\315\252\217\020@_\007\316\031Q\232\025@<\337O\215\227\356\020@D\213l\347\373\251\366?\025\035\311\345?$\007@Dio\360\205\311\362?H\341z\024\256G\031@\321\221\\\376C\372\000@O@\023a\303\323\002@\317f\325\347jk\021@\236\357\247\306Kw\021@n4\200\267@B\033@\275R\226!\216\225!@H\277}\0358\347\007@\206\311T\301\250d!@\020z6\253>\327\005@F\266\363\375\324x\024@\246\nF%u\302\030@xz\245,C\034\377?\212\260\341\351\225\262\372?\345\362\037\322o_\003@U0*\251\023\220\032@\276\301\027&S\205\000@\317f\325\347jk\021@\017\2343\242\264\267\005@\323Mb\020X9\372?d\314]K\310\007\367?\221~\373:p\016\024@d;\337O\215\227\020@c\356ZB>h\003@\240\032/\335$F\033@\232\231\231\231\231\031\002@\n\327\243p=\n\004@\031\004V\016-r\032@J{\203/L\246 @\"lxz\245\354\024@\232\010\033\236^)\022@I\235\200&\302\206\002@\005\305\2171w-\366?\r\340-\220\240\370\371?\267b\177\331=y\370?O\257\224e\210c\006@\344\203\236\315\252O\037@\325\347j+\366\227\026@\253>W[\261?\023@\270@\202\342\307\230\375?\353\3426\032\300\333\024@\354Q\270\036\205\353\014@\344\203\236\315\252\317\371?\216\006\360\026HP\376?\030\225\324\th\"\372?\363\037\322o_G\035@\327\022\362A\317f\024@\000\221~\373:\320!@\326V\354/\273\'\007@m\347\373\251\361\322\376?}\256\266b\177\331\362?g\325\347j+\366\013@\212\216\344\362\037r\"@\337\340\013\223\251\002\022@\314]K\310\007=\363?O@\023a\303S\r@\206\311T\301\250d\020@\320\263Y\365\271\232\025@\241g\263\352s5\020@\263{\362\260P\353\031@e\031\342X\0277\r@\177\373:p\316\210\365?1\010\254\034Z$\034@\316\210\322\336\340+%@]\376C\372\355k\000@\217\302\365(\\\217\017@\346\256%\344\203\236\002@\326\305m4\200w\024@\236^)\313\020\307\001@\254\213\333h\000\357\017@\221~\373:p\316\366?(~\214\271k\211\004@,\324\232\346\035g\020@\314]K\310\007\275\010@\030\225\324\th\342\022@6\315;N\321\321\037@\202sF\224\366\006 @\273\270\215\006\360\226\006@u\223\030\004VN\037@R\270\036\205\353\321\003@#\333\371~j<\035@HP\374\030s\327\002@\017\2343\242\264\267\005@\314\177H\277}\035\374?(~\214\271k\t\374?\243\222:\001MD\022@\216uq\033\r`\"@0*\251\023\320D\035@\210\364\333\327\201s\023@\'\240\211\260\341\251\025@\343\245\233\304 \260\001@\027\331\316\367S\343\371?\\\217\302\365(\\\020@=\233U\237\253\255\377?\032Q\332\033|a\020@\016\2760\231*X\031@\344\203\236\315\252O\037@\341\013\223\251\202\321\014@[\323\274\343\024\235\036@\312\241E\266\363\375\031@[\323\274\343\024\235\036@0\273\'\017\013\265\016@\325x\351&1\010\367?\006\022\024?\306\334\370?\200H\277}\0358\377?\250\306K7\211\001\021@\363\037\322o_\307\022@\016\2760\231*X\031@\370S\343\245\233\304\002@\376\324x\351&1\362?\202\342\307\230\273\226\366?\212\037c\356ZB\037@KY\2068\326E\003@\204\rO\257\224\345\010@\354Q\270\036\205\353\017@\2343\242\2647\370\376?\340\276\016\2343\342\026@"
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/normalize_element/component_3"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_DOUBLE
            tensor_shape {
              dim {
                size: 400
              }
            }
            tensor_content: "\024\256G\341z\2243@\232\231\231\231\231\0312@\244p=\n\327\243\033@\037\205\353Q\270\236%@R\270\036\205\353Q\370?\244p=\n\327\243\n@\n\327\243p=\n\373?\\\217\302\365(\\\030@\232\231\231\231\231\0312@=\n\327\243p\275;@\232\231\231\231\231\0312@q=\n\327\243p\001@\232\231\231\231\231\0312@\303\365(\\\217\302\017@\024\256G\341z\2243@\024\256G\341z\2243@\037\205\353Q\270\236%@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\366(\\\217\302\365\021@\217\302\365(\\\217\026@\327\243p=\n\327\027@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\341z\024\256Ga#@\205\353Q\270\036\005$@\024\256G\341z\2243@\232\231\231\231\231\0312@\232\231\231\231\231\0312@H\341z\024\256G\013@H\341z\024\256G\013@\232\231\231\231\231\0312@\315\314\314\314\314\314\030@\024\256G\341z\2243@\232\231\231\231\231\0312@\024\256G\341z\2243@\315\314\314\314\314\314\030@\232\231\231\231\231\0312@\244p=\n\327\3435@\303\365(\\\217\302\024@\232\231\231\231\231\0312@\244p=\n\327\3435@\244p=\n\327\3435@\024\256G\341z\2243@\315\314\314\314\314\314\030@\327\243p=\n\327\027@\232\231\231\231\231\0312@\232\231\231\231\231\0312@)\\\217\302\365\250)@\244p=\n\327\3435@\024\256G\341z\2243@\232\231\231\231\231\0312@fffff\2469@\232\231\231\231\231\0312@\232\231\231\231\231\0312@q=\n\327\243p\027@H\341z\024\256G @\n\327\243p=\n\373?\205\353Q\270\036\005$@\024\256G\341z\2243@\232\231\231\231\231\0312@=\n\327\243p\275;@\303\365(\\\217\302\024@\244p=\n\327\3435@\232\231\231\231\231\0312@\256G\341z\024\256\003@\256G\341z\024.%@\232\231\231\231\231\0312@\205\353Q\270\036\205\013@\232\231\231\231\231\0312@\232\231\231\231\231\0312@q=\n\327\243p\027@\232\231\231\231\231\0312@\205\353Q\270\036\205\035@\232\231\231\231\231\0312@H\341z\024\256G @H\341z\024\256G\034@\256G\341z\024.%@\303\365(\\\217\302\024@\244p=\n\327\243\033@\024\256G\341z\2243@\315\314\314\314\314\314\030@\315\314\314\314\314\314\023@\303\365(\\\217\302\007@\341z\024\256Ga#@H\341z\024\256\307+@\232\231\231\231\231\0312@\315\314\314\314\314\314\030@\232\231\231\231\231\0312@333333\020@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\232\231\231\231\231\0312@fffff\2469@\366(\\\217\302\365\021@H\341z\024\256G\025@=\n\327\243p\275;@\232\231\231\231\231\0312@q=\n\327\243p\023@\303\365(\\\217\302\017@\232\231\231\231\231\0312@\315\314\314\314\314\314\030@\303\365(\\\217\302\017@\256G\341z\024.%@\244p=\n\327\243\033@\232\231\231\231\231\0312@\024\256G\341z\2243@\232\231\231\231\231\0312@333333\020@\\\217\302\365(\\\363?\327\243p=\n\327+@\232\231\231\231\231\0312@q=\n\327\243p\023@\205\353Q\270\036\205\035@q=\n\327\243p\007@\244p=\n\327\243\031@\232\231\231\231\231\0312@H\341z\024\256G @H\341z\024\256G\025@\232\231\231\231\231\0312@\232\231\231\231\231\0312@{\024\256G\341z\037@\327\243p=\n\327\033@\024\256G\341z\2243@\205\353Q\270\036\205\035@\315\314\314\314\314\314\030@\024\256G\341z\024.@=\n\327\243p=\016@\315\314\314\314\314\314#@\037\205\353Q\270\036\007@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\341z\024\256Ga#@\232\231\231\231\231\0312@\244p=\n\327\3435@=\n\327\243p=\016@\256G\341z\024\256\003@\\\217\302\365(\\\030@\354Q\270\036\205\353\t@\303\365(\\\217\302\024@\256G\341z\024\256\003@\232\231\231\231\231\0312@=\n\327\243p=\030@\315\314\314\314\314\314#@q=\n\327\243p\027@\037\205\353Q\270\036\r@\000\000\000\000\000\000\364?=\n\327\243p=\000@\232\231\231\231\231\0312@\217\302\365(\\\217\026@\303\365(\\\217\302\017@H\341z\024\256G @H\341z\024\256G @\232\231\231\231\231\0312@\037\205\353Q\270\036!@\\\217\302\365(\334\'@\232\231\231\231\231\0312@q=\n\327\243p\001@H\341z\024\256G @\232\231\231\231\231\0312@H\341z\024\256G @q=\n\327\243p\005@q=\n\327\243p\007@\256G\341z\024\256\003@=\n\327\243p\275;@\315\314\314\314\314\314\023@H\341z\024\256G @\256G\341z\024\256\003@\232\231\231\231\231\0312@q=\n\327\243p\001@\244p=\n\327\3435@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\244p=\n\327\3435@\037\205\353Q\270\036\007@\303\365(\\\217\302\017@\232\231\231\231\231\0312@\244p=\n\327\243\033@\256G\341z\024.%@\037\205\353Q\270\036!@H\341z\024\256G @\232\231\231\231\231\0312@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\232\231\231\231\231\231\020@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\315\314\314\314\314\314\030@\205\353Q\270\036\205\024@\232\231\231\231\231\0312@fffff\2469@q=\n\327\243p\023@\303\365(\\\217\302\017@q=\n\327\243p\001@\315\314\314\314\314\314\030@\232\231\231\231\231\0312@H\341z\024\256G\034@H\341z\024\256G @H\341z\024\256G @{\024\256G\341z\037@H\341z\024\256\307+@\303\365(\\\217\302\024@\341z\024\256Ga#@\303\365(\\\217\302\017@\037\205\353Q\270\036!@\232\231\231\231\231\0312@)\\\217\302\365(\000@\024\256G\341z\2243@333333\020@\270\036\205\353Q\270\023@)\\\217\302\365(\374?\232\231\231\231\231\0312@\024\256G\341z\2243@\205\353Q\270\036\005$@\232\231\231\231\231\0312@H\341z\024\256G @\024\256G\341z\2243@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\232\231\231\231\231\0312@H\341z\024\256G @\232\231\231\231\231\0312@q=\n\327\243p\027@\366(\\\217\302\365\021@fffff\2469@H\341z\024\256G @\205\353Q\270\036\205\013@\256G\341z\024.%@\327\243p=\n\327\033@{\024\256G\341z\037@\232\231\231\231\231\0312@\024\256G\341z\2243@\327\243p=\n\327\033@\232\231\231\231\231\0312@333333\020@\037\205\353Q\270\236%@\232\231\231\231\231\0312@\205\353Q\270\036\205\024@\327\243p=\n\327+@\232\231\231\231\231\0312@\315\314\314\314\314\314#@\037\205\353Q\270\036\007@=\n\327\243p\275;@H\341z\024\256G @\024\256G\341z\2243@\256G\341z\024\256\003@\244p=\n\327\243\033@\232\231\231\231\231\0312@\037\205\353Q\270\236%@\315\314\314\314\314\314#@\232\231\231\231\231\0312@\232\231\231\231\231\0312@333333\020@\315\314\314\314\314\314\030@\232\231\231\231\231\0312@\256G\341z\024.%@\024\256G\341z\2243@\232\231\231\231\231\0312@{\024\256G\341z\037@\303\365(\\\217\302\024@\232\231\231\231\231\0312@\244p=\n\327\243\n@\232\231\231\231\231\0312@\366(\\\217\302\365\021@\270\036\205\353Q\270\023@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\270\036\205\353Q\270\023@H\341z\024\256G @R\270\036\205\353Q\370?333333\020@\217\302\365(\\\217\026@\037\205\353Q\270\036!@\244p=\n\327\243\031@q=\n\327\243p\023@H\341z\024\256G @\232\231\231\231\231\0312@\341z\024\256Ga#@\232\231\231\231\231\0312@\327\243p=\n\327+@\232\231\231\231\231\0312@\205\353Q\270\036\005$@\256G\341z\024.%@\327\243p=\n\327\033@\217\302\365(\\\217\026@\000\000\000\000\000\000\364?\256G\341z\024\256\003@\205\353Q\270\036\205\363?\205\353Q\270\036\005$@q=\n\327\243p\005@\270\036\205\353Q\270\023@fffff\2469@\244p=\n\327\3435@\303\365(\\\217\302\017@=\n\327\243p=\030@\232\231\231\231\231\0312@\256G\341z\024.%@\037\205\353Q\270\036!@\232\231\231\231\231\0312@\244p=\n\327\3435@)\\\217\302\365\250)@\315\314\314\314\314\314\030@\024\256G\341z\2243@\205\353Q\270\036\205\024@\024\256G\341z\2243@\\\217\302\365(\334\'@\366(\\\217\302\365\n@\037\205\353Q\270\036\365?\303\365(\\\217\302\024@\205\353Q\270\036\205\035@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\024\256G\341z\2243@\024\256G\341z\2243@\341z\024\256Ga#@\354Q\270\036\205\353\001@q=\n\327\243p\335?\303\365(\\\217\302\024@\244p=\n\327\3435@\354Q\270\036\205\353\t@\024\256G\341z\024.@\232\231\231\231\231\0312@\303\365(\\\217\302\017@\232\231\231\231\231\0312@\000\000\000\000\000\000\020@\244p=\n\327\243\033@q=\n\327\243p\027@\315\314\314\314\314\314\030@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\037\205\353Q\270\036\007@\024\256G\341z\024\366?)\\\217\302\365\250)@\232\231\231\231\231\0312@\024\256G\341z\024.@\232\231\231\231\231\0312@\232\231\231\231\231\231\007@)\\\217\302\365\250)@\205\353Q\270\036\205\013@\315\314\314\314\314\314\030@\024\256G\341z\2243@\270\036\205\353Q\270\023@\217\302\365(\\\217\376?\232\231\231\231\231\0312@\315\314\314\314\314\314#@\244p=\n\327\3435@\315\314\314\314\314\314\023@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\244p=\n\327\243\n@H\341z\024\256G\013@\205\353Q\270\036\205\035@q=\n\327\243p\027@\217\302\365(\\\217\021@\232\231\231\231\231\0312@q=\n\327\243p\027@\205\353Q\270\036\005$@R\270\036\205\353Q\370?\232\231\231\231\231\0312@\037\205\353Q\270\036!@fffff\2469@\232\231\231\231\231\0312@\205\353Q\270\036\205\013@\256G\341z\024\256\347?H\341z\024\256G\025@\244p=\n\327\243\031@\205\353Q\270\036\205\035@\037\205\353Q\270\036!@\024\256G\341z\2243@{\024\256G\341z\002@\244p=\n\327\3435@H\341z\024\256G @\000\000\000\000\000\000\016@\354Q\270\036\205\353\001@\315\314\314\314\314\314#@\205\353Q\270\036\205\367?H\341z\024\256G\030@\205\353Q\270\036\205\367?\315\314\314\314\314\314\030@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\232\231\231\231\231\0312@)\\\217\302\365\250)@\244p=\n\327\243\n@\270\036\205\353Q\270\023@\244p=\n\327\3435@\232\231\231\231\231\0312@\024\256G\341z\2243@\205\353Q\270\036\205\024@\341z\024\256Ga#@H\341z\024\256\307+@H\341z\024\256G @\232\231\231\231\231\0312@\244p=\n\327\243\033@"
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/normalize_element/component_4"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_DOUBLE
            tensor_shape {
              dim {
                size: 400
              }
            }
            tensor_content: "\\\217\302\365(\\\343?\223\030\004V\016-\346?x\351&1\010\254\334?;\337O\215\227n\332?A`\345\320\"\333\331?c\177\331=yX\334?\350\373\251\361\322M\332?\203\300\312\241E\266\333?7\211A`\345\320\346?\260rh\221\355|\343?\223\030\004V\016-\346?i\221\355|?5\336?\244p=\n\327\243\350?Nb\020X9\264\344?\254\034Zd;\337\353?\\\217\302\365(\\\343?;\337O\215\227n\332?\217\302\365(\\\217\342?`\345\320\"\333\371\346?#\333\371~j\274\334?\177j\274t\223\030\334?V\016-\262\235\357\337?7\211A`\345\320\346?\306K7\211A`\345?\256G\341z\024\256\347?\270\036\205\353Q\270\342?\033/\335$\006\201\341?\\\217\302\365(\\\343?\343\245\233\304 \260\342?\343\245\233\304 \260\342?\262\235\357\247\306K\337?\262\235\357\247\306K\337?\223\030\004V\016-\346?T\343\245\233\304 \340?\\\217\302\365(\\\343?E\266\363\375\324x\345?\\\217\302\365(\\\343?T\343\245\233\304 \340?7\211A`\345\320\346?+\207\026\331\316\367\343?{\024\256G\341z\340?\223\030\004V\016-\346?+\207\026\331\316\367\343?+\207\026\331\316\367\343?\\\217\302\365(\\\343?T\343\245\233\304 \340?V\016-\262\235\357\337?E\266\363\375\324x\345?J\014\002+\207\026\345?,\207\026\331\316\367\333?+\207\026\331\316\367\343?\254\034Zd;\337\353?\256G\341z\024\256\347?d;\337O\215\227\342?ffffff\346?\240\032/\335$\006\341?/\335$\006\201\225\333?\235\357\247\306K7\341?\350\373\251\361\322M\332?\033/\335$\006\201\341?\254\034Zd;\337\353?\331\316\367S\343\245\343?\260rh\221\355|\343?{\024\256G\341z\340?+\207\026\331\316\367\343?\366(\\\217\302\365\344?\010\254\034Zd;\337?\262\235\357\247\306K\337?ffffff\346?,\207\026\331\316\367\333?\376\324x\351&1\344?\256G\341z\024\256\347?/\335$\006\201\225\333?\256G\341z\024\256\347?Zd;\337O\215\337?\264\310v\276\237\032\343?\235\357\247\306K7\341?j\274t\223\030\004\336?\262\235\357\247\306K\337?{\024\256G\341z\340?x\351&1\010\254\334?\254\034Zd;\337\353?T\343\245\233\304 \340?\350\373\251\361\322M\332?\232\231\231\231\231\231\331?\270\036\205\353Q\270\342?\232\231\231\231\231\231\341?\356|?5^\272\345?\323Mb\020X9\340?\376\324x\351&1\344?R\270\036\205\353Q\340?\256G\341z\024\256\347?\376\324x\351&1\344?\331\316\367S\343\245\343?E\266\363\375\324x\345?d;\337O\215\227\342?#\333\371~j\274\334?\354Q\270\036\205\353\331?\260rh\221\355|\343?\256G\341z\024\256\347?\335$\006\201\225C\333?Nb\020X9\264\344?\240\032/\335$\006\341?\323Mb\020X9\340?Nb\020X9\264\344?\262\235\357\247\306K\337?x\351&1\010\254\334?\343\245\233\304 \260\342?\\\217\302\365(\\\343?\376\324x\351&1\344?R\270\036\205\353Q\340?D\213l\347\373\251\331?,\207\026\331\316\367\333?\223\030\004V\016-\346?\335$\006\201\225C\333?Zd;\337O\215\337?D\213l\347\373\251\331?\317\367S\343\245\233\334?7\211A`\345\320\346?\235\357\247\306K7\341?\354Q\270\036\205\353\331?\240\032/\335$\006\341?ffffff\346?\370S\343\245\233\304\340?\030\004V\016-\262\335?\254\034Zd;\337\353?Zd;\337O\215\337?\323Mb\020X9\340?\030\004V\016-\262\335?`\345\320\"\333\371\336?\234\304 \260rh\341?{\024\256G\341z\334?\016-\262\235\357\247\342?\356|?5^\272\345?\244p=\n\327\243\350?\270\036\205\353Q\270\342?E\266\363\375\324x\345?+\207\026\331\316\367\343?`\345\320\"\333\371\336?\010\254\034Zd;\337?\203\300\312\241E\266\333?q=\n\327\243p\335?{\024\256G\341z\340?\010\254\034Zd;\337?\356|?5^\272\345?\021\307\272\270\215\006\334?\234\304 \260rh\341?/\335$\006\201\225\333?J\014\002+\207\026\331?\333\371~j\274t\333?\217\302\365(\\\217\332?\016-\262\235\357\247\342?\177j\274t\223\030\334?Nb\020X9\264\344?\235\357\247\306K7\341?\235\357\247\306K7\341?7\211A`\345\320\346?\244p=\n\327\243\340?\274t\223\030\004V\342?\356|?5^\272\345?\034Zd;\337O\335?\235\357\247\306K7\341?\223\030\004V\016-\346?\235\357\247\306K7\341?\376e\367\344a\241\332?D\213l\347\373\251\331?\010\254\034Zd;\337?\260rh\221\355|\343?\350\373\251\361\322M\332?\235\357\247\306K7\341?\010\254\034Zd;\337?\256G\341z\024\256\347?i\221\355|?5\336?+\207\026\331\316\367\343?\343\245\233\304 \260\342?ffffff\346?+\207\026\331\316\367\343?{\024\256G\341z\334?Nb\020X9\264\344?\223\030\004V\016-\346?x\351&1\010\254\334?\262\235\357\247\306K\337?\244p=\n\327\243\340?\235\357\247\306K7\341?7\211A`\345\320\346?\264\310v\276\237\032\343?7\211A`\345\320\346?\333\371~j\274t\333?\264\310v\276\237\032\343?ffffff\346?\356|?5^\272\345?\323Mb\020X9\340?\312\241E\266\363\375\334?ffffff\346?d;\337O\215\227\342?\335$\006\201\225C\333?Nb\020X9\264\344?\034Zd;\337O\335?\323Mb\020X9\340?\343\245\233\304 \260\342?j\274t\223\030\004\336?\235\357\247\306K7\341?\235\357\247\306K7\341?\370S\343\245\233\304\340?\232\231\231\231\231\231\341?{\024\256G\341z\340?\270\036\205\353Q\270\342?Nb\020X9\264\344?\244p=\n\327\243\340?\223\030\004V\016-\346?=\n\327\243p=\332?\\\217\302\365(\\\343?R\270\036\205\353Q\340?1\010\254\034Zd\333?\244p=\n\327\243\330?\223\030\004V\016-\346?\254\034Zd;\337\353?\033/\335$\006\201\341?\256G\341z\024\256\347?\235\357\247\306K7\341?\254\034Zd;\337\353?\264\310v\276\237\032\343?7\211A`\345\320\346?\331\316\367S\343\245\343?\235\357\247\306K7\341?\343\245\233\304 \260\342?/\335$\006\201\225\333?#\333\371~j\274\334?d;\337O\215\227\342?\235\357\247\306K7\341?,\207\026\331\316\367\333?\262\235\357\247\306K\337?\030\004V\016-\262\335?\370S\343\245\233\304\340?\223\030\004V\016-\346?\\\217\302\365(\\\343?\030\004V\016-\262\335?\223\030\004V\016-\346?R\270\036\205\353Q\340?;\337O\215\227n\332?ffffff\346?\312\241E\266\363\375\334?,\207\026\331\316\367\333?\244p=\n\327\243\350?\234\304 \260rh\341?{\024\256G\341z\334?\260rh\221\355|\343?\235\357\247\306K7\341?\254\034Zd;\337\353?\010\254\034Zd;\337?x\351&1\010\254\334?\366(\\\217\302\365\344?;\337O\215\227n\332?\234\304 \260rh\341?`\345\320\"\333\371\346?\016-\262\235\357\247\342?R\270\036\205\353Q\340?\323Mb\020X9\340?\264\310v\276\237\032\343?\262\235\357\247\306K\337?\\\217\302\365(\\\343?\331\316\367S\343\245\343?\370S\343\245\233\304\340?{\024\256G\341z\340?\217\302\365(\\\217\342?c\177\331=yX\334?7\211A`\345\320\346?#\333\371~j\274\334?1\010\254\034Zd\333?\356|?5^\272\345?\244p=\n\327\243\350?1\010\254\034Zd\333?\235\357\247\306K7\341?}?5^\272I\334?R\270\036\205\353Q\340?\177j\274t\223\030\334?\244p=\n\327\243\340?\317\367S\343\245\233\334?\335$\006\201\225C\333?\235\357\247\306K7\341?E\266\363\375\324x\345?\270\036\205\353Q\270\342?\306K7\211A`\345?,\207\026\331\316\367\333?\244p=\n\327\243\350?\033/\335$\006\201\341?\262\235\357\247\306K\337?\030\004V\016-\262\335?\177j\274t\223\030\334?\333\371~j\274t\333?\010\254\034Zd;\337?\227n\022\203\300\312\331?\033/\335$\006\201\341?\376e\367\344a\241\332?1\010\254\034Zd\333?d;\337O\215\227\342?+\207\026\331\316\367\343?ffffff\342?\021\307\272\270\215\006\334?\256G\341z\024\256\347?\262\235\357\247\306K\337?\244p=\n\327\243\340?\223\030\004V\016-\346?+\207\026\331\316\367\343?,\207\026\331\316\367\333?\323Mb\020X9\340?\\\217\302\365(\\\343?\312\241E\266\363\375\334?\\\217\302\365(\\\343?\274t\223\030\004V\342?E\266\363\375\324x\331?\350\373\251\361\322M\332?{\024\256G\341z\340?Zd;\337O\215\337?7\211A`\345\320\346?E\266\363\375\324x\345?\254\034Zd;\337\353?\254\034Zd;\337\353?\270\036\205\353Q\270\342?\232\231\231\231\231\231\331?6^\272I\014\002\333?{\024\256G\341z\340?+\207\026\331\316\367\343?q=\n\327\243p\335?\030\004V\016-\262\335?`\345\320\"\333\371\346?Nb\020X9\264\344?\223\030\004V\016-\346?=\n\327\243p=\332?x\351&1\010\254\334?/\335$\006\201\225\333?T\343\245\233\304 \340?ffffff\346?J\014\002+\207\026\345?{\024\256G\341z\334?\376e\367\344a\241\332?,\207\026\331\316\367\333?\376\324x\351&1\344?\030\004V\016-\262\335?\240\032/\335$\006\341?1\010\254\034Zd\333?,\207\026\331\316\367\333?,\207\026\331\316\367\333?\323Mb\020X9\340?\254\034Zd;\337\353?1\010\254\034Zd\333?;\337O\215\227n\332?\343\245\233\304 \260\342?\234\304 \260rh\341?+\207\026\331\316\367\343?\350\373\251\361\322M\332?7\211A`\345\320\346?\016-\262\235\357\247\342?\223\030\004V\016-\346?7\211A`\345\320\346?c\177\331=yX\334?\262\235\357\247\306K\337?Zd;\337O\215\337?/\335$\006\201\225\333?}?5^\272I\334?\217\302\365(\\\217\342?/\335$\006\201\225\333?\033/\335$\006\201\341?A`\345\320\"\333\331?7\211A`\345\320\346?\244p=\n\327\243\340?d;\337O\215\227\342?`\345\320\"\333\371\346?,\207\026\331\316\367\333?=\n\327\243p=\332?\354Q\270\036\205\353\331?\317\367S\343\245\233\334?Zd;\337O\215\337?\244p=\n\327\243\340?\254\034Zd;\337\353?\235\357\247\306K7\341?+\207\026\331\316\367\343?\235\357\247\306K7\341?\235\357\247\306K7\331?\232\231\231\231\231\231\331?\234\304 \260rh\341?\227n\022\203\300\312\331?\223\030\004V\016-\332?\227n\022\203\300\312\331?\323Mb\020X9\340?ffffff\346?\264\310v\276\237\032\343?\331\316\367S\343\245\343?,\207\026\331\316\367\333?c\177\331=yX\334?1\010\254\034Zd\333?+\207\026\331\316\367\343?\306K7\211A`\345?\254\034Zd;\337\353?\312\241E\266\363\375\334?\270\036\205\353Q\270\342?\232\231\231\231\231\231\341?\235\357\247\306K7\341?\356|?5^\272\345?x\351&1\010\254\334?"
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/normalize_element/component_5"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_DOUBLE
            tensor_shape {
              dim {
                size: 400
              }
            }
            tensor_content: "ffffff-@3333334@fffff\3461@3333333@333333)@\315\314\314\314\314\314-@\315\314\314\314\314L2@\232\231\231\231\231\0310@3333334@\232\231\231\231\231\0314@3333334@ffffff2@3333334@\000\000\000\000\000\000*@ffffff-@ffffff-@3333333@3333334@3333334@\000\000\000\000\000\2002@\315\314\314\314\314\3140@3333333@3333334@3333334@3333334@3333333@\315\314\314\314\314\3141@ffffff-@3333334@3333334@\315\314\314\314\314\3141@\315\314\314\314\314\3141@3333334@ffffff1@ffffff-@3333334@ffffff-@ffffff1@3333334@3333335@3333334@3333334@3333335@3333335@ffffff-@ffffff1@3333333@3333334@3333334@33333\2632@3333335@ffffff-@3333334@\232\231\231\231\231\0313@3333334@3333334@\232\231\231\231\231\0313@\000\000\000\000\000\0005@\315\314\314\314\314L2@\315\314\314\314\314\3141@ffffff-@3333334@\232\231\231\231\231\0314@3333334@3333335@3333334@\315\314\314\314\314\3141@\232\231\231\231\231\2312@3333334@ffffff.@3333334@3333334@\232\231\231\231\231\0313@3333334@\232\231\231\231\231\2313@3333334@\000\000\000\000\000\0005@\315\314\314\314\314\3141@\232\231\231\231\231\2312@3333334@fffff\3461@ffffff-@ffffff1@3333333@\232\231\231\231\231\231.@3333333@ffffff0@3333334@ffffff1@3333334@\232\231\231\231\231\2310@3333334@3333334@3333334@3333334@\232\231\231\231\231\0313@\000\000\000\000\000\2002@\232\231\231\231\231\2310@\232\231\231\231\231\0314@3333334@\000\000\000\000\000\0003@\000\000\000\000\000\000*@3333334@ffffff1@\000\000\000\000\000\000*@\232\231\231\231\231\2312@fffff\3461@3333334@ffffff-@3333334@\232\231\231\231\231\2310@333333+@\000\000\000\000\000\0000@3333334@\000\000\000\000\000\0003@\232\231\231\231\231\2313@333333/@\232\231\231\231\231\2311@3333334@\000\000\000\000\000\0005@\232\231\231\231\231\2310@3333334@3333334@ffffff.@\232\231\231\231\231\2312@ffffff-@\232\231\231\231\231\2313@ffffff1@3333332@\232\231\231\231\231\2311@ffffff2@\000\000\000\000\000\0002@3333334@3333334@3333334@3333333@3333334@3333335@\232\231\231\231\231\2311@\315\314\314\314\314\3141@\232\231\231\231\231\0310@fffff\3460@3333334@\315\314\314\314\314\3141@3333334@fffff\3460@ffffff2@\232\231\231\231\231\0313@ffffff0@33333\2633@ffffff-@3333334@\315\314\314\314\314\3140@\000\000\000\000\000\000*@\000\000\000\000\000\0005@\000\000\000\000\000\0005@3333334@fffff\3464@\000\000\000\000\000\0005@3333334@33333\2632@\000\000\000\000\000\0005@3333334@\000\000\000\000\000\0005@ffffff-@333333/@\315\314\314\314\314\3141@\232\231\231\231\231\0314@3333333@\000\000\000\000\000\0005@\315\314\314\314\314\3141@3333334@ffffff2@3333335@3333334@3333334@3333335@\000\000\000\000\000\0002@\000\000\000\000\000\000*@3333334@fffff\3461@\232\231\231\231\231\2312@fffff\3464@\000\000\000\000\000\0005@3333334@3333334@3333334@fffff\3461@3333334@3333334@3333334@ffffff1@33333\2633@3333334@\232\231\231\231\231\0313@\000\000\000\000\000\0003@\000\000\000\000\000\000*@33333\2632@ffffff1@3333334@\315\314\314\314\314\3141@\000\000\000\000\000\0005@\000\000\000\000\000\0005@ffffff.@ffffff0@3333334@3333333@\000\000\000\000\000\000*@fffff\3464@3333334@\000\000\000\000\000\0001@ffffff-@\232\231\231\231\231\2310@\232\231\231\231\231\2310@3333332@3333334@ffffff-@\315\314\314\314\314\3141@3333334@\000\000\000\000\000\0005@ffffff-@3333334@3333334@3333334@\000\000\000\000\000\0005@3333334@\232\231\231\231\231\0313@\000\000\000\000\000\2002@\232\231\231\231\231\0313@\000\000\000\000\000\0005@ffffff.@\232\231\231\231\231\2312@\232\231\231\231\231\2312@ffffff.@3333334@ffffff-@\232\231\231\231\231\2312@3333334@\232\231\231\231\231\2310@3333333@3333334@33333\2633@\000\000\000\000\000\0000@3333334@ffffff2@\000\000\000\000\000\0002@\232\231\231\231\231\0314@\000\000\000\000\000\0005@ffffff-@\315\314\314\314\314\3141@fffff\3461@3333334@3333333@ffffff2@3333334@3333334@\232\231\231\231\231\2310@ffffff1@3333334@\232\231\231\231\231\2312@ffffff-@3333334@ffffff.@3333334@3333334@\315\314\314\314\314\314-@3333334@\000\000\000\000\000\2002@\232\231\231\231\231\2310@3333334@3333334@\232\231\231\231\231\2310@\000\000\000\000\000\0005@\000\000\000\000\000\000/@\232\231\231\231\231\2310@\315\314\314\314\314\3140@fffff\3464@\232\231\231\231\231\2311@\000\000\000\000\000\0003@\000\000\000\000\000\0005@3333334@3333333@3333334@\000\000\000\000\000\0000@3333334@\315\314\314\314\314\3141@\232\231\231\231\231\2312@\232\231\231\231\231\2312@\315\314\314\314\314\3140@33333\2633@\315\314\314\314\314\3141@fffff\3461@\315\314\314\314\314\3141@ffffff-@\232\231\231\231\231\2310@\232\231\231\231\231\0313@3333335@\000\000\000\000\000\000*@fffff\3460@3333334@\232\231\231\231\231\2312@fffff\3464@3333334@3333335@33333\2632@ffffff1@ffffff-@33333\2633@ffffff-@\000\000\000\000\000\0005@\232\231\231\231\231\0310@333333.@3333334@\232\231\231\231\231\2313@3333334@3333334@ffffff-@ffffff-@3333333@\232\231\231\231\231\231-@\315\314\314\314\314\314,@3333334@3333335@fffff\3460@3333332@3333334@\000\000\000\000\000\000*@3333334@\232\231\231\231\231\0315@fffff\3461@\232\231\231\231\231\0313@ffffff1@3333334@3333334@\000\000\000\000\000\0002@\232\231\231\231\231\2312@33333\2632@3333334@3333332@3333334@\315\314\314\314\314L2@33333\2632@ffffff.@ffffff1@ffffff-@\232\231\231\231\231\2310@\000\000\000\000\000\0006@3333334@ffffff2@3333335@3333333@3333334@3333334@3333334@3333334@\315\314\314\314\314\314-@\315\314\314\314\314\3141@\232\231\231\231\231\2313@\232\231\231\231\231\0313@\315\314\314\314\314\3142@3333334@\232\231\231\231\231\0313@\315\314\314\314\314\3141@333333)@3333334@fffff\3464@\232\231\231\231\231\0313@3333334@ffffff.@\315\314\314\314\314L1@\232\231\231\231\231\2310@\232\231\231\231\231\2311@\232\231\231\231\231\2313@fffff\3464@ffffff-@\232\231\231\231\231\231.@3333335@\000\000\000\000\000\0005@\315\314\314\314\314\314/@\232\231\231\231\231\231-@ffffff2@\000\000\000\000\000\0001@fffff\3462@\000\000\000\000\000\0001@ffffff1@3333334@3333334@3333334@33333\2632@\315\314\314\314\314\314-@\232\231\231\231\231\2310@3333335@3333334@ffffff-@33333\2633@3333333@ffffff0@\000\000\000\000\000\0005@3333334@fffff\3461@"
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/normalize_element/component_6"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_DOUBLE
            tensor_shape {
              dim {
                size: 400
              }
            }
            tensor_content: "-\262\235\357\247F\031@@5^\272I\214\027@\024\256G\341z\024\033@\362\322Mb\020\330\027@\177j\274t\223\030\035@\254\034Zd;\337\033@\357\247\306K7\211\027@!\260rh\221\355\033@\350\373\251\361\322\315\032@7\211A`\345\320\025@\034Zd;\337\317\025@\021X9\264\310v\032@d;\337O\215\227\031@t\223\030\004V\016\034@\317\367S\343\245\233\030@\022\203\300\312\241\305\033@_\272I\014\002\253\031@sh\221\355|\277\031@\217\302\365(\\\217!@\205\353Q\270\036\205\032@\312\241E\266\363\375\027@w\276\237\032/\335\027@Nb\020X94\031@\000\000\000\000\000\200\027@\306K7\211A\340\030@\210\026\331\316\367\323\026@\006\201\225C\213\354\026@\000\000\000\000\000\000\031@\332\316\367S\343\245\030@\303\365(\\\217B\026@\273I\014\002+\007\034@\037\205\353Q\270\236\031@\022\203\300\312\241\305\030@\332\316\367S\343\245\035@\201\225C\213lg\030@\177j\274t\223\230\032@\333\371~j\274\364\035@X9\264\310v\276\036@=\n\327\243p\275\030@\370S\343\245\233\304\027@\024\256G\341z\224\027@:\264\310v\276\037\026@\327\243p=\nW\031@\241E\266\363\375\324\031@6^\272I\014\202\027@\024\256G\341z\024 @w\276\237\032/]\027@\223\030\004V\016-\033@;\337O\215\227n\026@\345\320\"\333\371~\027@\350\373\251\361\322M\031@\004V\016-\262\235\025@\022\203\300\312\241E\027@j\274t\223\030\204\027@\024\256G\341z\024\026@,\207\026\331\316\367\030@\254\034Zd;\337\032@H\341z\024\256G\026@7\211A`\345P\032@/\335$\006\201\025\030@Nb\020X9\264\023@\354Q\270\036\205\353\033@;\337O\215\227\356\027@=\n\327\243p=\031@}?5^\272I\027@\274t\223\030\004\326\030@\037\205\353Q\270\236\034@\004V\016-\262\235\025@\277\237\032/\335$\026@T\343\245\233\304 \033@w\276\237\032/\335\030@6^\272I\014\202\026@\254\034Zd;_\026@w\276\237\032/]\031@\241E\266\363\375T\030@\273I\014\002+\007\027@m\347\373\251\361\322\025@=\n\327\243p\275\034@\252\361\322Mb\220\027@\335$\006\201\225C\031@\277\237\032/\335$\027@?5^\272I\014\024@\006\201\225C\213\354\027@d;\337O\215\227\034@&1\010\254\034Z\034@\256G\341z\024\256\026@\312\241E\266\363}\031@#\333\371~j\274\031@j\274t\223\030\204\033@\010\254\034Zd\273\032@\303\365(\\\217B\031@\317\367S\343\245\233\030@\341z\024\256G\341\023@\266\363\375\324xi\030@\215\227n\022\203@\035@j\274t\223\030\004\030@\217\302\365(\\\017\030@\303\365(\\\217B\032@\254\034Zd;_\024@\274t\223\030\004\326\031@_\272I\014\002\253\030@m\347\373\251\361\322\034@\000\000\000\000\000\000\033@X9\264\310v~ @\234\304 \260rh!@\356|?5^\272\030@\362\322Mb\020\330\030@\241E\266\363\375T\033@\000\000\000\000\000\300 @\201\225C\213l\347\016@}?5^\272I\026@\375\324x\351&\261\037@6^\272I\014\202\030@\037\205\353Q\270\236\031@`\345\320\"\333y\032@sh\221\355|?\031@\321\"\333\371~j\032@\324x\351&1\010\033@\201\225C\213l\347\027@\344\245\233\304 0\030@\274t\223\030\004\326\030@X9\264\310v>\034@\277\237\032/\335$\024@\240\032/\335$\206\026@\363\375\324x\351&\032@\205\353Q\270\036\205\030@)\\\217\302\365\250\031@\016-\262\235\357\247\030@\370S\343\245\233\304\031@c\020X9\264\310\032@\n\327\243p=\212\032@H\341z\024\256G\037@\037\205\353Q\270\236\027@\235\357\247\306K7\025@\246\233\304 \260r\025@\317\367S\343\245\033\030@\256G\341z\024.\032@\323Mb\020X\271\031@\345\320\"\333\371~\033@\217\302\365(\\\017\037@\\\217\302\365(\\\032@\372~j\274t\223\030@\254\034Zd;\337\027@m\347\373\251\361R\037@\210\026\331\316\367\323\027@:\264\310v\276\037\030@d;\337O\215\027\030@;\337O\215\227n\030@;\337O\215\227n\030@\366(\\\217\302\365\031@q=\n\327\243p\036@\226C\213l\347{\027@\366(\\\217\302u\030@\262\235\357\247\306\313 @\374\251\361\322Mb\030@\030\004V\016-\262\032@\337O\215\227n\222\035@\234\304 \260r\350\032@\254\034Zd;_\032@/\335$\006\201\225\027@\312\241E\266\363\375\033@\305 \260rh\221\030@\234\304 \260rh\027@\374\251\361\322Mb\030@\266\363\375\324xi\037@333333\033@\372~j\274t\223\030@\016-\262\235\357\247\025@\205\353Q\270\036\205\032@L7\211A`e\026@\354Q\270\036\205\353\033@\033/\335$\006\001\031@L7\211A`e\033@\022\203\300\312\241\305\026@33333\263\031@\317\367S\343\245\033\025@\264\310v\276\237\232\030@\000\000\000\000\000\200\032@\034Zd;\337\317\034@\254\034Zd;_\031@\037\205\353Q\270\036\030@\000\000\000\000\000\200\031@\321\"\333\371~\352\030@\215\227n\022\203@\027@\370S\343\245\233D\031@\234\304 \260rh\033@\232\231\231\231\231\031\032@\252\361\322Mb\020\032@,\207\026\331\316w\026@Nb\020X94\030@\003+\207\026\331\316\030@;\337O\215\227n\035@i\221\355|?\265\027@\205\353Q\270\036\205\023@{\024\256G\341z\027@i\221\355|?5\031@\024\256G\341z\024\036@\270\036\205\353Q\270\031@E\266\363\375\324x\032@O\215\227n\022\003\030@\311v\276\237\032\257\031@\262\235\357\247\306\313\027@\\\217\302\365(\334\027@@5^\272I\014\030@\350\373\251\361\322\315\027@\332\316\367S\343%\030@Nb\020X9\264\027@\003+\207\026\331N\035@H\341z\024\256\307\030@\246\233\304 \260\362\027@\266\363\375\324x\351\032@i\221\355|?5\037@\311v\276\237\032/\032@\006\201\225C\213\354\031@\354Q\270\036\205\353\030@L7\211A`e\025@\351&1\010\254\234\025@\222\355|?5^\030@\362\322Mb\020\330\031@\234\304 \260r\350\026@\n\327\243p=\n\032@T\343\245\233\304\240\032@X9\264\310v\276\027@\235\357\247\306K7\025@}?5^\272I\030@i\221\355|?\265\025@\201\225C\213l\347\030@t\223\030\004V\216\031@\362\322Mb\020\330\027@=\n\327\243p\275\027@\323Mb\020X9\032@\327\243p=\n\327\027@\366(\\\217\302\365\030@6^\272I\014\202\031@\372~j\274t\023\022@\321\"\333\371~j\027@\006\201\225C\213l\027@\374\251\361\322M\342\031@\024\256G\341z\024\030@\303\365(\\\217B\030@\317\367S\343\245\233\022@\021X9\264\310\366\026@\203\300\312\241E\266\032@6^\272I\014\202\030@\016-\262\235\357\247\027@\363\375\324x\351\246\030@;\337O\215\227\356\027@\366(\\\217\302\365\027@J\014\002+\207\026\025@\351&1\010\254\234\030@\177j\274t\223\230\025@\003+\207\026\331\316\027@{\024\256G\341\372\030@\027\331\316\367S\343\027@\277\237\032/\335\244\031@\333\371~j\274t\030@V\016-\262\235o\027@\201\225C\213l\347\032@\037\205\353Q\270\236\024@\332\316\367S\343\245\025@\235\357\247\306K\267\037@V\016-\262\235\357\031@\344\245\233\304 \260\030@q=\n\327\243\360\027@_\272I\014\002\253\030@\024\256G\341z\224\036@\345\320\"\333\371\376\032@\226C\213l\347{\030@J\014\002+\207\226\033@T\343\245\233\304 \033@\033/\335$\006\001\031@\337O\215\227n\222\031@\350\373\251\361\322\315\026@\021X9\264\310\366\034@D\213l\347\373\251\031@%\006\201\225C\013\032@L7\211A`\345\031@!\260rh\221\355\031@\234\304 \260r\350\032@&1\010\254\034\332\026@\254\034Zd;\337\033@\223\030\004V\016-\027@:\264\310v\276\237\023@)\\\217\302\365(\027@\r\002+\207\026\331\030@\363\375\324x\351\246\027@n\022\203\300\312!\027@\335$\006\201\225\303\036@&1\010\254\034\332\027@\250\306K7\211\301\033@\321\"\333\371~j\026@\345\320\"\333\371\376\034@Nb\020X9\264\030@\304 \260rh\021 @\006\201\225C\213l\032@\006\201\225C\213l\027@!\260rh\221m\027@\362\322Mb\020\230 @m\347\373\251\361\322\026@:\264\310v\276\237\031@\350\373\251\361\322M\031@\037\205\353Q\270\236\031@\004V\016-\262\235\031@\372~j\274t\023\024@!\260rh\221\355\030@\240\032/\335$\206\032@\000\000\000\000\000\200\027@w\276\237\032/\335\027@\317\367S\343\245\233\031@\037\205\353Q\270\036\030@\332\316\367S\343%\027@\335$\006\201\225C\033@`\345\320\"\333y\027@\033/\335$\006\201\031@X9\264\310v\276\031@\205\353Q\270\036\205\031@\274t\223\030\004\326\026@X9\264\310v\276\024@\217\302\365(\\\217\025@\341z\024\256Ga\031@\000\000\000\000\000\200\037@#\333\371~j<\030@7\211A`\345\320\031@\241E\266\363\375T\031@\345\320\"\333\371\376\030@\261rh\221\355|\014@\241E\266\363\375T\035@\261rh\221\355\374\026@Zd;\337O\215\027@\356|?5^\272\026@\210\026\331\316\367\323\033@\325x\351&1\210 @&1\010\254\034\332\026@Zd;\337O\215\020@\026\331\316\367S# @\321\"\333\371~j\034@\277\237\032/\335$\031@\252\361\322Mb\020\034@\362\322Mb\020\330\030@@5^\272I\014\027@\341z\024\256Ga\032@\004V\016-\262\035\031@\333\371~j\274\364\032@\362\322Mb\020X\030@\352&1\010\254\234\023@;\337O\215\227n\031@X9\264\310v\276\027@1\010\254\034Zd\031@R\270\036\205\353\321\026@\261rh\221\355|\031@\214l\347\373\251q\033@\241E\266\363\375\324\030@sh\221\355|?\031@\010\254\034Zd\273\026@\033/\335$\006\201\031@sh\221\355|?\033@_\272I\014\002\253\031@\241E\266\363\375\324\026@\354Q\270\036\205k\026@d;\337O\215\227\027@&1\010\254\034\332\026@\010\254\034Zd\273\031@\261rh\221\355|\027@!\260rh\221m\034@\037\205\353Q\270\236\032@@5^\272I\214\030@\300\312\241E\266s\026@\'1\010\254\034\332\023@=\n\327\243p\275\034@\324x\351&1\210\031@\303\365(\\\217B\031@\350\373\251\361\322M\033@\323Mb\020X\271\031@\362\322Mb\020X\027@\261rh\221\355|\030@\315\314\314\314\314L\032@@5^\272I\214\026@\215\227n\022\203@\027@7\211A`\345\320\035@D\213l\347\373)\034@\370S\343\245\233D\032@fffff\346\033@O\215\227n\022\203\027@\n\327\243p=\212\034@\006\201\225C\213\254 @F\266\363\375\324x\021@P\215\227n\022\203\022@\321\"\333\371~\352\030@d;\337O\215\027\031@H\341z\024\256G\037@\341z\024\256Ga\030@\273I\014\002+\007\027@Zd;\337O\215\020@\254\034Zd;\337\025@\024\256G\341z\224\030@\372~j\274t\023\030@Zd;\337O\215\027@\315\314\314\314\314\314\027@\022\203\300\312\241\305\030@\223\030\004V\016\255\030@"
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/normalize_element/component_7"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
                size: 400
              }
            }
            tensor_contentt\001\000\000\000\000\000\000\376\000\000\000\000\000\000\000\232\002\000\000\000\000\000\0003\001\000\000\000\000\000\000%\001\000\000\000\000\000\000\232\002\000\000\000\000\000\000\232\002\000\000\000\000\000\0007\001\000\000\000\000\000\000\337\000\000\000\000\000\000\000\223\001\000\000\000\000\000\000\037\001\000\000\000\000\000\0003\001\000\000\000\000\000\000\016\001\000\000\000\000\000\000r\001\000\000\000\000\000\0000\001\000\000\000\000\000\000\024\001\000\000\000\000\000\000\232\002\000\000\000\000\000\000\232\002\000\000\000\000\000\000\232\002\000\000\000\000\000\000\207\001\000\000\000\000\000\000\232\002\000\000\000\000\000\000\265\001\000\000\000\000\000\000rtf`f
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/normalize_element/component_8"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_DOUBLE
            tensor_shape {
              dim {
                size: 400
              }
            }
            tensor_content
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/normalize_element/component_9"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_DOUBLE
            tensor_shape {
              dim {
                size: 400
              }
            }
            tensor_content: "\315\314\314\314\314\3147@ffffff)@\232\231\231\231\231\231:@33333\2635@\315\314\314\314\314LA@33333\263A@\232\231\231\231\231\2312@\315\314\314\314\314\214@@ffffff0@ffffff.@\000\000\000\000\000\000\024@ffffff<@\000\000\000\000\000\0009@33333\263>@333333/@fffff\246D@3333338@3333337@fffff\3465@\232\231\231\231\231\231:@ffffff7@33333\2638@\315\314\314\314\314\314-@\000\000\000\000\000\000I@ffffff2@\315\314\314\314\314\3145@\315\314\314\314\314L3@\000\000\000\000\000\000;@\232\231\231\231\231\231*@ffffff\'@\232\231\231\231\231\2317@\000\000\000\000\000\0006@\232\231\231\231\231\231+@33333\263?@\000\000\000\000\000\0009@\315\314\314\314\314\314+@\000\000\000\000\000\000I@\232\231\231\231\231YG@333333,@ffffff1@\000\000\000\000\000\2002@\000\000\000\000\000\000!@\232\231\231\231\231\0312@3333333@\315\314\314\314\314\3147@\315\314\314\314\314\314B@\000\000\000\000\000\0004@\232\231\231\231\231\231*@fffff\346;@\315\314\314\314\314L4@\232\231\231\231\231\2313@\232\231\231\231\231\2313@\000\000\000\000\000\000%@\315\314\314\314\314\3142@\232\231\231\231\231\231(@\000\000\000\000\000\0007@333333:@333333+@\232\231\231\231\231\0318@3333333@333333-@\315\314\314\314\314\314=@\232\231\231\231\231\0314@33333\2634@ffffff2@ffffff5@33333\363B@\315\314\314\314\314L3@\232\231\231\231\231\231&@\000\000\000\000\000\000@@\000\000\000\000\000\000I@\232\231\231\231\231\231)@\232\231\231\231\231\2311@\315\314\314\314\314\314-@3333336@\000\000\000\000\000\000.@3333334@\232\231\231\231\231YA@\232\231\231\231\231\2316@3333336@\000\000\000\000\000\0004@\232\231\231\231\231\231.@\315\314\314\314\314L8@fffff\246B@\232\231\231\231\231\031@@\232\231\231\231\231\0317@\000\000\000\000\000\0007@\315\314\314\314\314\314\034@\000\000\000\000\000\200;@\000\000\000\000\000\000I@\232\231\231\231\231\2318@ffffff!@\000\000\000\000\000\000I@\315\314\314\314\314\314*@\000\000\000\000\000\000.@\315\314\314\314\314L4@\000\000\000\000\000\2006@\315\314\314\314\314\3148@333333 @\232\231\231\231\231\231\'@fffff\3466@\000\000\000\000\000@B@33333\2637@fffff&H@\000\000\000\000\000\000I@\000\000\000\000\000\0009@33333\2638@333333,@\000\000\000\000\000\000I@\232\231\231\231\231\0317@\232\231\231\231\231\0317@\000\000\000\000\000\000I@fffff\3467@\000\000\000\000\000\000)@fffff\3467@\000\000\000\000\000\0007@\232\231\231\231\231\031=@333333@@ffffff)@\232\231\231\231\231\231-@3333337@\000\000\000\000\000\0009@ffffff#@\000\000\000\000\000\2000@ffffff8@\232\231\231\231\231\231+@\000\000\000\000\000\0009@33333\2635@fffff\3466@fffff\3467@\315\314\314\314\314\3146@fffff\346E@\232\231\231\231\231\2314@\315\314\314\314\314\314$@\315\314\314\314\314\3144@\315\314\314\314\314\3140@\315\314\314\314\314\314%@\000\000\000\000\000\0002@333333?@fffff\346C@\000\000\000\000\000\0006@\315\314\314\314\314\3143@33333\2632@\000\000\000\000\000\000I@\232\231\231\231\231\231!@ffffff3@ffffff3@\315\314\314\314\314L8@fffff\3465@fffff\3466@fffff&E@\232\231\231\231\231\2314@\000\000\000\000\000\2004@ffffffH@3333332@\000\000\000\000\000\0005@\315\314\314\314\314\3141@\000\000\000\000\000\200;@ffffff6@\232\231\231\231\231\231 @33333\263@@ffffff.@333333\031@\000\000\000\000\000\000+@\000\000\000\000\000@H@\232\231\231\231\231\031?@\232\231\231\231\231\031B@\000\000\000\000\000\000\034@fffff\346;@\315\314\314\314\314\314+@\232\231\231\231\231\231B@333333)@333333<@3333330@\232\231\231\231\231\0310@\315\314\314\314\314\314\034@\315\314\314\314\314\3141@ffffff<@fffff\346@@\315\314\314\314\314\314\034@\232\231\231\231\231\2310@\232\231\231\231\231\031<@ffffff3@\232\231\231\231\231\2310@\000\000\000\000\000\2003@\000\000\000\000\000\200;@333333,@\232\231\231\231\231\0317@3333331@3333337@\315\314\314\314\314\314%@\000\000\000\000\000\200?@\232\231\231\231\231\2313@ffffff$@\000\000\000\000\000\0006@\315\314\314\314\314\3148@\315\314\314\314\314\214E@33333\263<@\232\231\231\231\231\031>@\232\231\231\231\231\0313@\232\231\231\231\231\2315@ffffff4@\232\231\231\231\231\2313@fffff\3466@\000\000\000\000\000\2005@\232\231\231\231\231\0315@\000\000\000\000\000\2008@\000\000\000\000\000\000?@33333\2635@ffffff\026@\232\231\231\231\231\031>@\000\000\000\000\000\000I@ffffff=@33333\2637@\232\231\231\231\231\0314@\232\231\231\231\231\231 @\315\314\314\314\314\314*@33333\2632@333333#@3333332@\315\314\314\314\314L7@3333331@\000\000\000\000\000\000+@\000\000\000\000\000\000(@\000\000\000\000\000\000-@\232\231\231\231\231\231+@\000\000\000\000\000\2004@fffff\3467@\000\000\000\000\000\2004@\232\231\231\231\231\0317@\315\314\314\314\314\314=@33333\2635@3333339@\000\000\000\000\000\000.@\000\000\000\000\000\000\034@33333\2636@\232\231\231\231\231\0315@333333*@3333337@\315\314\314\314\314\3146@\000\000\000\000\000\000%@33333\2632@\232\231\231\231\231\231<@33333\2636@\315\314\314\314\314\3141@ffffff5@333333+@\000\000\000\000\000\2001@333333*@\232\231\231\231\231\231=@\315\314\314\314\314\314,@\000\000\000\000\000\0003@ffffff7@\315\314\314\314\314L4@33333\2630@\232\231\231\231\231\0313@\232\231\231\231\231\2316@\000\000\000\000\000\000=@\315\314\314\314\314L0@33333\2637@\000\000\000\000\000\000I@33333\2630@\232\231\231\231\231\031;@\000\000\000\000\000\0003@fffff\3463@\000\000\000\000\000\000G@\315\314\314\314\314\314*@3333336@\000\000\000\000\000\0006@\000\000\000\000\000\000\036@fffff\3463@33333\2637@333333*@\232\231\231\231\231Y@@\232\231\231\231\231\2317@\000\000\000\000\000\0009@\315\314\314\314\314\3143@\232\231\231\231\231\031=@\000\000\000\000\000\000<@ffffff)@\315\314\314\314\314\314$@\315\314\314\314\314L2@\232\231\231\231\231\231+@\315\314\314\314\314L4@\315\314\314\314\314\3141@\315\314\314\314\314\3142@\000\000\000\000\000\2006@\232\231\231\231\231\231A@33333\2633@\232\231\231\231\231\231:@ffffff:@33333\263A@3333335@\000\000\000\000\000\000I@\315\314\314\314\314L7@\315\314\314\314\314L1@\232\231\231\231\231\231*@\000\000\000\000\000\000I@\232\231\231\231\231\0311@\232\231\231\231\231\0311@ffffff8@\232\231\231\231\231\2312@333333(@\315\314\314\314\314\314,@3333335@\232\231\231\231\231\0319@ffffff1@\000\000\000\000\000\0000@\315\314\314\314\314L6@\315\314\314\314\314\314\'@ffffff3@\232\231\231\231\231\231?@\000\000\000\000\000\2003@\232\231\231\231\231\0317@\232\231\231\231\231\231,@333333*@ffffff3@\315\314\314\314\314\3141@33333\2633@\000\000\000\000\000\2006@\000\000\000\000\000\000I@\232\231\231\231\231\2314@\232\231\231\231\231\0311@\232\231\231\231\231\2316@\232\231\231\231\231\2314@\000\000\000\000\000\200;@\000\000\000\000\000\000B@\000\000\000\000\000\000!@fffff\3462@\315\314\314\314\314L3@\232\231\231\231\231\231=@ffffffF@333333.@\315\314\314\314\314\314\'@\232\231\231\231\231YC@\000\000\000\000\000\200@@ffffff5@\000\000\000\000\000\000I@\000\000\000\000\000\0009@\315\314\314\314\314\3145@\315\314\314\314\314\314>@\000\000\000\000\000\0004@\000\000\000\000\000\200>@\000\000\000\000\000\0008@\232\231\231\231\231\231\'@3333336@\232\231\231\231\231\2314@\000\000\000\000\000\000-@3333330@\000\000\000\000\000\0007@\000\000\000\000\000\200<@ffffff\'@3333335@\000\000\000\000\000\000\024@33333\2631@\315\314\314\314\314\214A@\232\231\231\231\231\2316@\000\000\000\000\000\2002@\000\000\000\000\000\2002@3333331@\232\231\231\231\231\0314@\000\000\000\000\000\2008@ffffff4@\315\314\314\314\314L>@ffffff.@\315\314\314\314\314L3@ffffff/@fffff\3465@33333sA@33333\2638@\315\314\314\314\314L6@\315\314\314\314\314\214@@\232\231\231\231\231\2318@\000\000\000\000\000\2003@\000\000\000\000\000\2005@\000\000\000\000\000\0008@\232\231\231\231\231\231,@\000\000\000\000\000\000-@\000\000\000\000\000\000F@\000\000\000\000\000\000=@\315\314\314\314\314\3147@33333sA@\000\000\000\000\000\0006@33333s@@\232\231\231\231\231\331D@\232\231\231\231\231\231!@fffff\3461@ffffff5@\232\231\231\231\231\0318@33333\263F@\232\231\231\231\231\0314@333333/@\232\231\231\231\231\231+@333333/@\315\314\314\314\314L7@3333335@\315\314\314\314\314L7@ffffff*@\000\000\000\000\000\000&@\315\314\314\314\314L9@"
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/TensorSliceDataset"
      op: "TensorSliceDataset"
      input: "OptimizeDataset/normalize_element/component_0:output:0"
      input: "OptimizeDataset/normalize_element/component_1:output:0"
      input: "OptimizeDataset/normalize_element/component_2:output:0"
      input: "OptimizeDataset/normalize_element/component_3:output:0"
      input: "OptimizeDataset/normalize_element/component_4:output:0"
      input: "OptimizeDataset/normalize_element/component_5:output:0"
      input: "OptimizeDataset/normalize_element/component_6:output:0"
      input: "OptimizeDataset/normalize_element/component_7:output:0"
      input: "OptimizeDataset/normalize_element/component_8:output:0"
      input: "OptimizeDataset/normalize_element/component_9:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_INT64
            type: DT_DOUBLE
            type: DT_DOUBLE
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/count"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/RepeatDataset"
      op: "RepeatDataset"
      input: "OptimizeDataset/TensorSliceDataset:handle:0"
      input: "OptimizeDataset/count:output:0"
      device: "/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_INT64
            type: DT_DOUBLE
            type: DT_DOUBLE
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/batch_size"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 128
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/drop_remainder"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_BOOL
            tensor_shape {
            }
            bool_val: false
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/BatchDatasetV2"
      op: "BatchDatasetV2"
      input: "OptimizeDataset/RepeatDataset:handle:0"
      input: "OptimizeDataset/batch_size:output:0"
      input: "OptimizeDataset/drop_remainder:output:0"
      device: "/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_INT64
            type: DT_DOUBLE
            type: DT_DOUBLE
          }
        }
      }
      attr {
        key: "parallel_copy"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "OptimizeDataset"
      op: "OptimizeDataset"
      input: "OptimizeDataset/BatchDatasetV2:handle:0"
      input: "optimizations:output:0"
      device: "/device:CPU:0"
      attr {
        key: "optimization_configs"
        value {
          list {
            s: "map_vectorization:use_choose_fastest:false"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_INT64
            type: DT_DOUBLE
            type: DT_DOUBLE
          }
        }
      }
    }
    node_def {
      name: "ModelDataset"
      op: "ModelDataset"
      input: "OptimizeDataset:handle:0"
      device: "/device:CPU:0"
      attr {
        key: "algorithm"
        value {
          i: 0
        }
      }
      attr {
        key: "cpu_budget"
        value {
          i: 0
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_INT64
            type: DT_DOUBLE
            type: DT_DOUBLE
          }
        }
      }
    }
    ret {
      key: "modeldataset"
      value: "ModelDataset:handle:0"
    }
    attr {
      key: "_disable_call_shape_inference"
      value {
        b: true
      }
    }
  }
  function {
    signature {
      name: "zero_fraction_cond_false_14076"
      input_arg {
        name: "count_nonzero_notequal_zero_fraction_readvariableop"
        type: DT_FLOAT
      }
      output_arg {
        name: "count_nonzero_nonzero_count"
        type: DT_INT64
      }
    }
    node_def {
      name: "count_nonzero/zeros"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/NotEqual"
      op: "NotEqual"
      input: "count_nonzero_notequal_zero_fraction_readvariableop"
      input: "count_nonzero/zeros:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "count_nonzero/Cast"
      op: "Cast"
      input: "count_nonzero/NotEqual:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/nonzero_count"
      op: "Sum"
      input: "count_nonzero/Cast:y:0"
      input: "count_nonzero/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    ret {
      key: "count_nonzero_nonzero_count"
      value: "count_nonzero/nonzero_count:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
  }
  function {
    signature {
      name: "linear_zero_fraction_total_zero_zero_count_6_false_13980"
      input_arg {
        name: "zero_fraction_readvariableop_linear_linear_model_rm_weights_part_0"
        type: DT_RESOURCE
      }
      input_arg {
        name: "tofloat_linear_zero_fraction_total_size_size_6"
        type: DT_INT64
      }
      output_arg {
        name: "mul"
        type: DT_FLOAT
      }
      is_stateful: true
    }
    node_def {
      name: "zero_fraction/ReadVariableOp"
      op: "ReadVariableOp"
      input: "zero_fraction_readvariableop_linear_linear_model_rm_weights_part_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "zero_fraction/Size"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 1
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/LessEqual/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 2147483647
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/LessEqual"
      op: "LessEqual"
      input: "zero_fraction/Size:output:0"
      input: "zero_fraction/LessEqual/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/cond"
      op: "StatelessIf"
      input: "zero_fraction/LessEqual:z:0"
      input: "zero_fraction/ReadVariableOp:value:0"
      attr {
        key: "Tcond"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Tin"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "Tout"
        value {
          list {
            type: DT_INT64
          }
        }
      }
      attr {
        key: "_lower_using_switch_merge"
        value {
          b: true
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "else_branch"
        value {
          func {
            name: "zero_fraction_cond_false_13990"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "then_branch"
        value {
          func {
            name: "zero_fraction_cond_true_13989"
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/cond/Identity"
      op: "Identity"
      input: "zero_fraction/cond:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/sub"
      op: "Sub"
      input: "zero_fraction/Size:output:0"
      input: "zero_fraction/cond/Identity:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/Cast"
      op: "Cast"
      input: "zero_fraction/counts_to_fraction/sub:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/Cast_1"
      op: "Cast"
      input: "zero_fraction/Size:output:0"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/truediv"
      op: "RealDiv"
      input: "zero_fraction/counts_to_fraction/Cast:y:0"
      input: "zero_fraction/counts_to_fraction/Cast_1:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/fraction"
      op: "Identity"
      input: "zero_fraction/counts_to_fraction/truediv:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "ToFloat"
      op: "Cast"
      input: "tofloat_linear_zero_fraction_total_size_size_6"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "mul_0"
      op: "Mul"
      input: "zero_fraction/fraction:output:0"
      input: "ToFloat:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    ret {
      key: "mul"
      value: "mul_0:z:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
    arg_attr {
      key: 1
      value {
      }
    }
  }
  function {
    signature {
      name: "linear_zero_fraction_total_zero_zero_count_8_true_14065"
      input_arg {
        name: "placeholder"
        type: DT_RESOURCE
      }
      input_arg {
        name: "placeholder_1"
        type: DT_INT64
      }
      output_arg {
        name: "const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    ret {
      key: "const"
      value: "Const:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
    arg_attr {
      key: 1
      value {
      }
    }
  }
  function {
    signature {
      name: "zero_fraction_cond_false_13861"
      input_arg {
        name: "count_nonzero_notequal_zero_fraction_readvariableop"
        type: DT_FLOAT
      }
      output_arg {
        name: "count_nonzero_nonzero_count"
        type: DT_INT64
      }
    }
    node_def {
      name: "count_nonzero/zeros"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/NotEqual"
      op: "NotEqual"
      input: "count_nonzero_notequal_zero_fraction_readvariableop"
      input: "count_nonzero/zeros:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "count_nonzero/Cast"
      op: "Cast"
      input: "count_nonzero/NotEqual:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/nonzero_count"
      op: "Sum"
      input: "count_nonzero/Cast:y:0"
      input: "count_nonzero/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    ret {
      key: "count_nonzero_nonzero_count"
      value: "count_nonzero/nonzero_count:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
  }
  function {
    signature {
      name: "linear_zero_fraction_total_zero_zero_count_5_true_13936"
      input_arg {
        name: "placeholder"
        type: DT_RESOURCE
      }
      input_arg {
        name: "placeholder_1"
        type: DT_INT64
      }
      output_arg {
        name: "const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    ret {
      key: "const"
      value: "Const:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
    arg_attr {
      key: 1
      value {
      }
    }
  }
  function {
    signature {
      name: "zero_fraction_cond_true_13817"
      input_arg {
        name: "count_nonzero_notequal_zero_fraction_readvariableop"
        type: DT_FLOAT
      }
      output_arg {
        name: "cast"
        type: DT_INT64
      }
    }
    node_def {
      name: "count_nonzero/zeros"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/NotEqual"
      op: "NotEqual"
      input: "count_nonzero_notequal_zero_fraction_readvariableop"
      input: "count_nonzero/zeros:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "count_nonzero/Cast"
      op: "Cast"
      input: "count_nonzero/NotEqual:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/nonzero_count"
      op: "Sum"
      input: "count_nonzero/Cast:y:0"
      input: "count_nonzero/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "Cast"
      op: "Cast"
      input: "count_nonzero/nonzero_count:output:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "cast"
      value: "Cast:y:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
  }
  function {
    signature {
      name: "linear_zero_fraction_total_zero_zero_count_4_false_13894"
      input_arg {
        name: "zero_fraction_readvariableop_linear_linear_model_nox_weights_part_0"
        type: DT_RESOURCE
      }
      input_arg {
        name: "tofloat_linear_zero_fraction_total_size_size_4"
        type: DT_INT64
      }
      output_arg {
        name: "mul"
        type: DT_FLOAT
      }
      is_stateful: true
    }
    node_def {
      name: "zero_fraction/ReadVariableOp"
      op: "ReadVariableOp"
      input: "zero_fraction_readvariableop_linear_linear_model_nox_weights_part_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "zero_fraction/Size"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 1
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/LessEqual/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 2147483647
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/LessEqual"
      op: "LessEqual"
      input: "zero_fraction/Size:output:0"
      input: "zero_fraction/LessEqual/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/cond"
      op: "StatelessIf"
      input: "zero_fraction/LessEqual:z:0"
      input: "zero_fraction/ReadVariableOp:value:0"
      attr {
        key: "Tcond"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Tin"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "Tout"
        value {
          list {
            type: DT_INT64
          }
        }
      }
      attr {
        key: "_lower_using_switch_merge"
        value {
          b: true
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "else_branch"
        value {
          func {
            name: "zero_fraction_cond_false_13904"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "then_branch"
        value {
          func {
            name: "zero_fraction_cond_true_13903"
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/cond/Identity"
      op: "Identity"
      input: "zero_fraction/cond:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/sub"
      op: "Sub"
      input: "zero_fraction/Size:output:0"
      input: "zero_fraction/cond/Identity:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/Cast"
      op: "Cast"
      input: "zero_fraction/counts_to_fraction/sub:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/Cast_1"
      op: "Cast"
      input: "zero_fraction/Size:output:0"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/truediv"
      op: "RealDiv"
      input: "zero_fraction/counts_to_fraction/Cast:y:0"
      input: "zero_fraction/counts_to_fraction/Cast_1:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/fraction"
      op: "Identity"
      input: "zero_fraction/counts_to_fraction/truediv:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "ToFloat"
      op: "Cast"
      input: "tofloat_linear_zero_fraction_total_size_size_4"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "mul_0"
      op: "Mul"
      input: "zero_fraction/fraction:output:0"
      input: "ToFloat:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    ret {
      key: "mul"
      value: "mul_0:z:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
    arg_attr {
      key: 1
      value {
      }
    }
  }
  function {
    signature {
      name: "zero_fraction_cond_true_14075"
      input_arg {
        name: "count_nonzero_notequal_zero_fraction_readvariableop"
        type: DT_FLOAT
      }
      output_arg {
        name: "cast"
        type: DT_INT64
      }
    }
    node_def {
      name: "count_nonzero/zeros"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/NotEqual"
      op: "NotEqual"
      input: "count_nonzero_notequal_zero_fraction_readvariableop"
      input: "count_nonzero/zeros:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "count_nonzero/Cast"
      op: "Cast"
      input: "count_nonzero/NotEqual:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/nonzero_count"
      op: "Sum"
      input: "count_nonzero/Cast:y:0"
      input: "count_nonzero/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "Cast"
      op: "Cast"
      input: "count_nonzero/nonzero_count:output:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "cast"
      value: "Cast:y:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
  }
  function {
    signature {
      name: "linear_zero_fraction_total_zero_zero_count_4_true_13893"
      input_arg {
        name: "placeholder"
        type: DT_RESOURCE
      }
      input_arg {
        name: "placeholder_1"
        type: DT_INT64
      }
      output_arg {
        name: "const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    ret {
      key: "const"
      value: "Const:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
    arg_attr {
      key: 1
      value {
      }
    }
  }
  function {
    signature {
      name: "zero_fraction_cond_false_13990"
      input_arg {
        name: "count_nonzero_notequal_zero_fraction_readvariableop"
        type: DT_FLOAT
      }
      output_arg {
        name: "count_nonzero_nonzero_count"
        type: DT_INT64
      }
    }
    node_def {
      name: "count_nonzero/zeros"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/NotEqual"
      op: "NotEqual"
      input: "count_nonzero_notequal_zero_fraction_readvariableop"
      input: "count_nonzero/zeros:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "count_nonzero/Cast"
      op: "Cast"
      input: "count_nonzero/NotEqual:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/nonzero_count"
      op: "Sum"
      input: "count_nonzero/Cast:y:0"
      input: "count_nonzero/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    ret {
      key: "count_nonzero_nonzero_count"
      value: "count_nonzero/nonzero_count:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
  }
  function {
    signature {
      name: "zero_fraction_cond_true_13989"
      input_arg {
        name: "count_nonzero_notequal_zero_fraction_readvariableop"
        type: DT_FLOAT
      }
      output_arg {
        name: "cast"
        type: DT_INT64
      }
    }
    node_def {
      name: "count_nonzero/zeros"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/NotEqual"
      op: "NotEqual"
      input: "count_nonzero_notequal_zero_fraction_readvariableop"
      input: "count_nonzero/zeros:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "count_nonzero/Cast"
      op: "Cast"
      input: "count_nonzero/NotEqual:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/nonzero_count"
      op: "Sum"
      input: "count_nonzero/Cast:y:0"
      input: "count_nonzero/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "Cast"
      op: "Cast"
      input: "count_nonzero/nonzero_count:output:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "cast"
      value: "Cast:y:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
  }
  function {
    signature {
      name: "zero_fraction_cond_false_13904"
      input_arg {
        name: "count_nonzero_notequal_zero_fraction_readvariableop"
        type: DT_FLOAT
      }
      output_arg {
        name: "count_nonzero_nonzero_count"
        type: DT_INT64
      }
    }
    node_def {
      name: "count_nonzero/zeros"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/NotEqual"
      op: "NotEqual"
      input: "count_nonzero_notequal_zero_fraction_readvariableop"
      input: "count_nonzero/zeros:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "count_nonzero/Cast"
      op: "Cast"
      input: "count_nonzero/NotEqual:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/nonzero_count"
      op: "Sum"
      input: "count_nonzero/Cast:y:0"
      input: "count_nonzero/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    ret {
      key: "count_nonzero_nonzero_count"
      value: "count_nonzero/nonzero_count:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
  }
  function {
    signature {
      name: "zero_fraction_cond_false_13947"
      input_arg {
        name: "count_nonzero_notequal_zero_fraction_readvariableop"
        type: DT_FLOAT
      }
      output_arg {
        name: "count_nonzero_nonzero_count"
        type: DT_INT64
      }
    }
    node_def {
      name: "count_nonzero/zeros"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/NotEqual"
      op: "NotEqual"
      input: "count_nonzero_notequal_zero_fraction_readvariableop"
      input: "count_nonzero/zeros:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "count_nonzero/Cast"
      op: "Cast"
      input: "count_nonzero/NotEqual:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/nonzero_count"
      op: "Sum"
      input: "count_nonzero/Cast:y:0"
      input: "count_nonzero/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    ret {
      key: "count_nonzero_nonzero_count"
      value: "count_nonzero/nonzero_count:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
  }
  function {
    signature {
      name: "zero_fraction_cond_true_13903"
      input_arg {
        name: "count_nonzero_notequal_zero_fraction_readvariableop"
        type: DT_FLOAT
      }
      output_arg {
        name: "cast"
        type: DT_INT64
      }
    }
    node_def {
      name: "count_nonzero/zeros"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/NotEqual"
      op: "NotEqual"
      input: "count_nonzero_notequal_zero_fraction_readvariableop"
      input: "count_nonzero/zeros:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "count_nonzero/Cast"
      op: "Cast"
      input: "count_nonzero/NotEqual:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/nonzero_count"
      op: "Sum"
      input: "count_nonzero/Cast:y:0"
      input: "count_nonzero/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "Cast"
      op: "Cast"
      input: "count_nonzero/nonzero_count:output:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "cast"
      value: "Cast:y:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
  }
  function {
    signature {
      name: "linear_zero_fraction_total_zero_zero_count_6_true_13979"
      input_arg {
        name: "placeholder"
        type: DT_RESOURCE
      }
      input_arg {
        name: "placeholder_1"
        type: DT_INT64
      }
      output_arg {
        name: "const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    ret {
      key: "const"
      value: "Const:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
    arg_attr {
      key: 1
      value {
      }
    }
  }
  function {
    signature {
      name: "global_step_cond_false_13462"
      input_arg {
        name: "placeholder"
        type: DT_RESOURCE
      }
      input_arg {
        name: "global_step_initializer_zeros_0"
        type: DT_INT64
      }
      output_arg {
        name: "global_step_initializer_zeros"
        type: DT_INT64
      }
    }
    ret {
      key: "global_step_initializer_zeros"
      value: "global_step_initializer_zeros_0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
    arg_attr {
      key: 1
      value {
      }
    }
  }
  function {
    signature {
      name: "linear_zero_fraction_total_zero_zero_count_2_true_13807"
      input_arg {
        name: "placeholder"
        type: DT_RESOURCE
      }
      input_arg {
        name: "placeholder_1"
        type: DT_INT64
      }
      output_arg {
        name: "const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    ret {
      key: "const"
      value: "Const:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
    arg_attr {
      key: 1
      value {
      }
    }
  }
  function {
    signature {
      name: "linear_zero_fraction_total_zero_zero_count_7_true_14022"
      input_arg {
        name: "placeholder"
        type: DT_RESOURCE
      }
      input_arg {
        name: "placeholder_1"
        type: DT_INT64
      }
      output_arg {
        name: "const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    ret {
      key: "const"
      value: "Const:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
    arg_attr {
      key: 1
      value {
      }
    }
  }
  function {
    signature {
      name: "linear_zero_fraction_total_zero_zero_count_3_false_13851"
      input_arg {
        name: "zero_fraction_readvariableop_linear_linear_model_indus_weights_part_0"
        type: DT_RESOURCE
      }
      input_arg {
        name: "tofloat_linear_zero_fraction_total_size_size_3"
        type: DT_INT64
      }
      output_arg {
        name: "mul"
        type: DT_FLOAT
      }
      is_stateful: true
    }
    node_def {
      name: "zero_fraction/ReadVariableOp"
      op: "ReadVariableOp"
      input: "zero_fraction_readvariableop_linear_linear_model_indus_weights_part_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "zero_fraction/Size"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 1
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/LessEqual/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 2147483647
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/LessEqual"
      op: "LessEqual"
      input: "zero_fraction/Size:output:0"
      input: "zero_fraction/LessEqual/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/cond"
      op: "StatelessIf"
      input: "zero_fraction/LessEqual:z:0"
      input: "zero_fraction/ReadVariableOp:value:0"
      attr {
        key: "Tcond"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Tin"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "Tout"
        value {
          list {
            type: DT_INT64
          }
        }
      }
      attr {
        key: "_lower_using_switch_merge"
        value {
          b: true
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "else_branch"
        value {
          func {
            name: "zero_fraction_cond_false_13861"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "then_branch"
        value {
          func {
            name: "zero_fraction_cond_true_13860"
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/cond/Identity"
      op: "Identity"
      input: "zero_fraction/cond:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/sub"
      op: "Sub"
      input: "zero_fraction/Size:output:0"
      input: "zero_fraction/cond/Identity:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/Cast"
      op: "Cast"
      input: "zero_fraction/counts_to_fraction/sub:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/Cast_1"
      op: "Cast"
      input: "zero_fraction/Size:output:0"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/truediv"
      op: "RealDiv"
      input: "zero_fraction/counts_to_fraction/Cast:y:0"
      input: "zero_fraction/counts_to_fraction/Cast_1:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/fraction"
      op: "Identity"
      input: "zero_fraction/counts_to_fraction/truediv:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "ToFloat"
      op: "Cast"
      input: "tofloat_linear_zero_fraction_total_size_size_3"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "mul_0"
      op: "Mul"
      input: "zero_fraction/fraction:output:0"
      input: "ToFloat:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    ret {
      key: "mul"
      value: "mul_0:z:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
    arg_attr {
      key: 1
      value {
      }
    }
  }
  function {
    signature {
      name: "zero_fraction_cond_false_13775"
      input_arg {
        name: "count_nonzero_notequal_zero_fraction_readvariableop"
        type: DT_FLOAT
      }
      output_arg {
        name: "count_nonzero_nonzero_count"
        type: DT_INT64
      }
    }
    node_def {
      name: "count_nonzero/zeros"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/NotEqual"
      op: "NotEqual"
      input: "count_nonzero_notequal_zero_fraction_readvariableop"
      input: "count_nonzero/zeros:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "count_nonzero/Cast"
      op: "Cast"
      input: "count_nonzero/NotEqual:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/nonzero_count"
      op: "Sum"
      input: "count_nonzero/Cast:y:0"
      input: "count_nonzero/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    ret {
      key: "count_nonzero_nonzero_count"
      value: "count_nonzero/nonzero_count:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
  }
}
versions {
  producer: 119
  min_consumer: 12
}
